(*---------------------------------------------------------------------------*)
(* Full uxAS operating region message looks like the following               *)
(* (Eric Mercer dug this info out):                                          *)
(*                                                                           *)
(*  <address> $ <attributes> $ <LMCP_Object>                                 *)
(*                                                                           *)
(* where                                                                     *)
(*                                                                           *)
(*  <address> is e.g. uxas.project.isolate.IntruderAlert,                    *)
(*                    uxas.roadmonitor,  etc.                                *)
(*                                                                           *)
(*  <attributes> = <contentType>       ;; string of non "|" chars            *)
(*               | <descriptor>        ;; ditto                              *)
(*               | <source-group>      ;; ditto                              *)
(*               | <source-entity-ID>  ;; ditto                              *)
(*               | <source-service-ID> ;; ditto                              *)
(*                                                                           *)
(* (The vertical bars are included in the message text.)                     *)
(*                                                                           *)
(*  <LMCP_Object> is described below.                                        *)
(*---------------------------------------------------------------------------*)

use "contig.sml";

val operating_region = Recd [
  ("ID", i64),
  ("kiLen", u16),
  ("keep_in_areas", Array(u64, Loc(VarName "kiLen"))),
  ("koLen", u16),
  ("keep_out_areas", Array(u64, Loc(VarName "koLen")))
  ];

val LMCP_Object = Recd [
  ("controlString", i32),  (* = 0x4c4d4350 *)
  ("mesgSize",      u32),
  ("nullMesg",      Basic Bool),
  ("seriesID",      i64),
  ("mesgType",      u32),
  ("version",       u16),
  ("payload",       operating_region),
  ("checksum",      u32)
];

val attributes = Recd [
 ("contentType",      Scanner (scanTo "|")),
 ("descriptor",       Scanner (scanTo "|")),
 ("source_group",     Scanner (scanTo "|")),
 ("source_entity_ID", Scanner (scanTo "|")),
 ("source_service_ID",Scanner (scanTo "$"))
 ];

val full_mesg = Recd [
  ("address", Scanner (scanTo "$")),
  ("attributes", attributes),
  ("lmcp-object", LMCP_Object)
  ];

(*---------------------------------------------------------------------------*)
(* Set up the environment.                                                   *)
(*---------------------------------------------------------------------------*)

fun valueFn s =
 let open Regexp_Numerics
 in IntInf.toInt(string2iint Unsigned MSB s)
 end;

val E = ([],[],atomic_widths,valueFn);
      |> C add_contig_decl ("Operating_Region",operating_region);
      |> C add_contig_decl E ("Attributes",attributes);
