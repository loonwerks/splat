(* Original from uxAS CMASI.xml file

<Struct Name="KeyValuePair">
 <!-- A key (name) for the property -->
 <Field Name="Key" Type="string"/>

 <!-- A value for the property -->
 <Field Name="Value" Type="string"/>
</Struct>

<Enum Name="AltitudeType">
  <!-- Height above ground/survace level -->
  <Entry Name="AGL"/>

  <!-- Height above WGS84 ellipsoid, mean sea level -->
  <Entry Name="MSL"/>
</Enum>

<Enum Name="NavigationMode">
  <!-- standard waypoint following mode -->
  <Entry Name="Waypoint" Value="0"/>

  <!-- loiter mode, vehicle in constant orbit -->
  <Entry Name="Loiter" Value="1"/>

  <!-- flight director, vehicle following specific heading and speed commands
       without regard to waypoints -->
  <Entry Name="FlightDirector" Value="2"/>

  <!-- track target, vehicle adjusts path to maintain current target track -->
  <Entry Name="TargetTrack" Value="3"/>

  <!-- follow leader, vehicle path is maintained to remain in formation
       with a leader -->
  <Entry Name="FollowLeader" Value="4"/>

  <!-- lost comm, vehicle is out of comm range and should be executing
       lost-comm behavior -->
  <Entry Name="LostComm" Value="5"/>
</Enum>

<Struct Name="PayloadState">
  <!-- The unique id for this payload item. -->
  <Field Name="PayloadID" Type="int64" Units="None" />

  <!-- Optional parameters associated with payload state -->
  <Field Name="Parameters" Type="KeyValuePair[]" MaxArrayLength="8" />
</Struct>

<!-- Location is defined as a point in the world using the WGS84 specification
     for latitude and longitude.
-->
<Struct Name="Location3D">
  <!-- Latitude -->
  <Field Name="Latitude" Type="real64" Units="degree" />

  <!-- Longitude -->
  <Field Name="Longitude" Type="real64" Units="degree" />

  <!-- Altitude for this waypoint -->
  <Field Name="Altitude" Type="real32" Units="meter"/>

  <!-- Altitude type for specified altitude -->
  <Field Name="AltitudeType" Type="AltitudeType" Default="MSL" />
</Struct>

<!-- Reported state for an entity in the system  -->
<Struct Name="EntityState">
  <!-- A unique ID for this entity. IDs should be greater than zero -->
  <Field Name="ID" Type="int64" />

  <!-- Velocity in the body x-direction (postive out nose) -->
  <Field Name="u" Type="real32" Units="meter/sec" />

  <!-- Velocity in the body y-direction (positive out right wing) -->
  <Field Name="v" Type="real32" Units="meter/sec" />

  <!-- Velocity in the body z-direction (positve downward) -->
  <Field Name="w" Type="real32" Units="meter/sec" />

  <!-- Acceleration in the body x-direction (postive out nose) -->
  <Field Name="udot" Type="real32" Units="meter/sec/sec" />

  <!-- Acceleration in the body y-direction (positive out right wing) -->
  <Field Name="vdot" Type="real32" Units="meter/sec/sec" />

  <!-- Acceleration in the body z-direction (positve downward) -->
  <Field Name="wdot" Type="real32" Units="meter/sec/sec" />

  <!-- Angle between true North and the projection of the body x-axis in the
       North-East plane. -->
  <Field Name="Heading" Type="real32" Units="degree" />

  <!-- Pitch of vehicle around body y-axis (positive upwards) -->
  <Field Name="Pitch" Type="real32" Units="degree" />

  <!-- Roll angle of the vehicle around body x-axis (positive right wing down) -->
  <Field Name="Roll" Type="real32" Units="degree" />

  <!-- roll-rate of vehicle (angular velocity around body x-axis).
       Positive right-wing down. -->
  <Field Name="p" Type="real32" Units="degree/sec" />

  <!-- pitch rate of the vehicle (angular velocity around body y-axis).
       Positive nose-up.-->
  <Field Name="q" Type="real32" Units="degree/sec" />

  <!-- yaw rate of the vehicle (angular velocity around body z-axis).
       Positive nose right. -->
  <Field Name="r" Type="real32" Units="degree/sec" />

  <!-- Course/Groundtrack angle of the entity referenced to true North -->
  <Field Name="Course" Type="real32" Units="degrees" />

  <!-- Current entity ground speed -->
  <Field Name="Groundspeed" Type="real32" Units="m/s" />

  <!-- The perceived entity location. A valid EntityState must include Location
       (null not allowed) -->
  <Field Name="Location" Type="Location3D" Optional="false" />

  <!-- The available energy remaining, expressed in terms of the percentage
       of maximum capacity -->
  <Field Name="EnergyAvailable" Type="real32" Units="%" />

  <!-- The consumption rate of available energy, expressed in terms of
       the percentage of maximum capacity used per second. -->
  <Field Name="ActualEnergyRate" Type="real32" Units="%/sec" />

  <!-- A list of states for any onboard payloads -->
  <Field Name="PayloadStateList" Type="PayloadState[]" MaxArrayLength="8" />

  <!-- The ID of the current waypoint. Only valid if the vehicle is in
       waypoint following mode. -->
  <Field Name="CurrentWaypoint" Type="int64" Units="None" />

  <!-- Current command (VehicleActionCommand or MissionCommand) being executed.
       A value of zero denotes no command being executed, or that a command
       without an set identifier (CommandID) is being executed. -->
  <Field Name="CurrentCommand" Type="int64"/>

  <!-- The current mode for this vehicle. -->
  <Field Name="Mode" Type="NavigationMode" Units="None" />

  <!-- Tasks that this entity is currently executing.  An empty list indicates
       no associated tasks.  The task number should coincide with the task number
       in the task request.  For instance, if a waypoint is associated with a
       search task, then the task number associated with that search should be
       included in this list. -->
  <Field Name="AssociatedTasks" Type="int64[]" MaxArrayLength="8" Units="None"/>

  <!-- time stamp of this data. Time datum is defined by the application, but
       unless otherwise specified is milliseconds since 1 Jan 1970 -->
  <Field Name="Time" Type="int64" Units="millisecond" />

  <!-- A list that maps keys to values for the inclusion of extra, custom
       information about this entity -->
  <Field Name="Info" Type="KeyValuePair[]" MaxArrayLength="32" />

</Struct>

 <!-- Provides basic information regarding the vehicle state with regard to its
      location and orientation in the world, and current velocity in body axis.
      <br/>
      Provides basic state information regarding entity position, orientation,
      velocity, and acceleration. The entity body right-hand coordinate system is
      used, where X is out the nose, Y is out the right side, and Z is downward.
      The order of rotation from inertial to body coordinates is yaw-pitch-roll.
      <br/>
      The direction cosine matrix (DCM) for conversion from body to inertial
      coordinates is:
      <br/><br/>
            [cTheta*cPsi, cTheta*sPsi, -sTheta]<br/>
            [sPhi*sTheta*cPsi-cPhi*sPsi, sPhi*sTheta*sPsi+cPhi*cPsi, sPhi*cTheta]<br/>
            [cPhi*sTheta*cPsi+sPhi*sPsi, cPhi*sTheta*sPsi-sPhi*cPsi, cPhi*cTheta]
      <br/><br/>
      where, c denotes cosine and s denotes sine.
      <br/><br/>
      To convert from body to inertial velocities, use,<br/>

      [North Vel, East Vel, Down Vel]' = DCM' * [Vx, Vy, Vz]'

      where [Vx, Vy, Vz] is the body vel or accel.
-->
<Struct Name="AirVehicleState" Extends="EntityState">
  <!-- vehicle true airspeed -->
  <Field Name="Airspeed" Type="real32" Units="meter/sec" />

  <!-- Vertical speed (positive upwards) of the vehicle in the inertial
       frame (rate of change of altitude) -->
  <Field Name="VerticalSpeed" Type="real32" Units="meter/sec" />

  <!-- Wind speed as detected or computed by the vehicle -->
  <Field Name="WindSpeed" Type="real32" Units="meter/sec"/>

  <!-- Wind source direction (true) as detected or computed by the vehicle-->
  <Field Name="WindDirection" Type="real32" Units="degree"/>
</Struct>
*)

use "contig.sml";

val real32 = Basic Float;
val real64 = Basic Double;

val StringRecd =  (* varying length strings *)
  Recd [("len", u16),
        ("elts", Array(Basic Char,Loc (VarName"len")))
];

val String = Declared "String";

val KeyValuePair =
  Recd [("key",   String),
        ("value", String)];

val E = ([],[("String",String), ("KeyValuePair", KeyValuePair)],atomic_widths);

(*---------------------------------------------------------------------------*)
(* As contiguity types                                                       *)
(*---------------------------------------------------------------------------*)

val AltitudeType = Enum [("AGL",0), ("MSL",1)];

val Location3D = Recd [
  ("Latitude",     real64),      (* Units="degree" *)
  ("Longitude",    real64),      (* Units="degree" *)
  ("Altitude",     real32),      (* Units="meter"  *)
  ("AltitudeType", AltitudeType) (* Default=MSL    *)
];

val NavigationMode = Enum [
  ("Waypoint",       0),
  ("Loiter",         1),
  ("FlightDirector", 2),
  ("TargetTrack",    3),
  ("FollowLeader",   4),
  ("LostComm",       5)
]

(*---------------------------------------------------------------------------*)
(* PayLoadState .... MaxArrayLength="8"                                      *)
(*---------------------------------------------------------------------------*)

val PayLoadState = Recd [
 ("PayloadID", i64),
 ("Parameters", Array(KeyValuePair, VarName"PayLoadStateLen")
];

val Entity_State = Recd [
  (* A unique ID for this entity. IDs should be greater than zero *)
  ("ID", i64),

  (* Velocity in the body x-direction (positive out nose). Units="meter/sec" *)
  ("u", Float),

  (* Velocity in the body y-direction (positive out right wing). Units="meter/sec" *)
  ("v", Float),

  (* Velocity in the body z-direction (positve downward). Units="meter/sec" *)
  ("w", Float),

  (* Acceleration in the body x-direction (postive out nose). Units="meter/sec/sec" *)
  ("udot", real32),

  (* Acceleration in the body y-direction (positive out right wing).
     Units="meter/sec/sec"  *)
  ("vdot", real32),

  (* Acceleration in the body z-direction (positve downward). Units="meter/sec/sec" *)
  ("wdot",real32),

  (* Angle between true North and the projection of the body x-axis in the
       North-East plane. Units="degree" *)
  ("Heading",real32),

  (* Pitch of vehicle around body y-axis (positive upwards). Units="degree" *)
  ("Pitch",real32),

  (* Roll angle of the vehicle around body x-axis (positive right wing down).
     Units="degree" *)
  ("Roll" ,real32),

  (* roll-rate of vehicle (angular velocity around body x-axis).
       Positive right-wing down. Units="degree/sec" *)
  ("p" ,real32),

  (* pitch rate of the vehicle (angular velocity around body y-axis).
     Positive nose-up.  Units="degree/sec" *)
  ("q" ,real32),

  (* yaw rate of the vehicle (angular velocity around body z-axis).
       Positive nose right.  Units="degree/sec" *)
  ("r" ,real32),

  (* Course/Groundtrack angle of the entity referenced to true North.
     Units="degrees" *) *)
  ("Course" ,real32),

  (* Current entity ground speed.  Units="meters/second" *)
  ("Groundspeed",real32),

  (* The perceived entity location. A valid EntityState must include Location.
     (null not allowed) *)
  ("Location",Location3D),

  (* The available energy remaining, expressed in terms of the percentage
       of maximum capacity.  Units="%" *)
  ("EnergyAvailable" ,real32),

  (* The consumption rate of available energy, expressed in terms of
       the percentage of maximum capacity used per second. Units="%/sec" *)
  ("ActualEnergyRate" ,real32),

  (* A list of states for any onboard payloads *)
  ("PayloadStateList" ,"PayloadState[]" MaxArrayLength="8" *)

  (* The ID of the current waypoint. Only valid if the vehicle is in
     waypoint following mode. *)
  ("CurrentWaypoint" ,i64),

  (* Current command (VehicleActionCommand or MissionCommand) being executed.
       A value of zero denotes no command being executed, or that a command
       without an set identifier (CommandID) is being executed. *)
  ("CurrentCommand",i64)

  (* The current mode for this vehicle. *)
  ("Mode", NavigationMode),

  (* Tasks that this entity is currently executing.  An empty list indicates
       no associated tasks.  The task number should coincide with the task number
       in the task request.  For instance, if a waypoint is associated with a
       search task, then the task number associated with that search should be
       included in this list. *)
  ("AssociatedTasks","int64[]" MaxArrayLength="8" Units="None"*)

  (* time stamp of this data. Time datum is defined by the application, but
       unless otherwise specified is milliseconds since 1 Jan 1970 *)
  ("Time" ,"int64" Units="millisecond" *)

  (* A list that maps keys to values for the inclusion of extra, custom
       information about this entity *)
  ("Info" ,"KeyValuePair[]" MaxArrayLength="32")

(*---------------------------------------------------------------------------*)
(* And now the extension to AirVehicleState                                  *)
(*---------------------------------------------------------------------------*)

<Struct Name="AirVehicleState" Extends="EntityState">
  <!-- vehicle true airspeed -->
  <Field Name="Airspeed" Type="real32" Units="meter/sec" />

  <!-- Vertical speed (positive upwards) of the vehicle in the inertial
       frame (rate of change of altitude) -->
  <Field Name="VerticalSpeed" Type="real32" Units="meter/sec" />

  <!-- Wind speed as detected or computed by the vehicle -->
  <Field Name="WindSpeed" Type="real32" Units="meter/sec"/>

  <!-- Wind source direction (true) as detected or computed by the vehicle-->
  <Field Name="WindDirection" Type="real32" Units="degree"/>
</Struct>
