(
(Dtype (0 0 0 0 0 0) ((("'a") "option" ("Some" (Atvar "'a")) ("None" )))) 
(Dtype (0 0 0 0 0 0) ((nil "ordering" ("Greater" ) ("Equal" ) ("Less" )))) 
(Dtype (0 0 0 0 0 0) ((("'a" "'b") "sum" ("Inr" (Atvar "'b")) ("Inl" (Atvar "'a"))))) 
(Dlet (0 0 0 0 0 0) "fst" (Fun "v3" (Mat (Var (Short "v3")) (((Pcon NONE ("v2" "v1")) Var (Short "v2")))))) 
(Dlet (0 0 0 0 0 0) "snd" (Fun "v3" (Mat (Var (Short "v3")) (((Pcon NONE ("v2" "v1")) Var (Short "v1")))))) 
(Dlet (0 0 0 0 0 0) "curry" (Fun "v1" (Fun "v2" (Fun "v3" (App Opapp ((Var (Short "v1")) (Con NONE ((Var (Short "v2")) (Var (Short "v3")))))))))) 
(Dlet (0 0 0 0 0 0) "uncurry" (Fun "v1" (Fun "v2" (App Opapp ((App Opapp ((Var (Short "v1")) (App Opapp ((Var (Short "fst")) (Var (Short "v2")))))) (App Opapp ((Var (Short "snd")) (Var (Short "v2"))))))))) 
(Dlet (0 0 0 0 0 0) "o" (Fun "v2" (Fun "v3" (Fun "v1" (App Opapp ((Var (Short "v2")) (App Opapp ((Var (Short "v3")) (Var (Short "v1")))))))))) 
(Dlet (0 0 0 0 0 0) "id" (Fun "v1" (Var (Short "v1")))) 
(Dlet (0 0 0 0 0 0) "flip" (Fun "v3" (Fun "v2" (Fun "v1" (App Opapp ((App Opapp ((Var (Short "v3")) (Var (Short "v1")))) (Var (Short "v2")))))))) 
(Dlet (0 0 0 0 0 0) "const" (Fun "v2" (Fun "v1" (Var (Short "v2"))))) 
(Dlet (0 0 0 0 0 0) "update" (Fun "v3" (Fun "v4" (Fun "v2" (Fun "v1" (If (App Equality ((Var (Short "v3")) (Var (Short "v1")))) (Var (Short "v4")) (App Opapp ((Var (Short "v2")) (Var (Short "v1")))))))))) 
(Dletrec (0 0 0 0 0 0) (("exp" "v2" Fun "v3" (Fun "v1" (If (App Equality ((Var (Short "v3")) (Lit 0))) (Var (Short "v1")) (App Opapp ((App Opapp ((App Opapp ((Var (Short "exp")) (Var (Short "v2")))) (Let (SOME "k") (App OpnMinus ((Var (Short "v3")) (Lit 1))) (If (App OpbLt ((Var (Short "k")) (Lit 0))) (Lit 0) (Var (Short "k")))))) (App OpnTimes ((Var (Short "v2")) (Var (Short "v1"))))))))))) 
(Dlet (0 0 0 0 0 0) "exp" (Fun "v1" (Fun "v2" (App Opapp ((App Opapp ((App Opapp ((Var (Short "exp")) (Var (Short "v1")))) (Var (Short "v2")))) (Lit 1)))))) 
(Dlet (0 0 0 0 0 0) "min" (Fun "v1" (Fun "v2" (If (App OpbLt ((Var (Short "v1")) (Var (Short "v2")))) (Var (Short "v1")) (Var (Short "v2")))))) 
(Dlet (0 0 0 0 0 0) "max" (Fun "v1" (Fun "v2" (If (App OpbLt ((Var (Short "v1")) (Var (Short "v2")))) (Var (Short "v2")) (Var (Short "v1")))))) 
(Dlet (0 0 0 0 0 0) "even" (Fun "v1" (App Equality ((App OpnModulo ((Var (Short "v1")) (Lit 2))) (Lit 0))))) 
(Dlet (0 0 0 0 0 0) "odd" (Fun "v1" (App OpbLt ((Lit 0) (App OpnModulo ((Var (Short "v1")) (Lit 2))))))) 
(Dletrec (0 0 0 0 0 0) (("funpow" "v1" Fun "v2" (Fun "v3" (If (App Equality ((Var (Short "v2")) (Lit 0))) (Var (Short "v3")) (App Opapp ((App Opapp ((App Opapp ((Var (Short "funpow")) (Var (Short "v1")))) (Let (SOME "k") (App OpnMinus ((Var (Short "v2")) (Lit 1))) (If (App OpbLt ((Var (Short "k")) (Lit 0))) (Lit 0) (Var (Short "k")))))) (App Opapp ((Var (Short "v1")) (Var (Short "v3"))))))))))) 
(Dlet (0 0 0 0 0 0) "abs_diff" (Fun "v2" (Fun "v1" (If (App OpbLt ((Var (Short "v2")) (Var (Short "v1")))) (Let (SOME "k") (App OpnMinus ((Var (Short "v1")) (Var (Short "v2")))) (If (App OpbLt ((Var (Short "k")) (Lit 0))) (Lit 0) (Var (Short "k")))) (Let (SOME "k") (App OpnMinus ((Var (Short "v2")) (Var (Short "v1")))) (If (App OpbLt ((Var (Short "k")) (Lit 0))) (Lit 0) (Var (Short "k")))))))) 
(Dlet (0 0 0 0 0 0) "pre" (Fun "v1" (Let (SOME "k") (App OpnMinus ((Var (Short "v1")) (Lit 1))) (If (App OpbLt ((Var (Short "k")) (Lit 0))) (Lit 0) (Var (Short "k")))))) 
(Dletrec (0 0 0 0 0 0) (("while" "v1" Fun "v2" (Fun "v3" (If (App Opapp ((Var (Short "v1")) (Var (Short "v3")))) (App Opapp ((App Opapp ((App Opapp ((Var (Short "while")) (Var (Short "v1")))) (Var (Short "v2")))) (App Opapp ((Var (Short "v2")) (Var (Short "v3")))))) (Var (Short "v3"))))))) 
(Dletrec (0 0 0 0 0 0) (("owhile" "v1" Fun "v2" (Fun "v3" (If (App Opapp ((Var (Short "v1")) (Var (Short "v3")))) (App Opapp ((App Opapp ((App Opapp ((Var (Short "owhile")) (Var (Short "v1")))) (Var (Short "v2")))) (App Opapp ((Var (Short "v2")) (Var (Short "v3")))))) (Con (SOME (Short "Some")) ((Var (Short "v3"))))))))) 
(Dlet (0 0 0 0 0 0) "least" (Fun "v3" (App Opapp ((App Opapp ((App Opapp ((Var (Short "while")) (Fun "v1" (App Equality ((App Opapp ((Var (Short "v3")) (Var (Short "v1")))) (App OpbLt ((Lit 0) (Lit 0)))))))) (Fun "v2" (App OpnPlus ((Var (Short "v2")) (Lit 1)))))) (Lit 0))))) 
(Dletrec (0 0 0 0 0 0) (("repeat" "f" Fun "x" (Let (SOME "a") (App Opapp ((Var (Short "f")) (Var (Short "x")))) (App Opapp ((App Opapp ((Var (Short "repeat")) (Var (Short "f")))) (Var (Short "a")))))))) 
(Dmod "Runtime" ((Dtabbrev (0 0 0 0 0 0) nil "unit" (Attup nil)) (Dlet (0 0 0 0 0 0) "fullGC" (Fun "v1" (Mat (Var (Short "v1")) (((Pcon NONE nil) App ConfigGC ((Lit 0) (Lit 0))))))) (Dlet (0 0 0 0 0 0) "fail" (Fun "v1" (Mat (Var (Short "v1")) (((Pcon NONE nil) Let (SOME "a") (Var (Short "v1")) (Let (SOME "n") (Lit 18446744073709551616) (Let NONE (App Aalloc ((Var (Short "n")) (Var (Short "n")))) (Var (Short "a"))))))))) (Dlet (0 0 0 0 0 0) "debugMsg" (Fun "v1" (App (FFI . "") ((Var (Short "v1")) (App Aw8alloc ((Lit 0) (Lit (word8 0)))))))) (Dletrec (0 0 0 0 0 0) (("exit" "i" Let (SOME "y") (App W8fromInt ((Var (Short "i")))) (Let (SOME "x") (App Aw8alloc ((Lit 1) (Var (Short "y")))) (App (FFI . "exit") ((Lit "") (Var (Short "x")))))))) (Dletrec (0 0 0 0 0 0) (("abort" "u" Mat (Var (Short "u")) (((Pcon NONE nil) App Opapp ((Var (Short "exit")) (Lit 1))))))))) 
(Dmod "Option" ((Dtabbrev (0 0 0 0 0 0) ("'a") "option" (Atapp ((Atvar "'a")) (Short "option"))) (Dlet (0 0 0 0 0 0) "getOpt" (Fun "v3" (Fun "v2" (Mat (Var (Short "v3")) (((Pcon (SOME (Short "None")) nil) Var (Short "v2")) ((Pcon (SOME (Short "Some")) ("v1")) Var (Short "v1"))))))) (Dlet (0 0 0 0 0 0) "isSome" (Fun "v2" (Mat (Var (Short "v2")) (((Pcon (SOME (Short "None")) nil) App OpbLt ((Lit 0) (Lit 0))) ((Pcon (SOME (Short "Some")) ("v1")) App OpbLeq ((Lit 0) (Lit 0))))))) (Dlet (0 0 0 0 0 0) "valOf" (Fun "x0" (Mat (Var (Short "x0")) (((Pcon (SOME (Short "None")) nil) Raise (Con (SOME (Short "Bind")) nil)) ((Pcon (SOME (Short "Some")) ("v1")) Var (Short "v1")))))) (Dlet (0 0 0 0 0 0) "join" (Fun "v2" (Mat (Var (Short "v2")) (((Pcon (SOME (Short "None")) nil) Con (SOME (Short "None")) nil) ((Pcon (SOME (Short "Some")) ("v1")) Var (Short "v1")))))) (Dlet (0 0 0 0 0 0) "map" (Fun "v2" (Fun "v3" (Mat (Var (Short "v3")) (((Pcon (SOME (Short "None")) nil) Con (SOME (Short "None")) nil) ((Pcon (SOME (Short "Some")) ("v1")) Con (SOME (Short "Some")) ((App Opapp ((Var (Short "v2")) (Var (Short "v1"))))))))))) (Dlet (0 0 0 0 0 0) "mapPartial" (Fun "v2" (Fun "v3" (Mat (Var (Short "v3")) (((Pcon (SOME (Short "None")) nil) Con (SOME (Short "None")) nil) ((Pcon (SOME (Short "Some")) ("v1")) App Opapp ((Var (Short "v2")) (Var (Short "v1"))))))))) (Dlet (0 0 0 0 0 0) "compose" (Fun "v3" (Fun "v4" (Fun "v2" (Mat (App Opapp ((Var (Short "v4")) (Var (Short "v2")))) (((Pcon (SOME (Short "None")) nil) Con (SOME (Short "None")) nil) ((Pcon (SOME (Short "Some")) ("v1")) Con (SOME (Short "Some")) ((App Opapp ((Var (Short "v3")) (Var (Short "v1")))))))))))) (Dlet (0 0 0 0 0 0) "composePartial" (Fun "v3" (Fun "v4" (Fun "v2" (Mat (App Opapp ((Var (Short "v4")) (Var (Short "v2")))) (((Pcon (SOME (Short "None")) nil) Con (SOME (Short "None")) nil) ((Pcon (SOME (Short "Some")) ("v1")) App Opapp ((Var (Short "v3")) (Var (Short "v1")))))))))) (Dlet (0 0 0 0 0 0) "isNone" (Fun "v2" (Mat (Var (Short "v2")) (((Pcon (SOME (Short "None")) nil) App OpbLeq ((Lit 0) (Lit 0))) ((Pcon (SOME (Short "Some")) ("v1")) App OpbLt ((Lit 0) (Lit 0))))))) (Dlet (0 0 0 0 0 0) "map2" (Fun "v1" (Fun "v2" (Fun "v3" (If (Log And (App Opapp ((Var (Short "isSome")) (Var (Short "v2")))) (App Opapp ((Var (Short "isSome")) (Var (Short "v3"))))) (Con (SOME (Short "Some")) ((App Opapp ((App Opapp ((Var (Short "v1")) (App Opapp ((Var (Short "valOf")) (Var (Short "v2")))))) (App Opapp ((Var (Short "valOf")) (Var (Short "v3")))))))) (Con (SOME (Short "None")) nil)))))) (Dlet (0 0 0 0 0 0) "compare" (Fun "v4" (Fun "v5" (Fun "v6" (Mat (Var (Short "v5")) (((Pcon (SOME (Short "None")) nil) Mat (Var (Short "v6")) (((Pcon (SOME (Short "None")) nil) Con (SOME (Short "Equal")) nil) ((Pcon (SOME (Short "Some")) ("v1")) Con (SOME (Short "Less")) nil))) ((Pcon (SOME (Short "Some")) ("v3")) Mat (Var (Short "v6")) (((Pcon (SOME (Short "None")) nil) Con (SOME (Short "Greater")) nil) ((Pcon (SOME (Short "Some")) ("v2")) App Opapp ((App Opapp ((Var (Short "v4")) (Var (Short "v3")))) (Var (Short "v2")))))))))))))) 
(Dmod "List" ((Dtabbrev (0 0 0 0 0 0) ("'a") "list" (Atapp ((Atvar "'a")) (Short "list"))) (Dlet (0 0 0 0 0 0) "null" (Fun "v3" (Mat (Var (Short "v3")) (((Pcon (SOME (Short "[]")) nil) App OpbLeq ((Lit 0) (Lit 0))) ((Pcon (SOME (Short "::")) ("v2" "v1")) App OpbLt ((Lit 0) (Lit 0))))))) (Dlocal ((Dletrec (0 0 0 0 0 0) (("length_aux" "v3" Fun "v4" (Mat (Var (Short "v3")) (((Pcon (SOME (Short "[]")) nil) Var (Short "v4")) ((Pcon (SOME (Short "::")) ("v2" "v1")) App Opapp ((App Opapp ((Var (Short "length_aux")) (Var (Short "v1")))) (App OpnPlus ((Var (Short "v4")) (Lit 1))))))))))) ((Dlet (0 0 0 0 0 0) "length" (Fun "v1" (App Opapp ((App Opapp ((Var (Short "length_aux")) (Var (Short "v1")))) (Lit 0))))) (Dlocal ((Dletrec (0 0 0 0 0 0) (("rev" "v4" Fun "v3" (Mat (Var (Short "v4")) (((Pcon (SOME (Short "[]")) nil) Var (Short "v3")) ((Pcon (SOME (Short "::")) ("v2" "v1")) App Opapp ((App Opapp ((Var (Short "rev")) (Var (Short "v1")))) (Con (SOME (Short "::")) ((Var (Short "v2")) (Var (Short "v3")))))))))))) ((Dlet (0 0 0 0 0 0) "rev" (Fun "v1" (App Opapp ((App Opapp ((Var (Short "rev")) (Var (Short "v1")))) (Con (SOME (Short "[]")) nil))))) (Dlet (0 0 0 0 0 0) "@" (Fun "v1" (Fun "v2" (App ListAppend ((Var (Short "v1")) (Var (Short "v2"))))))) (Dlet (0 0 0 0 0 0) "hd" (Fun "x0" (Mat (Var (Short "x0")) (((Pcon (SOME (Short "[]")) nil) Raise (Con (SOME (Short "Bind")) nil)) ((Pcon (SOME (Short "::")) ("v2" "v1")) Var (Short "v2")))))) (Dlet (0 0 0 0 0 0) "tl" (Fun "v3" (Mat (Var (Short "v3")) (((Pcon (SOME (Short "[]")) nil) Con (SOME (Short "[]")) nil) ((Pcon (SOME (Short "::")) ("v2" "v1")) Var (Short "v1")))))) (Dletrec (0 0 0 0 0 0) (("last" "x0" Mat (Var (Short "x0")) (((Pcon (SOME (Short "[]")) nil) Raise (Con (SOME (Short "Bind")) nil)) ((Pcon (SOME (Short "::")) ("v2" "v1")) If (App Equality ((Var (Short "v1")) (Con (SOME (Short "[]")) nil))) (Var (Short "v2")) (App Opapp ((Var (Short "last")) (Var (Short "v1"))))))))) (Dlet (0 0 0 0 0 0) "getItem" (Fun "v3" (Mat (Var (Short "v3")) (((Pcon (SOME (Short "[]")) nil) Con (SOME (Short "None")) nil) ((Pcon (SOME (Short "::")) ("v2" "v1")) Con (SOME (Short "Some")) ((Con NONE ((Var (Short "v2")) (Var (Short "v1")))))))))) (Dletrec (0 0 0 0 0 0) (("nth" "v1" Fun "v2" (If (App Equality ((Var (Short "v2")) (Lit 0))) (App Opapp ((Var (Short "hd")) (Var (Short "v1")))) (App Opapp ((App Opapp ((Var (Short "nth")) (App Opapp ((Var (Short "tl")) (Var (Short "v1")))))) (Let (SOME "k") (App OpnMinus ((Var (Short "v2")) (Lit 1))) (If (App OpbLt ((Var (Short "k")) (Lit 0))) (Lit 0) (Var (Short "k")))))))))) (Dletrec (0 0 0 0 0 0) (("take" "v3" Fun "v4" (Mat (Var (Short "v3")) (((Pcon (SOME (Short "[]")) nil) Con (SOME (Short "[]")) nil) ((Pcon (SOME (Short "::")) ("v2" "v1")) If (App Equality ((Var (Short "v4")) (Lit 0))) (Con (SOME (Short "[]")) nil) (Con (SOME (Short "::")) ((Var (Short "v2")) (App Opapp ((App Opapp ((Var (Short "take")) (Var (Short "v1")))) (Let (SOME "k") (App OpnMinus ((Var (Short "v4")) (Lit 1))) (If (App OpbLt ((Var (Short "k")) (Lit 0))) (Lit 0) (Var (Short "k")))))))))))))) (Dletrec (0 0 0 0 0 0) (("drop" "v3" Fun "v4" (Mat (Var (Short "v3")) (((Pcon (SOME (Short "[]")) nil) Con (SOME (Short "[]")) nil) ((Pcon (SOME (Short "::")) ("v2" "v1")) If (App Equality ((Var (Short "v4")) (Lit 0))) (Con (SOME (Short "::")) ((Var (Short "v2")) (Var (Short "v1")))) (App Opapp ((App Opapp ((Var (Short "drop")) (Var (Short "v1")))) (Let (SOME "k") (App OpnMinus ((Var (Short "v4")) (Lit 1))) (If (App OpbLt ((Var (Short "k")) (Lit 0))) (Lit 0) (Var (Short "k")))))))))))) (Dletrec (0 0 0 0 0 0) (("takeUntil" "v3" Fun "v4" (Mat (Var (Short "v4")) (((Pcon (SOME (Short "[]")) nil) Con (SOME (Short "[]")) nil) ((Pcon (SOME (Short "::")) ("v2" "v1")) If (App Opapp ((Var (Short "v3")) (Var (Short "v2")))) (Con (SOME (Short "[]")) nil) (Con (SOME (Short "::")) ((Var (Short "v2")) (App Opapp ((App Opapp ((Var (Short "takeUntil")) (Var (Short "v3")))) (Var (Short "v1")))))))))))) (Dletrec (0 0 0 0 0 0) (("dropUntil" "v3" Fun "v4" (Mat (Var (Short "v4")) (((Pcon (SOME (Short "[]")) nil) Con (SOME (Short "[]")) nil) ((Pcon (SOME (Short "::")) ("v2" "v1")) If (App Opapp ((Var (Short "v3")) (Var (Short "v2")))) (Con (SOME (Short "::")) ((Var (Short "v2")) (Var (Short "v1")))) (App Opapp ((App Opapp ((Var (Short "dropUntil")) (Var (Short "v3")))) (Var (Short "v1")))))))))) (Dletrec (0 0 0 0 0 0) (("cmp" "v7" Fun "v8" (Fun "v9" (Mat (Var (Short "v8")) (((Pcon (SOME (Short "[]")) nil) Mat (Var (Short "v9")) (((Pcon (SOME (Short "[]")) nil) Con (SOME (Short "Equal")) nil) ((Pcon (SOME (Short "::")) ("v2" "v1")) Con (SOME (Short "Less")) nil))) ((Pcon (SOME (Short "::")) ("v6" "v5")) Mat (Var (Short "v9")) (((Pcon (SOME (Short "[]")) nil) Con (SOME (Short "Greater")) nil) ((Pcon (SOME (Short "::")) ("v4" "v3")) Mat (App Opapp ((App Opapp ((Var (Short "v7")) (Var (Short "v6")))) (Var (Short "v4")))) (((Pcon (SOME (Short "Less")) nil) Con (SOME (Short "Less")) nil) ((Pcon (SOME (Short "Equal")) nil) App Opapp ((App Opapp ((App Opapp ((Var (Short "cmp")) (Var (Short "v7")))) (Var (Short "v5")))) (Var (Short "v3")))) ((Pcon (SOME (Short "Greater")) nil) Con (SOME (Short "Greater")) nil))))))))))) (Dletrec (0 0 0 0 0 0) (("concat" "v3" Mat (Var (Short "v3")) (((Pcon (SOME (Short "[]")) nil) Con (SOME (Short "[]")) nil) ((Pcon (SOME (Short "::")) ("v2" "v1")) App ListAppend ((Var (Short "v2")) (App Opapp ((Var (Short "concat")) (Var (Short "v1")))))))))) (Dletrec (0 0 0 0 0 0) (("map" "v4" Fun "v5" (Mat (Var (Short "v5")) (((Pcon (SOME (Short "[]")) nil) Con (SOME (Short "[]")) nil) ((Pcon (SOME (Short "::")) ("v3" "v2")) Let (SOME "v1") (App Opapp ((Var (Short "v4")) (Var (Short "v3")))) (Con (SOME (Short "::")) ((Var (Short "v1")) (App Opapp ((App Opapp ((Var (Short "map")) (Var (Short "v4")))) (Var (Short "v2")))))))))))) (Dlocal ((Dletrec (0 0 0 0 0 0) (("mapi" "v4" Fun "v5" (Fun "v6" (Mat (Var (Short "v6")) (((Pcon (SOME (Short "[]")) nil) Con (SOME (Short "[]")) nil) ((Pcon (SOME (Short "::")) ("v3" "v2")) Let (SOME "v1") (App Opapp ((App Opapp ((Var (Short "v4")) (Var (Short "v5")))) (Var (Short "v3")))) (Con (SOME (Short "::")) ((Var (Short "v1")) (App Opapp ((App Opapp ((App Opapp ((Var (Short "mapi")) (Var (Short "v4")))) (App OpnPlus ((Var (Short "v5")) (Lit 1))))) (Var (Short "v2")))))))))))))) ((Dlet (0 0 0 0 0 0) "mapi" (Fun "v1" (Fun "v2" (App Opapp ((App Opapp ((App Opapp ((Var (Short "mapi")) (Var (Short "v1")))) (Lit 0))) (Var (Short "v2"))))))) (Dletrec (0 0 0 0 0 0) (("mapPartial" "v4" Fun "v5" (Mat (Var (Short "v5")) (((Pcon (SOME (Short "[]")) nil) Con (SOME (Short "[]")) nil) ((Pcon (SOME (Short "::")) ("v3" "v2")) Mat (App Opapp ((Var (Short "v4")) (Var (Short "v3")))) (((Pcon (SOME (Short "None")) nil) App Opapp ((App Opapp ((Var (Short "mapPartial")) (Var (Short "v4")))) (Var (Short "v2")))) ((Pcon (SOME (Short "Some")) ("v1")) Con (SOME (Short "::")) ((Var (Short "v1")) (App Opapp ((App Opapp ((Var (Short "mapPartial")) (Var (Short "v4")))) (Var (Short "v2"))))))))))))) (Dletrec (0 0 0 0 0 0) (("app" "f" Fun "ls" (Mat (Var (Short "ls")) (((Pcon (SOME (Short "[]")) nil) Con NONE nil) ((Pcon (SOME (Short "::")) ("x" "xs")) Let NONE (App Opapp ((Var (Short "f")) (Var (Short "x")))) (App Opapp ((App Opapp ((Var (Short "app")) (Var (Short "f")))) (Var (Short "xs")))))))))) (Dletrec (0 0 0 0 0 0) (("find" "v3" Fun "v4" (Mat (Var (Short "v4")) (((Pcon (SOME (Short "[]")) nil) Con (SOME (Short "None")) nil) ((Pcon (SOME (Short "::")) ("v2" "v1")) If (App Opapp ((Var (Short "v3")) (Var (Short "v2")))) (Con (SOME (Short "Some")) ((Var (Short "v2")))) (App Opapp ((App Opapp ((Var (Short "find")) (Var (Short "v3")))) (Var (Short "v1")))))))))) (Dletrec (0 0 0 0 0 0) (("filter" "v3" Fun "v4" (Mat (Var (Short "v4")) (((Pcon (SOME (Short "[]")) nil) Con (SOME (Short "[]")) nil) ((Pcon (SOME (Short "::")) ("v2" "v1")) If (App Opapp ((Var (Short "v3")) (Var (Short "v2")))) (Con (SOME (Short "::")) ((Var (Short "v2")) (App Opapp ((App Opapp ((Var (Short "filter")) (Var (Short "v3")))) (Var (Short "v1")))))) (App Opapp ((App Opapp ((Var (Short "filter")) (Var (Short "v3")))) (Var (Short "v1")))))))))) (Dlocal ((Dletrec (0 0 0 0 0 0) (("partition_aux" "v3" Fun "v5" (Fun "v6" (Fun "v4" (Mat (Var (Short "v5")) (((Pcon (SOME (Short "[]")) nil) Con NONE ((App Opapp ((Var (Short "rev")) (Var (Short "v6")))) (App Opapp ((Var (Short "rev")) (Var (Short "v4")))))) ((Pcon (SOME (Short "::")) ("v2" "v1")) If (App Opapp ((Var (Short "v3")) (Var (Short "v2")))) (App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "partition_aux")) (Var (Short "v3")))) (Var (Short "v1")))) (Con (SOME (Short "::")) ((Var (Short "v2")) (Var (Short "v6")))))) (Var (Short "v4")))) (App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "partition_aux")) (Var (Short "v3")))) (Var (Short "v1")))) (Var (Short "v6")))) (Con (SOME (Short "::")) ((Var (Short "v2")) (Var (Short "v4"))))))))))))))) ((Dlet (0 0 0 0 0 0) "partition" (Fun "v1" (Fun "v2" (App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "partition_aux")) (Var (Short "v1")))) (Var (Short "v2")))) (Con (SOME (Short "[]")) nil))) (Con (SOME (Short "[]")) nil)))))) (Dletrec (0 0 0 0 0 0) (("foldl" "v4" Fun "v3" (Fun "v5" (Mat (Var (Short "v5")) (((Pcon (SOME (Short "[]")) nil) Var (Short "v3")) ((Pcon (SOME (Short "::")) ("v2" "v1")) App Opapp ((App Opapp ((App Opapp ((Var (Short "foldl")) (Var (Short "v4")))) (App Opapp ((App Opapp ((Var (Short "v4")) (Var (Short "v3")))) (Var (Short "v2")))))) (Var (Short "v1")))))))))) (Dlocal ((Dletrec (0 0 0 0 0 0) (("foldli_aux" "v4" Fun "v3" (Fun "v5" (Fun "v6" (Mat (Var (Short "v6")) (((Pcon (SOME (Short "[]")) nil) Var (Short "v3")) ((Pcon (SOME (Short "::")) ("v2" "v1")) App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "foldli_aux")) (Var (Short "v4")))) (App Opapp ((App Opapp ((App Opapp ((Var (Short "v4")) (Var (Short "v5")))) (Var (Short "v2")))) (Var (Short "v3")))))) (App OpnPlus ((Var (Short "v5")) (Lit 1))))) (Var (Short "v1")))))))))))) ((Dlet (0 0 0 0 0 0) "foldi" (Fun "v2" (Fun "v1" (Fun "v3" (App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "foldli_aux")) (Var (Short "v2")))) (Var (Short "v1")))) (Lit 0))) (Var (Short "v3")))))))) (Dletrec (0 0 0 0 0 0) (("foldr" "v4" Fun "v3" (Fun "v5" (Mat (Var (Short "v5")) (((Pcon (SOME (Short "[]")) nil) Var (Short "v3")) ((Pcon (SOME (Short "::")) ("v2" "v1")) App Opapp ((App Opapp ((Var (Short "v4")) (Var (Short "v2")))) (App Opapp ((App Opapp ((App Opapp ((Var (Short "foldr")) (Var (Short "v4")))) (Var (Short "v3")))) (Var (Short "v1")))))))))))) (Dletrec (0 0 0 0 0 0) (("foldri" "v5" Fun "v4" (Fun "v6" (Mat (Var (Short "v6")) (((Pcon (SOME (Short "[]")) nil) Var (Short "v4")) ((Pcon (SOME (Short "::")) ("v3" "v2")) App Opapp ((App Opapp ((App Opapp ((Var (Short "v5")) (Lit 0))) (Var (Short "v3")))) (App Opapp ((App Opapp ((App Opapp ((Var (Short "foldri")) (Fun "v1" (App Opapp ((Var (Short "v5")) (App OpnPlus ((Var (Short "v1")) (Lit 1)))))))) (Var (Short "v4")))) (Var (Short "v2")))))))))))) (Dletrec (0 0 0 0 0 0) (("exists" "v3" Fun "v4" (Mat (Var (Short "v4")) (((Pcon (SOME (Short "[]")) nil) App OpbLt ((Lit 0) (Lit 0))) ((Pcon (SOME (Short "::")) ("v2" "v1")) Log Or (App Opapp ((Var (Short "v3")) (Var (Short "v2")))) (App Opapp ((App Opapp ((Var (Short "exists")) (Var (Short "v3")))) (Var (Short "v1")))))))))) (Dletrec (0 0 0 0 0 0) (("all" "v3" Fun "v4" (Mat (Var (Short "v4")) (((Pcon (SOME (Short "[]")) nil) App OpbLeq ((Lit 0) (Lit 0))) ((Pcon (SOME (Short "::")) ("v2" "v1")) Log And (App Opapp ((Var (Short "v3")) (Var (Short "v2")))) (App Opapp ((App Opapp ((Var (Short "all")) (Var (Short "v3")))) (Var (Short "v1")))))))))) (Dletrec (0 0 0 0 0 0) (("snoc" "v4" Fun "v3" (Mat (Var (Short "v3")) (((Pcon (SOME (Short "[]")) nil) Con (SOME (Short "::")) ((Var (Short "v4")) (Con (SOME (Short "[]")) nil))) ((Pcon (SOME (Short "::")) ("v2" "v1")) Con (SOME (Short "::")) ((Var (Short "v2")) (App Opapp ((App Opapp ((Var (Short "snoc")) (Var (Short "v4")))) (Var (Short "v1"))))))))))) (Dlocal ((Dletrec (0 0 0 0 0 0) (("genlist_aux" "v1" Fun "v3" (Fun "v2" (If (App Equality ((Var (Short "v3")) (Lit 0))) (Var (Short "v2")) (App Opapp ((App Opapp ((App Opapp ((Var (Short "genlist_aux")) (Var (Short "v1")))) (Let (SOME "k") (App OpnMinus ((Var (Short "v3")) (Lit 1))) (If (App OpbLt ((Var (Short "k")) (Lit 0))) (Lit 0) (Var (Short "k")))))) (Con (SOME (Short "::")) ((App Opapp ((Var (Short "v1")) (Let (SOME "k") (App OpnMinus ((Var (Short "v3")) (Lit 1))) (If (App OpbLt ((Var (Short "k")) (Lit 0))) (Lit 0) (Var (Short "k")))))) (Var (Short "v2")))))))))))) ((Dlet (0 0 0 0 0 0) "genlist" (Fun "v1" (Fun "v2" (App Opapp ((App Opapp ((App Opapp ((Var (Short "genlist_aux")) (Var (Short "v1")))) (Var (Short "v2")))) (Con (SOME (Short "[]")) nil)))))) (Dletrec (0 0 0 0 0 0) (("tabulate" "v8" Fun "v7" (Fun "v6" (Fun "v5" (Let (SOME "v4") (App OpbGeq ((Var (Short "v8")) (Var (Short "v7")))) (If (Var (Short "v4")) (App Opapp ((Var (Short "rev")) (Var (Short "v5")))) (Let (SOME "v3") (App Opapp ((Var (Short "v6")) (Var (Short "v8")))) (Let (SOME "v2") (App OpnPlus ((Var (Short "v8")) (Lit 1))) (Let (SOME "v1") (Con (SOME (Short "::")) ((Var (Short "v3")) (Var (Short "v5")))) (App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "tabulate")) (Var (Short "v2")))) (Var (Short "v7")))) (Var (Short "v6")))) (Var (Short "v1")))))))))))))) (Dlet (0 0 0 0 0 0) "tabulate" (Fun "v3" (Fun "v2" (Let (SOME "v1") (Con (SOME (Short "[]")) nil) (App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "tabulate")) (Lit 0))) (Var (Short "v3")))) (Var (Short "v2")))) (Var (Short "v1")))))))) (Dletrec (0 0 0 0 0 0) (("collate" "v7" Fun "v8" (Fun "v9" (Mat (Var (Short "v8")) (((Pcon (SOME (Short "[]")) nil) Mat (Var (Short "v9")) (((Pcon (SOME (Short "[]")) nil) Con (SOME (Short "Equal")) nil) ((Pcon (SOME (Short "::")) ("v2" "v1")) Con (SOME (Short "Less")) nil))) ((Pcon (SOME (Short "::")) ("v6" "v5")) Mat (Var (Short "v9")) (((Pcon (SOME (Short "[]")) nil) Con (SOME (Short "Greater")) nil) ((Pcon (SOME (Short "::")) ("v4" "v3")) If (App Equality ((App Opapp ((App Opapp ((Var (Short "v7")) (Var (Short "v6")))) (Var (Short "v4")))) (Con (SOME (Short "Equal")) nil))) (App Opapp ((App Opapp ((App Opapp ((Var (Short "collate")) (Var (Short "v7")))) (Var (Short "v5")))) (Var (Short "v3")))) (App Opapp ((App Opapp ((Var (Short "v7")) (Var (Short "v6")))) (Var (Short "v4"))))))))))))) (Dletrec (0 0 0 0 0 0) (("zip" "v9" Mat (Var (Short "v9")) (((Pcon NONE ("v8" "v7")) Mat (Var (Short "v8")) (((Pcon (SOME (Short "[]")) nil) Mat (Var (Short "v7")) (((Pcon (SOME (Short "[]")) nil) Con (SOME (Short "[]")) nil) ((Pcon (SOME (Short "::")) ("v2" "v1")) Con (SOME (Short "[]")) nil))) ((Pcon (SOME (Short "::")) ("v6" "v5")) Mat (Var (Short "v7")) (((Pcon (SOME (Short "[]")) nil) Con (SOME (Short "[]")) nil) ((Pcon (SOME (Short "::")) ("v4" "v3")) Con (SOME (Short "::")) ((Con NONE ((Var (Short "v6")) (Var (Short "v4")))) (App Opapp ((Var (Short "zip")) (Con NONE ((Var (Short "v5")) (Var (Short "v3")))))))))))))))) (Dletrec (0 0 0 0 0 0) (("member" "v4" Fun "v3" (Mat (Var (Short "v3")) (((Pcon (SOME (Short "[]")) nil) App OpbLt ((Lit 0) (Lit 0))) ((Pcon (SOME (Short "::")) ("v2" "v1")) Log Or (App Equality ((Var (Short "v4")) (Var (Short "v2")))) (App Opapp ((App Opapp ((Var (Short "member")) (Var (Short "v4")))) (Var (Short "v1")))))))))) (Dletrec (0 0 0 0 0 0) (("sum" "v3" Mat (Var (Short "v3")) (((Pcon (SOME (Short "[]")) nil) Lit 0) ((Pcon (SOME (Short "::")) ("v2" "v1")) App OpnPlus ((Var (Short "v2")) (App Opapp ((Var (Short "sum")) (Var (Short "v1")))))))))) (Dletrec (0 0 0 0 0 0) (("unzip" "v3" Mat (Var (Short "v3")) (((Pcon (SOME (Short "[]")) nil) Con NONE ((Con (SOME (Short "[]")) nil) (Con (SOME (Short "[]")) nil))) ((Pcon (SOME (Short "::")) ("v2" "v1")) Con NONE ((Con (SOME (Short "::")) ((App Opapp ((Var (Short "fst")) (Var (Short "v2")))) (App Opapp ((Var (Short "fst")) (App Opapp ((Var (Short "unzip")) (Var (Short "v1")))))))) (Con (SOME (Short "::")) ((App Opapp ((Var (Short "snd")) (Var (Short "v2")))) (App Opapp ((Var (Short "snd")) (App Opapp ((Var (Short "unzip")) (Var (Short "v1")))))))))))))) (Dlet (0 0 0 0 0 0) "pad_right" (Fun "v1" (Fun "v2" (Fun "v3" (App ListAppend ((Var (Short "v3")) (App Opapp ((App Opapp ((Var (Short "genlist")) (App Opapp ((Var (Short "const")) (Var (Short "v1")))))) (Let (SOME "k") (App OpnMinus ((Var (Short "v2")) (App Opapp ((Var (Short "length")) (Var (Short "v3")))))) (If (App OpbLt ((Var (Short "k")) (Lit 0))) (Lit 0) (Var (Short "k")))))))))))) (Dlet (0 0 0 0 0 0) "pad_left" (Fun "v1" (Fun "v2" (Fun "v3" (App ListAppend ((App Opapp ((App Opapp ((Var (Short "genlist")) (App Opapp ((Var (Short "const")) (Var (Short "v1")))))) (Let (SOME "k") (App OpnMinus ((Var (Short "v2")) (App Opapp ((Var (Short "length")) (Var (Short "v3")))))) (If (App OpbLt ((Var (Short "k")) (Lit 0))) (Lit 0) (Var (Short "k")))))) (Var (Short "v3")))))))) (Dletrec (0 0 0 0 0 0) (("all_distinct" "v3" Mat (Var (Short "v3")) (((Pcon (SOME (Short "[]")) nil) App OpbLeq ((Lit 0) (Lit 0))) ((Pcon (SOME (Short "::")) ("v2" "v1")) Log And (App Equality ((App Opapp ((App Opapp ((Var (Short "member")) (Var (Short "v2")))) (Var (Short "v1")))) (App OpbLt ((Lit 0) (Lit 0))))) (App Opapp ((Var (Short "all_distinct")) (Var (Short "v1"))))))))) (Dletrec (0 0 0 0 0 0) (("isPrefix" "v5" Fun "v6" (Mat (Var (Short "v5")) (((Pcon (SOME (Short "[]")) nil) App OpbLeq ((Lit 0) (Lit 0))) ((Pcon (SOME (Short "::")) ("v4" "v3")) Mat (Var (Short "v6")) (((Pcon (SOME (Short "[]")) nil) App OpbLt ((Lit 0) (Lit 0))) ((Pcon (SOME (Short "::")) ("v2" "v1")) Log And (App Equality ((Var (Short "v4")) (Var (Short "v2")))) (App Opapp ((App Opapp ((Var (Short "isPrefix")) (Var (Short "v3")))) (Var (Short "v1")))))))))))) (Dletrec (0 0 0 0 0 0) (("front" "x0" Mat (Var (Short "x0")) (((Pcon (SOME (Short "[]")) nil) Raise (Con (SOME (Short "Bind")) nil)) ((Pcon (SOME (Short "::")) ("v2" "v1")) If (App Equality ((Var (Short "v1")) (Con (SOME (Short "[]")) nil))) (Con (SOME (Short "[]")) nil) (Con (SOME (Short "::")) ((Var (Short "v2")) (App Opapp ((Var (Short "front")) (Var (Short "v1"))))))))))) (Dletrec (0 0 0 0 0 0) (("splitAtPki" "v6" Fun "v7" (Fun "v8" (Mat (Var (Short "v8")) (((Pcon (SOME (Short "[]")) nil) App Opapp ((App Opapp ((Var (Short "v7")) (Con (SOME (Short "[]")) nil))) (Con (SOME (Short "[]")) nil))) ((Pcon (SOME (Short "::")) ("v5" "v4")) If (App Opapp ((App Opapp ((Var (Short "v6")) (Lit 0))) (Var (Short "v5")))) (App Opapp ((App Opapp ((Var (Short "v7")) (Con (SOME (Short "[]")) nil))) (Con (SOME (Short "::")) ((Var (Short "v5")) (Var (Short "v4")))))) (App Opapp ((App Opapp ((App Opapp ((Var (Short "splitAtPki")) (App Opapp ((App Opapp ((Var (Short "o")) (Var (Short "v6")))) (Fun "v1" (App OpnPlus ((Var (Short "v1")) (Lit 1)))))))) (Fun "v3" (Fun "v2" (App Opapp ((App Opapp ((Var (Short "v7")) (Con (SOME (Short "::")) ((Var (Short "v5")) (Var (Short "v3")))))) (Var (Short "v2")))))))) (Var (Short "v4"))))))))))) (Dletrec (0 0 0 0 0 0) (("update" "v8" Fun "v9" (Fun "v7" (Mat (Con NONE ((Var (Short "v9")) (Var (Short "v7")))) (((Pcon NONE ("v6" "v5")) If (App Equality ((Var (Short "v6")) (Lit 0))) (Mat (Var (Short "v5")) (((Pcon (SOME (Short "[]")) nil) Con (SOME (Short "[]")) nil) ((Pcon (SOME (Short "::")) ("v2" "v1")) Con (SOME (Short "::")) ((Var (Short "v8")) (Var (Short "v1")))))) (Mat (Var (Short "v5")) (((Pcon (SOME (Short "[]")) nil) Con (SOME (Short "[]")) nil) ((Pcon (SOME (Short "::")) ("v4" "v3")) Con (SOME (Short "::")) ((Var (Short "v4")) (App Opapp ((App Opapp ((App Opapp ((Var (Short "update")) (Var (Short "v8")))) (Let (SOME "k") (App OpnMinus ((Var (Short "v6")) (Lit 1))) (If (App OpbLt ((Var (Short "k")) (Lit 0))) (Lit 0) (Var (Short "k")))))) (Var (Short "v3"))))))))))))))) (Dletrec (0 0 0 0 0 0) (("compare" "v7" Fun "v8" (Fun "v9" (Mat (Var (Short "v8")) (((Pcon (SOME (Short "[]")) nil) Mat (Var (Short "v9")) (((Pcon (SOME (Short "[]")) nil) Con (SOME (Short "Equal")) nil) ((Pcon (SOME (Short "::")) ("v2" "v1")) Con (SOME (Short "Less")) nil))) ((Pcon (SOME (Short "::")) ("v6" "v5")) Mat (Var (Short "v9")) (((Pcon (SOME (Short "[]")) nil) Con (SOME (Short "Greater")) nil) ((Pcon (SOME (Short "::")) ("v4" "v3")) Mat (App Opapp ((App Opapp ((Var (Short "v7")) (Var (Short "v6")))) (Var (Short "v4")))) (((Pcon (SOME (Short "Less")) nil) Con (SOME (Short "Less")) nil) ((Pcon (SOME (Short "Equal")) nil) App Opapp ((App Opapp ((App Opapp ((Var (Short "compare")) (Var (Short "v7")))) (Var (Short "v5")))) (Var (Short "v3")))) ((Pcon (SOME (Short "Greater")) nil) Con (SOME (Short "Greater")) nil))))))))))) (Dlocal ((Dletrec (0 0 0 0 0 0) (("part" "v3" Fun "v6" (Fun "v4" (Fun "v5" (Mat (Var (Short "v6")) (((Pcon (SOME (Short "[]")) nil) Con NONE ((Var (Short "v4")) (Var (Short "v5")))) ((Pcon (SOME (Short "::")) ("v2" "v1")) If (App Opapp ((Var (Short "v3")) (Var (Short "v2")))) (App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "part")) (Var (Short "v3")))) (Var (Short "v1")))) (Con (SOME (Short "::")) ((Var (Short "v2")) (Var (Short "v4")))))) (Var (Short "v5")))) (App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "part")) (Var (Short "v3")))) (Var (Short "v1")))) (Var (Short "v4")))) (Con (SOME (Short "::")) ((Var (Short "v2")) (Var (Short "v5")))))))))))))) (Dlet (0 0 0 0 0 0) "partition_1" (Fun "v1" (Fun "v2" (App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "part")) (Var (Short "v1")))) (Var (Short "v2")))) (Con (SOME (Short "[]")) nil))) (Con (SOME (Short "[]")) nil))))))) ((Dletrec (0 0 0 0 0 0) (("sort" "v7" Fun "v8" (Mat (Var (Short "v8")) (((Pcon (SOME (Short "[]")) nil) Con (SOME (Short "[]")) nil) ((Pcon (SOME (Short "::")) ("v6" "v5")) Let (SOME "v3") (App Opapp ((App Opapp ((Var (Short "partition_1")) (Fun "v4" (App Opapp ((App Opapp ((Var (Short "v7")) (Var (Short "v4")))) (Var (Short "v6"))))))) (Var (Short "v5")))) (Mat (Var (Short "v3")) (((Pcon NONE ("v2" "v1")) App ListAppend ((App ListAppend ((App Opapp ((App Opapp ((Var (Short "sort")) (Var (Short "v7")))) (Var (Short "v2")))) (Con (SOME (Short "::")) ((Var (Short "v6")) (Con (SOME (Short "[]")) nil))))) (App Opapp ((App Opapp ((Var (Short "sort")) (Var (Short "v7")))) (Var (Short "v1")))))))))))))))))))))))))))))) 
(Dmod "Alist" ((Dletrec (0 0 0 0 0 0) (("lookup" "v5" Fun "v6" (Mat (Var (Short "v5")) (((Pcon (SOME (Short "[]")) nil) Con (SOME (Short "None")) nil) ((Pcon (SOME (Short "::")) ("v4" "v3")) Mat (Var (Short "v4")) (((Pcon NONE ("v2" "v1")) If (App Equality ((Var (Short "v2")) (Var (Short "v6")))) (Con (SOME (Short "Some")) ((Var (Short "v1")))) (App Opapp ((App Opapp ((Var (Short "lookup")) (Var (Short "v3")))) (Var (Short "v6")))))))))))) (Dlet (0 0 0 0 0 0) "update" (Fun "v3" (Fun "v4" (Mat (Var (Short "v4")) (((Pcon NONE ("v2" "v1")) Con (SOME (Short "::")) ((Con NONE ((Var (Short "v2")) (Var (Short "v1")))) (Var (Short "v3"))))))))) (Dletrec (0 0 0 0 0 0) (("every" "v5" Fun "v6" (Fun "v7" (Mat (Var (Short "v7")) (((Pcon (SOME (Short "[]")) nil) App OpbLeq ((Lit 0) (Lit 0))) ((Pcon (SOME (Short "::")) ("v4" "v3")) Mat (Var (Short "v4")) (((Pcon NONE ("v2" "v1")) If (App Opapp ((App Opapp ((Var (Long "List" (Short "member"))) (Var (Short "v2")))) (Var (Short "v5")))) (App Opapp ((App Opapp ((App Opapp ((Var (Short "every")) (Var (Short "v5")))) (Var (Short "v6")))) (Var (Short "v3")))) (Log And (App Opapp ((Var (Short "v6")) (Con NONE ((Var (Short "v2")) (Var (Short "v1")))))) (App Opapp ((App Opapp ((App Opapp ((Var (Short "every")) (Con (SOME (Short "::")) ((Var (Short "v2")) (Var (Short "v5")))))) (Var (Short "v6")))) (Var (Short "v3")))))))))))))) (Dlet (0 0 0 0 0 0) "every" (Fun "v1" (App Opapp ((App Opapp ((Var (Short "every")) (Con (SOME (Short "[]")) nil))) (Var (Short "v1")))))) (Dletrec (0 0 0 0 0 0) (("map" "v5" Fun "v6" (Mat (Var (Short "v6")) (((Pcon (SOME (Short "[]")) nil) Con (SOME (Short "[]")) nil) ((Pcon (SOME (Short "::")) ("v4" "v3")) Mat (Var (Short "v4")) (((Pcon NONE ("v2" "v1")) Con (SOME (Short "::")) ((Con NONE ((Var (Short "v2")) (App Opapp ((Var (Short "v5")) (Var (Short "v1")))))) (App Opapp ((App Opapp ((Var (Short "map")) (Var (Short "v5")))) (Var (Short "v3"))))))))))))) (Dletrec (0 0 0 0 0 0) (("delete" "v5" Fun "v6" (Mat (Var (Short "v5")) (((Pcon (SOME (Short "[]")) nil) Con (SOME (Short "[]")) nil) ((Pcon (SOME (Short "::")) ("v4" "v3")) Mat (Var (Short "v4")) (((Pcon NONE ("v2" "v1")) If (App Equality ((Var (Short "v2")) (Var (Short "v6")))) (App Opapp ((App Opapp ((Var (Short "delete")) (Var (Short "v3")))) (Var (Short "v6")))) (Con (SOME (Short "::")) ((Con NONE ((Var (Short "v2")) (Var (Short "v1")))) (App Opapp ((App Opapp ((Var (Short "delete")) (Var (Short "v3")))) (Var (Short "v6")))))))))))))))) 
(Dmod "Vector" ((Dtabbrev (0 0 0 0 0 0) ("'a") "vector" (Atapp ((Atvar "'a")) (Short "vector"))) (Dlet (0 0 0 0 0 0) "fromList" (Fun "v1" (App VfromList ((Var (Short "v1")))))) (Dlet (0 0 0 0 0 0) "length" (Fun "v1" (App Vlength ((Var (Short "v1")))))) (Dlet (0 0 0 0 0 0) "sub" (Fun "v1" (Fun "v2" (App Vsub ((Var (Short "v1")) (Var (Short "v2"))))))) (Dlet (0 0 0 0 0 0) "tabulate" (Fun "v2" (Fun "v1" (App VfromList ((App Opapp ((App Opapp ((Var (Long "List" (Short "genlist"))) (Var (Short "v1")))) (Var (Short "v2"))))))))) (Dlocal ((Dletrec (0 0 0 0 0 0) (("tolist_aux" "v2" Fun "v1" (If (App OpbLeq ((App Vlength ((Var (Short "v2")))) (Var (Short "v1")))) (Con (SOME (Short "[]")) nil) (Con (SOME (Short "::")) ((App Vsub ((Var (Short "v2")) (Var (Short "v1")))) (App Opapp ((App Opapp ((Var (Short "tolist_aux")) (Var (Short "v2")))) (App OpnPlus ((Var (Short "v1")) (Lit 1)))))))))))) ((Dlet (0 0 0 0 0 0) "toList" (Fun "v1" (App Opapp ((App Opapp ((Var (Short "tolist_aux")) (Var (Short "v1")))) (Lit 0))))) (Dlet (0 0 0 0 0 0) "update" (Fun "v2" (Fun "v1" (Fun "v3" (App VfromList ((App Opapp ((App Opapp ((App Opapp ((Var (Long "List" (Short "update"))) (Var (Short "v3")))) (Var (Short "v1")))) (App Opapp ((Var (Short "toList")) (Var (Short "v2")))))))))))) (Dlet (0 0 0 0 0 0) "concat" (Fun "v1" (App VfromList ((App Opapp ((Var (Long "List" (Short "concat"))) (App Opapp ((App Opapp ((Var (Long "List" (Short "map"))) (Var (Short "toList")))) (Var (Short "v1")))))))))) (Dlet (0 0 0 0 0 0) "map" (Fun "v2" (Fun "v1" (App VfromList ((App Opapp ((App Opapp ((Var (Long "List" (Short "map"))) (Var (Short "v1")))) (App Opapp ((Var (Short "toList")) (Var (Short "v2"))))))))))) (Dlet (0 0 0 0 0 0) "mapi" (Fun "v2" (Fun "v1" (App VfromList ((App Opapp ((App Opapp ((Var (Long "List" (Short "mapi"))) (Var (Short "v1")))) (App Opapp ((Var (Short "toList")) (Var (Short "v2"))))))))))) (Dlocal ((Dletrec (0 0 0 0 0 0) (("foldli_aux" "v2" Fun "v1" (Fun "v5" (Fun "v3" (Fun "v4" (If (App Equality ((Var (Short "v4")) (Lit 0))) (Var (Short "v1")) (App Opapp ((App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "foldli_aux")) (Var (Short "v2")))) (App Opapp ((App Opapp ((App Opapp ((Var (Short "v2")) (Var (Short "v3")))) (App Vsub ((Var (Short "v5")) (Var (Short "v3")))))) (Var (Short "v1")))))) (Var (Short "v5")))) (App OpnPlus ((Var (Short "v3")) (Lit 1))))) (Let (SOME "k") (App OpnMinus ((Var (Short "v4")) (Lit 1))) (If (App OpbLt ((Var (Short "k")) (Lit 0))) (Lit 0) (Var (Short "k")))))))))))))) ((Dlet (0 0 0 0 0 0) "foldli" (Fun "v2" (Fun "v1" (Fun "v3" (App Opapp ((App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "foldli_aux")) (Var (Short "v2")))) (Var (Short "v1")))) (Var (Short "v3")))) (Lit 0))) (App Vlength ((Var (Short "v3")))))))))) (Dlocal ((Dletrec (0 0 0 0 0 0) (("foldl_aux" "v2" Fun "v1" (Fun "v5" (Fun "v3" (Fun "v4" (If (App Equality ((Var (Short "v4")) (Lit 0))) (Var (Short "v1")) (App Opapp ((App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "foldl_aux")) (Var (Short "v2")))) (App Opapp ((App Opapp ((Var (Short "v2")) (Var (Short "v1")))) (App Vsub ((Var (Short "v5")) (Var (Short "v3")))))))) (Var (Short "v5")))) (App OpnPlus ((Var (Short "v3")) (Lit 1))))) (Let (SOME "k") (App OpnMinus ((Var (Short "v4")) (Lit 1))) (If (App OpbLt ((Var (Short "k")) (Lit 0))) (Lit 0) (Var (Short "k")))))))))))))) ((Dlet (0 0 0 0 0 0) "foldl" (Fun "v2" (Fun "v1" (Fun "v3" (App Opapp ((App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "foldl_aux")) (Var (Short "v2")))) (Var (Short "v1")))) (Var (Short "v3")))) (Lit 0))) (App Vlength ((Var (Short "v3")))))))))) (Dlocal ((Dletrec (0 0 0 0 0 0) (("foldri_aux" "v2" Fun "v1" (Fun "v4" (Fun "v3" (If (App Equality ((Var (Short "v3")) (Lit 0))) (Var (Short "v1")) (App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "foldri_aux")) (Var (Short "v2")))) (App Opapp ((App Opapp ((App Opapp ((Var (Short "v2")) (Let (SOME "k") (App OpnMinus ((Var (Short "v3")) (Lit 1))) (If (App OpbLt ((Var (Short "k")) (Lit 0))) (Lit 0) (Var (Short "k")))))) (App Vsub ((Var (Short "v4")) (Let (SOME "k") (App OpnMinus ((Var (Short "v3")) (Lit 1))) (If (App OpbLt ((Var (Short "k")) (Lit 0))) (Lit 0) (Var (Short "k")))))))) (Var (Short "v1")))))) (Var (Short "v4")))) (Let (SOME "k") (App OpnMinus ((Var (Short "v3")) (Lit 1))) (If (App OpbLt ((Var (Short "k")) (Lit 0))) (Lit 0) (Var (Short "k"))))))))))))) ((Dlet (0 0 0 0 0 0) "foldri" (Fun "v2" (Fun "v1" (Fun "v3" (App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "foldri_aux")) (Var (Short "v2")))) (Var (Short "v1")))) (Var (Short "v3")))) (App Vlength ((Var (Short "v3")))))))))) (Dlocal ((Dletrec (0 0 0 0 0 0) (("foldr_aux" "v2" Fun "v1" (Fun "v4" (Fun "v3" (If (App Equality ((Var (Short "v3")) (Lit 0))) (Var (Short "v1")) (App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "foldr_aux")) (Var (Short "v2")))) (App Opapp ((App Opapp ((Var (Short "v2")) (App Vsub ((Var (Short "v4")) (Let (SOME "k") (App OpnMinus ((Var (Short "v3")) (Lit 1))) (If (App OpbLt ((Var (Short "k")) (Lit 0))) (Lit 0) (Var (Short "k")))))))) (Var (Short "v1")))))) (Var (Short "v4")))) (Let (SOME "k") (App OpnMinus ((Var (Short "v3")) (Lit 1))) (If (App OpbLt ((Var (Short "k")) (Lit 0))) (Lit 0) (Var (Short "k"))))))))))))) ((Dlet (0 0 0 0 0 0) "foldr" (Fun "v2" (Fun "v1" (Fun "v3" (App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "foldr_aux")) (Var (Short "v2")))) (Var (Short "v1")))) (Var (Short "v3")))) (App Vlength ((Var (Short "v3")))))))))) (Dlocal ((Dletrec (0 0 0 0 0 0) (("findi_aux" "v1" Fun "v4" (Fun "v2" (Fun "v3" (If (App Equality ((Var (Short "v3")) (Lit 0))) (Con (SOME (Short "None")) nil) (If (App Opapp ((App Opapp ((Var (Short "v1")) (Var (Short "v2")))) (App Vsub ((Var (Short "v4")) (Var (Short "v2")))))) (Con (SOME (Short "Some")) ((Con NONE ((Var (Short "v2")) (App Vsub ((Var (Short "v4")) (Var (Short "v2")))))))) (App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "findi_aux")) (Var (Short "v1")))) (Var (Short "v4")))) (App OpnPlus ((Var (Short "v2")) (Lit 1))))) (Let (SOME "k") (App OpnMinus ((Var (Short "v3")) (Lit 1))) (If (App OpbLt ((Var (Short "k")) (Lit 0))) (Lit 0) (Var (Short "k")))))))))))))) ((Dlet (0 0 0 0 0 0) "findi" (Fun "v1" (Fun "v2" (App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "findi_aux")) (Var (Short "v1")))) (Var (Short "v2")))) (Lit 0))) (App Vlength ((Var (Short "v2"))))))))) (Dlocal ((Dletrec (0 0 0 0 0 0) (("find_aux" "v1" Fun "v4" (Fun "v2" (Fun "v3" (If (App Equality ((Var (Short "v3")) (Lit 0))) (Con (SOME (Short "None")) nil) (If (App Opapp ((Var (Short "v1")) (App Vsub ((Var (Short "v4")) (Var (Short "v2")))))) (Con (SOME (Short "Some")) ((App Vsub ((Var (Short "v4")) (Var (Short "v2")))))) (App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "find_aux")) (Var (Short "v1")))) (Var (Short "v4")))) (App OpnPlus ((Var (Short "v2")) (Lit 1))))) (Let (SOME "k") (App OpnMinus ((Var (Short "v3")) (Lit 1))) (If (App OpbLt ((Var (Short "k")) (Lit 0))) (Lit 0) (Var (Short "k")))))))))))))) ((Dlet (0 0 0 0 0 0) "find" (Fun "v1" (Fun "v2" (App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "find_aux")) (Var (Short "v1")))) (Var (Short "v2")))) (Lit 0))) (App Vlength ((Var (Short "v2"))))))))) (Dlocal ((Dletrec (0 0 0 0 0 0) (("exists_aux" "v1" Fun "v4" (Fun "v2" (Fun "v3" (If (App Equality ((Var (Short "v3")) (Lit 0))) (App OpbLt ((Lit 0) (Lit 0))) (If (App Opapp ((Var (Short "v1")) (App Vsub ((Var (Short "v4")) (Var (Short "v2")))))) (App OpbLeq ((Lit 0) (Lit 0))) (App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "exists_aux")) (Var (Short "v1")))) (Var (Short "v4")))) (App OpnPlus ((Var (Short "v2")) (Lit 1))))) (Let (SOME "k") (App OpnMinus ((Var (Short "v3")) (Lit 1))) (If (App OpbLt ((Var (Short "k")) (Lit 0))) (Lit 0) (Var (Short "k")))))))))))))) ((Dlet (0 0 0 0 0 0) "exists" (Fun "v1" (Fun "v2" (App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "exists_aux")) (Var (Short "v1")))) (Var (Short "v2")))) (Lit 0))) (App Vlength ((Var (Short "v2"))))))))) (Dlocal ((Dletrec (0 0 0 0 0 0) (("all_aux" "v1" Fun "v4" (Fun "v2" (Fun "v3" (If (App Equality ((Var (Short "v3")) (Lit 0))) (App OpbLeq ((Lit 0) (Lit 0))) (If (App Opapp ((Var (Short "v1")) (App Vsub ((Var (Short "v4")) (Var (Short "v2")))))) (App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "all_aux")) (Var (Short "v1")))) (Var (Short "v4")))) (App OpnPlus ((Var (Short "v2")) (Lit 1))))) (Let (SOME "k") (App OpnMinus ((Var (Short "v3")) (Lit 1))) (If (App OpbLt ((Var (Short "k")) (Lit 0))) (Lit 0) (Var (Short "k")))))) (App OpbLt ((Lit 0) (Lit 0))))))))))) ((Dlet (0 0 0 0 0 0) "all" (Fun "v1" (Fun "v2" (App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "all_aux")) (Var (Short "v1")))) (Var (Short "v2")))) (Lit 0))) (App Vlength ((Var (Short "v2"))))))))) (Dlocal ((Dletrec (0 0 0 0 0 0) (("collate_aux" "v1" Fun "v5" (Fun "v6" (Fun "v2" (Fun "v3" (Fun "v4" (If (App Equality ((Var (Short "v4")) (Lit 0))) (Var (Short "v3")) (If (App Equality ((App Opapp ((App Opapp ((Var (Short "v1")) (App Vsub ((Var (Short "v5")) (Var (Short "v2")))))) (App Vsub ((Var (Short "v6")) (Var (Short "v2")))))) (Con (SOME (Short "Equal")) nil))) (App Opapp ((App Opapp ((App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "collate_aux")) (Var (Short "v1")))) (Var (Short "v5")))) (Var (Short "v6")))) (App OpnPlus ((Var (Short "v2")) (Lit 1))))) (Var (Short "v3")))) (Let (SOME "k") (App OpnMinus ((Var (Short "v4")) (Lit 1))) (If (App OpbLt ((Var (Short "k")) (Lit 0))) (Lit 0) (Var (Short "k")))))) (App Opapp ((App Opapp ((Var (Short "v1")) (App Vsub ((Var (Short "v5")) (Var (Short "v2")))))) (App Vsub ((Var (Short "v6")) (Var (Short "v2")))))))))))))))) ((Dlet (0 0 0 0 0 0) "collate" (Fun "v1" (Fun "v2" (Fun "v3" (If (App OpbLt ((App Vlength ((Var (Short "v2")))) (App Vlength ((Var (Short "v3")))))) (App Opapp ((App Opapp ((App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "collate_aux")) (Var (Short "v1")))) (Var (Short "v2")))) (Var (Short "v3")))) (Lit 0))) (Con (SOME (Short "Less")) nil))) (App Vlength ((Var (Short "v2")))))) (If (App OpbLt ((App Vlength ((Var (Short "v3")))) (App Vlength ((Var (Short "v2")))))) (App Opapp ((App Opapp ((App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "collate_aux")) (Var (Short "v1")))) (Var (Short "v2")))) (Var (Short "v3")))) (Lit 0))) (Con (SOME (Short "Greater")) nil))) (App Vlength ((Var (Short "v3")))))) (App Opapp ((App Opapp ((App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "collate_aux")) (Var (Short "v1")))) (Var (Short "v2")))) (Var (Short "v3")))) (Lit 0))) (Con (SOME (Short "Equal")) nil))) (App Vlength ((Var (Short "v3")))))))))))))))))))))))))))))))))) 
(Dmod "String" ((Dtabbrev (0 0 0 0 0 0) nil "string" (Atapp nil (Short "string"))) (Dlet (0 0 0 0 0 0) "sub" (Fun "v1" (Fun "v2" (App Strsub ((Var (Short "v1")) (Var (Short "v2"))))))) (Dlet (0 0 0 0 0 0) "implode" (Fun "v1" (App Implode ((Var (Short "v1")))))) (Dlet (0 0 0 0 0 0) "explode" (Fun "v1" (App Explode ((Var (Short "v1")))))) (Dlet (0 0 0 0 0 0) "size" (Fun "v1" (App Strlen ((Var (Short "v1")))))) (Dlet (0 0 0 0 0 0) "concat" (Fun "v1" (App Strcat ((Var (Short "v1")))))) (Dlet (0 0 0 0 0 0) "substring" (Fun "v1" (Fun "v2" (Fun "v3" (App CopyStrStr ((Var (Short "v1")) (Var (Short "v2")) (Var (Short "v3")))))))) (Dlet (0 0 0 0 0 0) "strcat" (Fun "v1" (Fun "v2" (App Strcat ((Con (SOME (Short "::")) ((Var (Short "v1")) (Con (SOME (Short "::")) ((Var (Short "v2")) (Con (SOME (Short "[]")) nil)))))))))) (Dlet (0 0 0 0 0 0) "^" (Fun "v1" (Fun "v2" (App Opapp ((App Opapp ((Var (Short "strcat")) (Var (Short "v1")))) (Var (Short "v2"))))))) (Dlet (0 0 0 0 0 0) "extract" (Fun "v4" (Fun "v2" (Fun "v3" (If (App OpbLeq ((App Strlen ((Var (Short "v4")))) (Var (Short "v2")))) (Lit "") (Mat (Var (Short "v3")) (((Pcon (SOME (Short "None")) nil) App CopyStrStr ((Var (Short "v4")) (Var (Short "v2")) (Let (SOME "k") (App OpnMinus ((App Strlen ((Var (Short "v4")))) (Var (Short "v2")))) (If (App OpbLt ((Var (Short "k")) (Lit 0))) (Lit 0) (Var (Short "k")))))) ((Pcon (SOME (Short "Some")) ("v1")) App CopyStrStr ((Var (Short "v4")) (Var (Short "v2")) (App Opapp ((App Opapp ((Var (Short "min")) (Let (SOME "k") (App OpnMinus ((App Strlen ((Var (Short "v4")))) (Var (Short "v2")))) (If (App OpbLt ((Var (Short "k")) (Lit 0))) (Lit 0) (Var (Short "k")))))) (Var (Short "v1"))))))))))))) (Dlocal ((Dletrec (0 0 0 0 0 0) (("concatwith_aux" "v3" Fun "v4" (Fun "v5" (Mat (Var (Short "v4")) (((Pcon (SOME (Short "[]")) nil) Lit "") ((Pcon (SOME (Short "::")) ("v2" "v1")) If (Var (Short "v5")) (App Opapp ((App Opapp ((Var (Short "strcat")) (Var (Short "v2")))) (App Opapp ((App Opapp ((App Opapp ((Var (Short "concatwith_aux")) (Var (Short "v3")))) (Var (Short "v1")))) (App OpbLt ((Lit 0) (Lit 0))))))) (App Opapp ((App Opapp ((Var (Short "strcat")) (Var (Short "v3")))) (App Opapp ((App Opapp ((App Opapp ((Var (Short "concatwith_aux")) (Var (Short "v3")))) (Con (SOME (Short "::")) ((Var (Short "v2")) (Var (Short "v1")))))) (App OpbLeq ((Lit 0) (Lit 0))))))))))))))) ((Dlet (0 0 0 0 0 0) "concatWith" (Fun "v2" (Fun "v1" (App Opapp ((App Opapp ((App Opapp ((Var (Short "concatwith_aux")) (Var (Short "v2")))) (Var (Short "v1")))) (App OpbLeq ((Lit 0) (Lit 0)))))))) (Dlet (0 0 0 0 0 0) "str" (Fun "v1" (App Implode ((Con (SOME (Short "::")) ((Var (Short "v1")) (Con (SOME (Short "[]")) nil))))))) (Dlocal ((Dletrec (0 0 0 0 0 0) (("translate_aux" "v1" Fun "v4" (Fun "v2" (Fun "v3" (If (App Equality ((Var (Short "v3")) (Lit 0))) (Con (SOME (Short "[]")) nil) (Con (SOME (Short "::")) ((App Opapp ((Var (Short "v1")) (App Strsub ((Var (Short "v4")) (Var (Short "v2")))))) (App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "translate_aux")) (Var (Short "v1")))) (Var (Short "v4")))) (App OpnPlus ((Var (Short "v2")) (Lit 1))))) (Let (SOME "k") (App OpnMinus ((Var (Short "v3")) (Lit 1))) (If (App OpbLt ((Var (Short "k")) (Lit 0))) (Lit 0) (Var (Short "k"))))))))))))))) ((Dlet (0 0 0 0 0 0) "translate" (Fun "v1" (Fun "v2" (App Implode ((App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "translate_aux")) (Var (Short "v1")))) (Var (Short "v2")))) (Lit 0))) (App Strlen ((Var (Short "v2"))))))))))) (Dlocal ((Dletrec (0 0 0 0 0 0) (("splitl_aux" "v1" Fun "v3" (Fun "v2" (If (Log And (App OpbLt ((Var (Short "v2")) (App Strlen ((Var (Short "v3")))))) (App Opapp ((Var (Short "v1")) (App Strsub ((Var (Short "v3")) (Var (Short "v2"))))))) (App Opapp ((App Opapp ((App Opapp ((Var (Short "splitl_aux")) (Var (Short "v1")))) (Var (Short "v3")))) (App OpnPlus ((Var (Short "v2")) (Lit 1))))) (Con NONE ((App Opapp ((App Opapp ((App Opapp ((Var (Short "extract")) (Var (Short "v3")))) (Lit 0))) (Con (SOME (Short "Some")) ((Var (Short "v2")))))) (App Opapp ((App Opapp ((App Opapp ((Var (Short "extract")) (Var (Short "v3")))) (Var (Short "v2")))) (Con (SOME (Short "None")) nil))))))))))) ((Dlet (0 0 0 0 0 0) "split" (Fun "v1" (Fun "v2" (App Opapp ((App Opapp ((App Opapp ((Var (Short "splitl_aux")) (Var (Short "v1")))) (Var (Short "v2")))) (Lit 0)))))) (Dlocal ((Dletrec (0 0 0 0 0 0) (("tokens_aux" "v3" Fun "v4" (Fun "v5" (Fun "v6" (Fun "v7" (Mat (Var (Short "v5")) (((Pcon (SOME (Short "[]")) nil) If (App Equality ((Var (Short "v7")) (Lit 0))) (Con (SOME (Short "[]")) nil) (If (App Opapp ((Var (Short "v3")) (App Strsub ((Var (Short "v4")) (Var (Short "v6")))))) (App Opapp ((App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "tokens_aux")) (Var (Short "v3")))) (Var (Short "v4")))) (Con (SOME (Short "[]")) nil))) (App OpnPlus ((Var (Short "v6")) (Lit 1))))) (Let (SOME "k") (App OpnMinus ((Var (Short "v7")) (Lit 1))) (If (App OpbLt ((Var (Short "k")) (Lit 0))) (Lit 0) (Var (Short "k")))))) (App Opapp ((App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "tokens_aux")) (Var (Short "v3")))) (Var (Short "v4")))) (Con (SOME (Short "::")) ((App Strsub ((Var (Short "v4")) (Var (Short "v6")))) (Con (SOME (Short "[]")) nil))))) (App OpnPlus ((Var (Short "v6")) (Lit 1))))) (Let (SOME "k") (App OpnMinus ((Var (Short "v7")) (Lit 1))) (If (App OpbLt ((Var (Short "k")) (Lit 0))) (Lit 0) (Var (Short "k")))))))) ((Pcon (SOME (Short "::")) ("v2" "v1")) If (App Equality ((Var (Short "v7")) (Lit 0))) (Con (SOME (Short "::")) ((App Implode ((App Opapp ((Var (Long "List" (Short "rev"))) (Con (SOME (Short "::")) ((Var (Short "v2")) (Var (Short "v1")))))))) (Con (SOME (Short "[]")) nil))) (If (App Opapp ((Var (Short "v3")) (App Strsub ((Var (Short "v4")) (Var (Short "v6")))))) (Con (SOME (Short "::")) ((App Implode ((App Opapp ((Var (Long "List" (Short "rev"))) (Con (SOME (Short "::")) ((Var (Short "v2")) (Var (Short "v1")))))))) (App Opapp ((App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "tokens_aux")) (Var (Short "v3")))) (Var (Short "v4")))) (Con (SOME (Short "[]")) nil))) (App OpnPlus ((Var (Short "v6")) (Lit 1))))) (Let (SOME "k") (App OpnMinus ((Var (Short "v7")) (Lit 1))) (If (App OpbLt ((Var (Short "k")) (Lit 0))) (Lit 0) (Var (Short "k")))))))) (App Opapp ((App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "tokens_aux")) (Var (Short "v3")))) (Var (Short "v4")))) (Con (SOME (Short "::")) ((App Strsub ((Var (Short "v4")) (Var (Short "v6")))) (Con (SOME (Short "::")) ((Var (Short "v2")) (Var (Short "v1")))))))) (App OpnPlus ((Var (Short "v6")) (Lit 1))))) (Let (SOME "k") (App OpnMinus ((Var (Short "v7")) (Lit 1))) (If (App OpbLt ((Var (Short "k")) (Lit 0))) (Lit 0) (Var (Short "k"))))))))))))))))) ((Dlet (0 0 0 0 0 0) "tokens" (Fun "v1" (Fun "v2" (App Opapp ((App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "tokens_aux")) (Var (Short "v1")))) (Var (Short "v2")))) (Con (SOME (Short "[]")) nil))) (Lit 0))) (App Strlen ((Var (Short "v2"))))))))) (Dlocal ((Dletrec (0 0 0 0 0 0) (("fields_aux" "v1" Fun "v4" (Fun "v5" (Fun "v2" (Fun "v3" (If (App Equality ((Var (Short "v3")) (Lit 0))) (Con (SOME (Short "::")) ((App Implode ((App Opapp ((Var (Long "List" (Short "rev"))) (Var (Short "v5")))))) (Con (SOME (Short "[]")) nil))) (If (App Opapp ((Var (Short "v1")) (App Strsub ((Var (Short "v4")) (Var (Short "v2")))))) (Con (SOME (Short "::")) ((App Implode ((App Opapp ((Var (Long "List" (Short "rev"))) (Var (Short "v5")))))) (App Opapp ((App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "fields_aux")) (Var (Short "v1")))) (Var (Short "v4")))) (Con (SOME (Short "[]")) nil))) (App OpnPlus ((Var (Short "v2")) (Lit 1))))) (Let (SOME "k") (App OpnMinus ((Var (Short "v3")) (Lit 1))) (If (App OpbLt ((Var (Short "k")) (Lit 0))) (Lit 0) (Var (Short "k")))))))) (App Opapp ((App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "fields_aux")) (Var (Short "v1")))) (Var (Short "v4")))) (Con (SOME (Short "::")) ((App Strsub ((Var (Short "v4")) (Var (Short "v2")))) (Var (Short "v5")))))) (App OpnPlus ((Var (Short "v2")) (Lit 1))))) (Let (SOME "k") (App OpnMinus ((Var (Short "v3")) (Lit 1))) (If (App OpbLt ((Var (Short "k")) (Lit 0))) (Lit 0) (Var (Short "k"))))))))))))))) ((Dlet (0 0 0 0 0 0) "fields" (Fun "v1" (Fun "v2" (App Opapp ((App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "fields_aux")) (Var (Short "v1")))) (Var (Short "v2")))) (Con (SOME (Short "[]")) nil))) (Lit 0))) (App Strlen ((Var (Short "v2"))))))))) (Dlocal ((Dletrec (0 0 0 0 0 0) (("isstringthere_aux" "v2" Fun "v4" (Fun "v3" (Fun "v5" (Fun "v1" (If (App Equality ((Var (Short "v1")) (Lit 0))) (App OpbLeq ((Lit 0) (Lit 0))) (If (App Equality ((App Strsub ((Var (Short "v2")) (Var (Short "v3")))) (App Strsub ((Var (Short "v4")) (Var (Short "v5")))))) (App Opapp ((App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "isstringthere_aux")) (Var (Short "v2")))) (Var (Short "v4")))) (App OpnPlus ((Var (Short "v3")) (Lit 1))))) (App OpnPlus ((Var (Short "v5")) (Lit 1))))) (Let (SOME "k") (App OpnMinus ((Var (Short "v1")) (Lit 1))) (If (App OpbLt ((Var (Short "k")) (Lit 0))) (Lit 0) (Var (Short "k")))))) (App OpbLt ((Lit 0) (Lit 0)))))))))))) ((Dletrec (0 0 0 0 0 0) (("isSubstring" "v4" Fun "v5" (Fun "v1" (Fun "v2" (Fun "v3" (If (App Equality ((Var (Short "v3")) (Lit 0))) (App OpbLt ((Lit 0) (Lit 0))) (If (App Opapp ((App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "isstringthere_aux")) (Var (Short "v4")))) (Var (Short "v5")))) (Lit 0))) (Var (Short "v2")))) (Var (Short "v1")))) (App OpbLeq ((Lit 0) (Lit 0))) (App Opapp ((App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "isSubstring")) (Var (Short "v4")))) (Var (Short "v5")))) (Var (Short "v1")))) (App OpnPlus ((Var (Short "v2")) (Lit 1))))) (Let (SOME "k") (App OpnMinus ((Var (Short "v3")) (Lit 1))) (If (App OpbLt ((Var (Short "k")) (Lit 0))) (Lit 0) (Var (Short "k")))))))))))))) (Dlet (0 0 0 0 0 0) "isSubstring" (Fun "v1" (Fun "v2" (If (App OpbLeq ((App Strlen ((Var (Short "v1")))) (App Strlen ((Var (Short "v2")))))) (App Opapp ((App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "isSubstring")) (Var (Short "v1")))) (Var (Short "v2")))) (App Strlen ((Var (Short "v1")))))) (Lit 0))) (App OpnPlus ((Let (SOME "k") (App OpnMinus ((App Strlen ((Var (Short "v2")))) (App Strlen ((Var (Short "v1")))))) (If (App OpbLt ((Var (Short "k")) (Lit 0))) (Lit 0) (Var (Short "k")))) (Lit 1))))) (App OpbLt ((Lit 0) (Lit 0))))))) (Dlet (0 0 0 0 0 0) "isSuffix" (Fun "v1" (Fun "v2" (If (App OpbLeq ((App Strlen ((Var (Short "v1")))) (App Strlen ((Var (Short "v2")))))) (App Opapp ((App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "isstringthere_aux")) (Var (Short "v1")))) (Var (Short "v2")))) (Lit 0))) (Let (SOME "k") (App OpnMinus ((App Strlen ((Var (Short "v2")))) (App Strlen ((Var (Short "v1")))))) (If (App OpbLt ((Var (Short "k")) (Lit 0))) (Lit 0) (Var (Short "k")))))) (App Strlen ((Var (Short "v1")))))) (App OpbLt ((Lit 0) (Lit 0))))))) (Dlet (0 0 0 0 0 0) "isPrefix" (Fun "v1" (Fun "v2" (If (App OpbLeq ((App Strlen ((Var (Short "v1")))) (App Strlen ((Var (Short "v2")))))) (App Opapp ((App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "isstringthere_aux")) (Var (Short "v1")))) (Var (Short "v2")))) (Lit 0))) (Lit 0))) (App Strlen ((Var (Short "v1")))))) (App OpbLt ((Lit 0) (Lit 0))))))) (Dlocal ((Dletrec (0 0 0 0 0 0) (("compare_aux" "v3" Fun "v4" (Fun "v2" (Fun "v5" (Fun "v1" (If (App Equality ((Var (Short "v1")) (Lit 0))) (Var (Short "v2")) (If (App ChopbLt ((App Strsub ((Var (Short "v4")) (Var (Short "v5")))) (App Strsub ((Var (Short "v3")) (Var (Short "v5")))))) (Con (SOME (Short "Greater")) nil) (If (App ChopbLt ((App Strsub ((Var (Short "v3")) (Var (Short "v5")))) (App Strsub ((Var (Short "v4")) (Var (Short "v5")))))) (Con (SOME (Short "Less")) nil) (App Opapp ((App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "compare_aux")) (Var (Short "v3")))) (Var (Short "v4")))) (Var (Short "v2")))) (App OpnPlus ((Var (Short "v5")) (Lit 1))))) (Let (SOME "k") (App OpnMinus ((Var (Short "v1")) (Lit 1))) (If (App OpbLt ((Var (Short "k")) (Lit 0))) (Lit 0) (Var (Short "k")))))))))))))))) ((Dlet (0 0 0 0 0 0) "compare" (Fun "v1" (Fun "v2" (If (App OpbLt ((App Strlen ((Var (Short "v1")))) (App Strlen ((Var (Short "v2")))))) (App Opapp ((App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "compare_aux")) (Var (Short "v1")))) (Var (Short "v2")))) (Con (SOME (Short "Less")) nil))) (Lit 0))) (App Strlen ((Var (Short "v1")))))) (If (App OpbLt ((App Strlen ((Var (Short "v2")))) (App Strlen ((Var (Short "v1")))))) (App Opapp ((App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "compare_aux")) (Var (Short "v1")))) (Var (Short "v2")))) (Con (SOME (Short "Greater")) nil))) (Lit 0))) (App Strlen ((Var (Short "v2")))))) (App Opapp ((App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "compare_aux")) (Var (Short "v1")))) (Var (Short "v2")))) (Con (SOME (Short "Equal")) nil))) (Lit 0))) (App Strlen ((Var (Short "v2"))))))))))) (Dlet (0 0 0 0 0 0) "<" (Fun "v1" (Fun "v2" (App Equality ((App Opapp ((App Opapp ((Var (Short "compare")) (Var (Short "v1")))) (Var (Short "v2")))) (Con (SOME (Short "Less")) nil)))))) (Dlet (0 0 0 0 0 0) "<=" (Fun "v1" (Fun "v2" (App Equality ((App Equality ((App Opapp ((App Opapp ((Var (Short "compare")) (Var (Short "v1")))) (Var (Short "v2")))) (Con (SOME (Short "Greater")) nil))) (App OpbLt ((Lit 0) (Lit 0)))))))) (Dlet (0 0 0 0 0 0) ">=" (Fun "v1" (Fun "v2" (App Equality ((App Equality ((App Opapp ((App Opapp ((Var (Short "compare")) (Var (Short "v1")))) (Var (Short "v2")))) (Con (SOME (Short "Less")) nil))) (App OpbLt ((Lit 0) (Lit 0)))))))) (Dlet (0 0 0 0 0 0) ">" (Fun "v1" (Fun "v2" (App Equality ((App Opapp ((App Opapp ((Var (Short "compare")) (Var (Short "v1")))) (Var (Short "v2")))) (Con (SOME (Short "Greater")) nil)))))) (Dlocal ((Dletrec (0 0 0 0 0 0) (("collate_aux" "v1" Fun "v5" (Fun "v6" (Fun "v3" (Fun "v2" (Fun "v4" (If (App Equality ((Var (Short "v4")) (Lit 0))) (Var (Short "v3")) (If (App Equality ((App Opapp ((App Opapp ((Var (Short "v1")) (App Strsub ((Var (Short "v5")) (Var (Short "v2")))))) (App Strsub ((Var (Short "v6")) (Var (Short "v2")))))) (Con (SOME (Short "Equal")) nil))) (App Opapp ((App Opapp ((App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "collate_aux")) (Var (Short "v1")))) (Var (Short "v5")))) (Var (Short "v6")))) (Var (Short "v3")))) (App OpnPlus ((Var (Short "v2")) (Lit 1))))) (Let (SOME "k") (App OpnMinus ((Var (Short "v4")) (Lit 1))) (If (App OpbLt ((Var (Short "k")) (Lit 0))) (Lit 0) (Var (Short "k")))))) (App Opapp ((App Opapp ((Var (Short "v1")) (App Strsub ((Var (Short "v5")) (Var (Short "v2")))))) (App Strsub ((Var (Short "v6")) (Var (Short "v2")))))))))))))))) ((Dlet (0 0 0 0 0 0) "collate" (Fun "v1" (Fun "v2" (Fun "v3" (If (App OpbLt ((App Strlen ((Var (Short "v2")))) (App Strlen ((Var (Short "v3")))))) (App Opapp ((App Opapp ((App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "collate_aux")) (Var (Short "v1")))) (Var (Short "v2")))) (Var (Short "v3")))) (Con (SOME (Short "Less")) nil))) (Lit 0))) (App Strlen ((Var (Short "v2")))))) (If (App OpbLt ((App Strlen ((Var (Short "v3")))) (App Strlen ((Var (Short "v2")))))) (App Opapp ((App Opapp ((App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "collate_aux")) (Var (Short "v1")))) (Var (Short "v2")))) (Var (Short "v3")))) (Con (SOME (Short "Greater")) nil))) (Lit 0))) (App Strlen ((Var (Short "v3")))))) (App Opapp ((App Opapp ((App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "collate_aux")) (Var (Short "v1")))) (Var (Short "v2")))) (Var (Short "v3")))) (Con (SOME (Short "Equal")) nil))) (Lit 0))) (App Strlen ((Var (Short "v3")))))))))))))))))))))))))))))) 
(Dlet (0 0 0 0 0 0) "+" (Fun "v1" (Fun "v2" (App OpnPlus ((Var (Short "v1")) (Var (Short "v2"))))))) 
(Dlet (0 0 0 0 0 0) "-" (Fun "v1" (Fun "v2" (App OpnMinus ((Var (Short "v1")) (Var (Short "v2"))))))) 
(Dlet (0 0 0 0 0 0) "*" (Fun "v1" (Fun "v2" (App OpnTimes ((Var (Short "v1")) (Var (Short "v2"))))))) 
(Dlet (0 0 0 0 0 0) "div" (Fun "v1" (Fun "v2" (App OpnDivide ((Var (Short "v1")) (Var (Short "v2"))))))) 
(Dlet (0 0 0 0 0 0) "mod" (Fun "v1" (Fun "v2" (App OpnModulo ((Var (Short "v1")) (Var (Short "v2"))))))) 
(Dlet (0 0 0 0 0 0) "<" (Fun "v1" (Fun "v2" (App OpbLt ((Var (Short "v1")) (Var (Short "v2"))))))) 
(Dlet (0 0 0 0 0 0) ">" (Fun "v1" (Fun "v2" (App OpbGt ((Var (Short "v1")) (Var (Short "v2"))))))) 
(Dlet (0 0 0 0 0 0) "<=" (Fun "v1" (Fun "v2" (App OpbLeq ((Var (Short "v1")) (Var (Short "v2"))))))) 
(Dlet (0 0 0 0 0 0) ">=" (Fun "v1" (Fun "v2" (App OpbGeq ((Var (Short "v1")) (Var (Short "v2"))))))) 
(Dlet (0 0 0 0 0 0) "~" (Fun "v1" (App OpnMinus ((Lit 0) (Var (Short "v1")))))) 
(Dlet (0 0 0 0 0 0) "@" (Fun "v1" (Fun "v2" (App ListAppend ((Var (Short "v1")) (Var (Short "v2"))))))) 
(Dlet (0 0 0 0 0 0) "=" (Fun "v1" (Fun "v2" (App Equality ((Var (Short "v1")) (Var (Short "v2"))))))) 
(Dlet (0 0 0 0 0 0) "not" (Fun "v1" (App Equality ((Var (Short "v1")) (App OpbLt ((Lit 0) (Lit 0))))))) 
(Dlet (0 0 0 0 0 0) "<>" (Fun "v1" (Fun "v2" (App Equality ((App Equality ((Var (Short "v1")) (Var (Short "v2")))) (App OpbLt ((Lit 0) (Lit 0)))))))) 
(Dlet (0 0 0 0 0 0) "^" (Fun "v1" (Fun "v2" (App Opapp ((App Opapp ((Var (Long "String" (Short "strcat"))) (Var (Short "v1")))) (Var (Short "v2"))))))) 
(Dlet (0 0 0 0 0 0) ":=" (Fun "x" (Fun "y" (App Opassign ((Var (Short "x")) (Var (Short "y"))))))) 
(Dlet (0 0 0 0 0 0) "!" (Fun "x" (App Opderef ((Var (Short "x")))))) 
(Dmod "Bool" ((Dlet (0 0 0 0 0 0) "toString" (Fun "v1" (If (Var (Short "v1")) (Lit "True") (Lit "False")))) (Dlet (0 0 0 0 0 0) "compare" (Fun "v1" (Fun "v2" (If (Var (Short "v1")) (If (Var (Short "v2")) (Con (SOME (Short "Equal")) nil) (Con (SOME (Short "Greater")) nil)) (If (Var (Short "v2")) (Con (SOME (Short "Less")) nil) (Con (SOME (Short "Equal")) nil)))))))) 
(Dmod "Pair" ((Dlet (0 0 0 0 0 0) "map" (Fun "v5" (Fun "v6" (Fun "v7" (Mat (Con NONE ((Var (Short "v6")) (Var (Short "v7")))) (((Pcon NONE ("v4" "v3")) Mat (Var (Short "v3")) (((Pcon NONE ("v2" "v1")) Con NONE ((App Opapp ((Var (Short "v5")) (Var (Short "v2")))) (App Opapp ((Var (Short "v4")) (Var (Short "v1")))))))))))))) (Dlet (0 0 0 0 0 0) "toString" (Fun "v5" (Fun "v6" (Fun "v7" (Mat (Con NONE ((Var (Short "v6")) (Var (Short "v7")))) (((Pcon NONE ("v4" "v3")) Mat (Var (Short "v3")) (((Pcon NONE ("v2" "v1")) App Strcat ((Con (SOME (Short "::")) ((Lit "(") (Con (SOME (Short "::")) ((App Opapp ((Var (Short "v5")) (Var (Short "v2")))) (Con (SOME (Short "::")) ((Lit ", ") (Con (SOME (Short "::")) ((App Opapp ((Var (Short "v4")) (Var (Short "v1")))) (Con (SOME (Short "::")) ((Lit ")") (Con (SOME (Short "[]")) nil))))))))))))))))))))) (Dlet (0 0 0 0 0 0) "compare" (Fun "v1" (Fun "v2" (Fun "v3" (Fun "v4" (Mat (App Opapp ((App Opapp ((Var (Short "v1")) (App Opapp ((Var (Short "fst")) (Var (Short "v3")))))) (App Opapp ((Var (Short "fst")) (Var (Short "v4")))))) (((Pcon (SOME (Short "Less")) nil) Con (SOME (Short "Less")) nil) ((Pcon (SOME (Short "Equal")) nil) App Opapp ((App Opapp ((Var (Short "v2")) (App Opapp ((Var (Short "snd")) (Var (Short "v3")))))) (App Opapp ((Var (Short "snd")) (Var (Short "v4")))))) ((Pcon (SOME (Short "Greater")) nil) Con (SOME (Short "Greater")) nil)))))))))) 
(Dmod "Int" ((Dtabbrev (0 0 0 0 0 0) nil "int" (Atapp nil (Short "int"))) (Dlet (0 0 0 0 0 0) "+" (Fun "v1" (Fun "v2" (App OpnPlus ((Var (Short "v1")) (Var (Short "v2"))))))) (Dlet (0 0 0 0 0 0) "-" (Fun "v1" (Fun "v2" (App OpnMinus ((Var (Short "v1")) (Var (Short "v2"))))))) (Dlet (0 0 0 0 0 0) "*" (Fun "v1" (Fun "v2" (App OpnTimes ((Var (Short "v1")) (Var (Short "v2"))))))) (Dlet (0 0 0 0 0 0) "div" (Fun "v1" (Fun "v2" (App OpnDivide ((Var (Short "v1")) (Var (Short "v2"))))))) (Dlet (0 0 0 0 0 0) "mod" (Fun "v1" (Fun "v2" (App OpnModulo ((Var (Short "v1")) (Var (Short "v2"))))))) (Dlet (0 0 0 0 0 0) "<" (Fun "v1" (Fun "v2" (App OpbLt ((Var (Short "v1")) (Var (Short "v2"))))))) (Dlet (0 0 0 0 0 0) ">" (Fun "v1" (Fun "v2" (App OpbGt ((Var (Short "v1")) (Var (Short "v2"))))))) (Dlet (0 0 0 0 0 0) "<=" (Fun "v1" (Fun "v2" (App OpbLeq ((Var (Short "v1")) (Var (Short "v2"))))))) (Dlet (0 0 0 0 0 0) ">=" (Fun "v1" (Fun "v2" (App OpbGeq ((Var (Short "v1")) (Var (Short "v2"))))))) (Dlet (0 0 0 0 0 0) "~" (Fun "v1" (App OpnMinus ((Lit 0) (Var (Short "v1")))))) (Dlocal ((Dletrec (0 0 0 0 0 0) (("zero_pad" "v2" Fun "v1" (If (App Equality ((Var (Short "v2")) (Lit 0))) (Var (Short "v1")) (App Opapp ((App Opapp ((Var (Short "zero_pad")) (Let (SOME "k") (App OpnMinus ((Var (Short "v2")) (Lit 1))) (If (App OpbLt ((Var (Short "k")) (Lit 0))) (Lit 0) (Var (Short "k")))))) (Con (SOME (Short "::")) ((Lit (char "0")) (Var (Short "v1")))))))))) (Dlet (0 0 0 0 0 0) "tochar" (Fun "v1" (If (App OpbLt ((Var (Short "v1")) (Lit 10))) (App Chr ((App OpnPlus ((App Ord ((Lit (char "0")))) (Var (Short "v1")))))) (App Chr ((Let (SOME "k") (App OpnMinus ((App OpnPlus ((App Ord ((Lit (char "A")))) (Var (Short "v1")))) (Lit 10))) (If (App OpbLt ((Var (Short "k")) (Lit 0))) (Lit 0) (Var (Short "k"))))))))) (Dletrec (0 0 0 0 0 0) (("simple_tochars" "v3" Fun "v2" (Fun "v1" (If (App OpbLt ((Var (Short "v2")) (Lit 10))) (App Opapp ((App Opapp ((Var (Short "zero_pad")) (Let (SOME "k") (App OpnMinus ((Var (Short "v3")) (Lit 1))) (If (App OpbLt ((Var (Short "k")) (Lit 0))) (Lit 0) (Var (Short "k")))))) (Con (SOME (Short "::")) ((App Opapp ((Var (Short "tochar")) (Var (Short "v2")))) (Var (Short "v1")))))) (App Opapp ((App Opapp ((App Opapp ((Var (Short "simple_tochars")) (Let (SOME "k") (App OpnMinus ((Var (Short "v3")) (Lit 1))) (If (App OpbLt ((Var (Short "k")) (Lit 0))) (Lit 0) (Var (Short "k")))))) (App OpnDivide ((Var (Short "v2")) (Lit 10))))) (Con (SOME (Short "::")) ((App Opapp ((Var (Short "tochar")) (App OpnModulo ((Var (Short "v2")) (Lit 10))))) (Var (Short "v1"))))))))))) (Dletrec (0 0 0 0 0 0) (("tochars" "v2" Fun "v3" (Fun "v1" (If (App Equality ((Var (Short "v3")) (Lit 0))) (App Opapp ((App Opapp ((App Opapp ((Var (Short "simple_tochars")) (Lit 0))) (Var (Short "v2")))) (Var (Short "v1")))) (If (App OpbLt ((Var (Short "v3")) (Lit 100000000))) (App Opapp ((App Opapp ((App Opapp ((Var (Short "simple_tochars")) (Lit 0))) (Var (Short "v3")))) (App Opapp ((App Opapp ((App Opapp ((Var (Short "simple_tochars")) (Lit 8))) (Var (Short "v2")))) (Var (Short "v1")))))) (App Opapp ((App Opapp ((App Opapp ((Var (Short "tochars")) (App OpnModulo ((Var (Short "v3")) (Lit 100000000))))) (App OpnDivide ((Var (Short "v3")) (Lit 100000000))))) (App Opapp ((App Opapp ((App Opapp ((Var (Short "simple_tochars")) (Lit 8))) (Var (Short "v2")))) (Var (Short "v1"))))))))))))) ((Dlet (0 0 0 0 0 0) "toString" (Fun "v1" (If (Log And (App OpbLeq ((Lit 0) (Var (Short "v1")))) (App OpbLt ((Var (Short "v1")) (Lit 10)))) (App Opapp ((Var (Long "String" (Short "str"))) (App Opapp ((Var (Short "tochar")) (Let (SOME "k") (Var (Short "v1")) (If (App OpbLt ((Var (Short "k")) (Lit 0))) (App OpnMinus ((Lit 0) (Var (Short "k")))) (Var (Short "k")))))))) (App Implode ((App ListAppend ((If (App OpbLt ((Var (Short "v1")) (Lit 0))) (Con (SOME (Short "::")) ((Lit (char "~")) (Con (SOME (Short "[]")) nil))) (Con (SOME (Short "[]")) nil)) (App Opapp ((App Opapp ((App Opapp ((Var (Short "tochars")) (App OpnModulo ((Let (SOME "k") (Var (Short "v1")) (If (App OpbLt ((Var (Short "k")) (Lit 0))) (App OpnMinus ((Lit 0) (Var (Short "k")))) (Var (Short "k")))) (Lit 100000000))))) (App OpnDivide ((Let (SOME "k") (Var (Short "v1")) (If (App OpbLt ((Var (Short "k")) (Lit 0))) (App OpnMinus ((Lit 0) (Var (Short "k")))) (Var (Short "k")))) (Lit 100000000))))) (Con (SOME (Short "[]")) nil)))))))))) (Dlocal ((Dlet (0 0 0 0 0 0) "fromchar_unsafe" (Fun "v1" (Let (SOME "k") (App OpnMinus ((App Ord ((Var (Short "v1")))) (App Ord ((Lit (char "0")))))) (If (App OpbLt ((Var (Short "k")) (Lit 0))) (Lit 0) (Var (Short "k")))))) (Dletrec (0 0 0 0 0 0) (("fromchars_range_unsafe" "v1" Fun "v2" (Fun "v3" (If (App Equality ((Var (Short "v2")) (Lit 0))) (Lit 0) (App OpnPlus ((App OpnTimes ((App Opapp ((App Opapp ((App Opapp ((Var (Short "fromchars_range_unsafe")) (Var (Short "v1")))) (Let (SOME "k") (App OpnMinus ((Var (Short "v2")) (Lit 1))) (If (App OpbLt ((Var (Short "k")) (Lit 0))) (Lit 0) (Var (Short "k")))))) (Var (Short "v3")))) (Lit 10))) (App Opapp ((Var (Short "fromchar_unsafe")) (App Strsub ((Var (Short "v3")) (App OpnPlus ((Var (Short "v1")) (Let (SOME "k") (App OpnMinus ((Var (Short "v2")) (Lit 1))) (If (App OpbLt ((Var (Short "k")) (Lit 0))) (Lit 0) (Var (Short "k"))))))))))))))))) (Dletrec (0 0 0 0 0 0) (("fromchars_unsafe" "v4" Fun "v5" (If (App Equality ((Var (Short "v4")) (Lit 0))) (Lit 0) (If (App OpbLeq ((App OpnPlus ((Let (SOME "k") (App OpnMinus ((Var (Short "v4")) (Lit 1))) (If (App OpbLt ((Var (Short "k")) (Lit 0))) (Lit 0) (Var (Short "k")))) (Lit 1))) (Lit 8))) (App Opapp ((App Opapp ((App Opapp ((Var (Short "fromchars_range_unsafe")) (Lit 0))) (App OpnPlus ((Let (SOME "k") (App OpnMinus ((Var (Short "v4")) (Lit 1))) (If (App OpbLt ((Var (Short "k")) (Lit 0))) (Lit 0) (Var (Short "k")))) (Lit 1))))) (Var (Short "v5")))) (Let (SOME "v3") (Let (SOME "k") (App OpnMinus ((App OpnPlus ((Let (SOME "k") (App OpnMinus ((Var (Short "v4")) (Lit 1))) (If (App OpbLt ((Var (Short "k")) (Lit 0))) (Lit 0) (Var (Short "k")))) (Lit 1))) (Lit 8))) (If (App OpbLt ((Var (Short "k")) (Lit 0))) (Lit 0) (Var (Short "k")))) (Let (SOME "v2") (App OpnTimes ((App Opapp ((App Opapp ((Var (Short "fromchars_unsafe")) (Var (Short "v3")))) (Var (Short "v5")))) (Lit 100000000))) (Let (SOME "v1") (App Opapp ((App Opapp ((App Opapp ((Var (Short "fromchars_range_unsafe")) (Var (Short "v3")))) (Lit 8))) (Var (Short "v5")))) (App OpnPlus ((Var (Short "v2")) (Var (Short "v1")))))))))))) (Dlet (0 0 0 0 0 0) "fromstring_unsafe" (Fun "v1" (If (App Equality ((App Strlen ((Var (Short "v1")))) (Lit 0))) (Lit 0) (If (App Equality ((App Strsub ((Var (Short "v1")) (Lit 0))) (Lit (char "~")))) (App OpnMinus ((Lit 0) (App Opapp ((App Opapp ((Var (Short "fromchars_unsafe")) (Let (SOME "k") (App OpnMinus ((App Strlen ((Var (Short "v1")))) (Lit 1))) (If (App OpbLt ((Var (Short "k")) (Lit 0))) (Lit 0) (Var (Short "k")))))) (App CopyStrStr ((Var (Short "v1")) (Lit 1) (Let (SOME "k") (App OpnMinus ((App Strlen ((Var (Short "v1")))) (Lit 1))) (If (App OpbLt ((Var (Short "k")) (Lit 0))) (Lit 0) (Var (Short "k")))))))))) (App Opapp ((App Opapp ((Var (Short "fromchars_unsafe")) (App Strlen ((Var (Short "v1")))))) (Var (Short "v1")))))))) (Dlet (0 0 0 0 0 0) "fromchar" (Fun "v1" (If (App Equality ((Var (Short "v1")) (Lit (char "0")))) (Con (SOME (Short "Some")) ((Lit 0))) (If (App Equality ((Var (Short "v1")) (Lit (char "1")))) (Con (SOME (Short "Some")) ((Lit 1))) (If (App Equality ((Var (Short "v1")) (Lit (char "2")))) (Con (SOME (Short "Some")) ((Lit 2))) (If (App Equality ((Var (Short "v1")) (Lit (char "3")))) (Con (SOME (Short "Some")) ((Lit 3))) (If (App Equality ((Var (Short "v1")) (Lit (char "4")))) (Con (SOME (Short "Some")) ((Lit 4))) (If (App Equality ((Var (Short "v1")) (Lit (char "5")))) (Con (SOME (Short "Some")) ((Lit 5))) (If (App Equality ((Var (Short "v1")) (Lit (char "6")))) (Con (SOME (Short "Some")) ((Lit 6))) (If (App Equality ((Var (Short "v1")) (Lit (char "7")))) (Con (SOME (Short "Some")) ((Lit 7))) (If (App Equality ((Var (Short "v1")) (Lit (char "8")))) (Con (SOME (Short "Some")) ((Lit 8))) (If (App Equality ((Var (Short "v1")) (Lit (char "9")))) (Con (SOME (Short "Some")) ((Lit 9))) (Con (SOME (Short "None")) nil))))))))))))) (Dletrec (0 0 0 0 0 0) (("fromchars_range" "v6" Fun "v7" (Fun "v8" (If (App Equality ((Var (Short "v7")) (Lit 0))) (Con (SOME (Short "Some")) ((Lit 0))) (Let (SOME "v4") (App Opapp ((App Opapp ((Var (Long "Option" (Short "map"))) (Fun "v5" (App OpnTimes ((Lit 10) (Var (Short "v5"))))))) (App Opapp ((App Opapp ((App Opapp ((Var (Short "fromchars_range")) (Var (Short "v6")))) (Let (SOME "k") (App OpnMinus ((Var (Short "v7")) (Lit 1))) (If (App OpbLt ((Var (Short "k")) (Lit 0))) (Lit 0) (Var (Short "k")))))) (Var (Short "v8")))))) (Let (SOME "v3") (App Opapp ((Var (Short "fromchar")) (App Strsub ((Var (Short "v8")) (App OpnPlus ((Var (Short "v6")) (Let (SOME "k") (App OpnMinus ((Var (Short "v7")) (Lit 1))) (If (App OpbLt ((Var (Short "k")) (Lit 0))) (Lit 0) (Var (Short "k")))))))))) (App Opapp ((App Opapp ((App Opapp ((Var (Long "Option" (Short "map2"))) (Fun "v2" (Fun "v1" (App OpnPlus ((Var (Short "v2")) (Var (Short "v1")))))))) (Var (Short "v4")))) (Var (Short "v3"))))))))))) (Dletrec (0 0 0 0 0 0) (("fromchars" "v7" Fun "v8" (If (App Equality ((Var (Short "v7")) (Lit 0))) (Con (SOME (Short "Some")) ((Lit 0))) (If (App OpbLeq ((App OpnPlus ((Let (SOME "k") (App OpnMinus ((Var (Short "v7")) (Lit 1))) (If (App OpbLt ((Var (Short "k")) (Lit 0))) (Lit 0) (Var (Short "k")))) (Lit 1))) (Lit 8))) (App Opapp ((App Opapp ((App Opapp ((Var (Short "fromchars_range")) (Lit 0))) (App OpnPlus ((Let (SOME "k") (App OpnMinus ((Var (Short "v7")) (Lit 1))) (If (App OpbLt ((Var (Short "k")) (Lit 0))) (Lit 0) (Var (Short "k")))) (Lit 1))))) (Var (Short "v8")))) (Let (SOME "v6") (Let (SOME "k") (App OpnMinus ((App OpnPlus ((Let (SOME "k") (App OpnMinus ((Var (Short "v7")) (Lit 1))) (If (App OpbLt ((Var (Short "k")) (Lit 0))) (Lit 0) (Var (Short "k")))) (Lit 1))) (Lit 8))) (If (App OpbLt ((Var (Short "k")) (Lit 0))) (Lit 0) (Var (Short "k")))) (Let (SOME "v4") (App Opapp ((App Opapp ((Var (Long "Option" (Short "map"))) (Fun "v5" (App OpnTimes ((Lit 100000000) (Var (Short "v5"))))))) (App Opapp ((App Opapp ((Var (Short "fromchars")) (Var (Short "v6")))) (Var (Short "v8")))))) (Let (SOME "v3") (App Opapp ((App Opapp ((App Opapp ((Var (Short "fromchars_range")) (Var (Short "v6")))) (Lit 8))) (Var (Short "v8")))) (App Opapp ((App Opapp ((App Opapp ((Var (Long "Option" (Short "map2"))) (Fun "v2" (Fun "v1" (App OpnPlus ((Var (Short "v2")) (Var (Short "v1")))))))) (Var (Short "v4")))) (Var (Short "v3"))))))))))))) ((Dlet (0 0 0 0 0 0) "fromString" (Fun "v5" (If (App Equality ((App Strlen ((Var (Short "v5")))) (Lit 0))) (Con (SOME (Short "Some")) ((Lit 0))) (If (Log Or (App Equality ((App Strsub ((Var (Short "v5")) (Lit 0))) (Lit (char "~")))) (App Equality ((App Strsub ((Var (Short "v5")) (Lit 0))) (Lit (char "-"))))) (App Opapp ((App Opapp ((Var (Long "Option" (Short "map"))) (App Opapp ((App Opapp ((Var (Short "o")) (Fun "v1" (App OpnMinus ((Lit 0) (Var (Short "v1"))))))) (Fun "v2" (Var (Short "v2"))))))) (App Opapp ((App Opapp ((Var (Short "fromchars")) (Let (SOME "k") (App OpnMinus ((App Strlen ((Var (Short "v5")))) (Lit 1))) (If (App OpbLt ((Var (Short "k")) (Lit 0))) (Lit 0) (Var (Short "k")))))) (App CopyStrStr ((Var (Short "v5")) (Lit 1) (Let (SOME "k") (App OpnMinus ((App Strlen ((Var (Short "v5")))) (Lit 1))) (If (App OpbLt ((Var (Short "k")) (Lit 0))) (Lit 0) (Var (Short "k")))))))))) (If (App Equality ((App Strsub ((Var (Short "v5")) (Lit 0))) (Lit (char "+")))) (App Opapp ((App Opapp ((Var (Long "Option" (Short "map"))) (Fun "v3" (Var (Short "v3"))))) (App Opapp ((App Opapp ((Var (Short "fromchars")) (Let (SOME "k") (App OpnMinus ((App Strlen ((Var (Short "v5")))) (Lit 1))) (If (App OpbLt ((Var (Short "k")) (Lit 0))) (Lit 0) (Var (Short "k")))))) (App CopyStrStr ((Var (Short "v5")) (Lit 1) (Let (SOME "k") (App OpnMinus ((App Strlen ((Var (Short "v5")))) (Lit 1))) (If (App OpbLt ((Var (Short "k")) (Lit 0))) (Lit 0) (Var (Short "k")))))))))) (App Opapp ((App Opapp ((Var (Long "Option" (Short "map"))) (Fun "v4" (Var (Short "v4"))))) (App Opapp ((App Opapp ((Var (Short "fromchars")) (App Strlen ((Var (Short "v5")))))) (Var (Short "v5"))))))))))) (Dlet (0 0 0 0 0 0) "fromNatString" (Fun "v2" (Mat (App Opapp ((Var (Short "fromString")) (Var (Short "v2")))) (((Pcon (SOME (Short "None")) nil) Con (SOME (Short "None")) nil) ((Pcon (SOME (Short "Some")) ("v1")) If (App OpbLeq ((Lit 0) (Var (Short "v1")))) (Con (SOME (Short "Some")) ((Var (Short "v1")))) (Con (SOME (Short "None")) nil)))))) (Dletrec (0 0 0 0 0 0) (("gcd" "v1" Fun "v2" (If (App Equality ((Var (Short "v1")) (Lit 0))) (Var (Short "v2")) (App Opapp ((App Opapp ((Var (Short "gcd")) (App OpnModulo ((Var (Short "v2")) (Var (Short "v1")))))) (Var (Short "v1")))))))) (Dlet (0 0 0 0 0 0) "compare" (Fun "v1" (Fun "v2" (If (App OpbLt ((Var (Short "v1")) (Var (Short "v2")))) (Con (SOME (Short "Less")) nil) (If (App OpbLt ((Var (Short "v2")) (Var (Short "v1")))) (Con (SOME (Short "Greater")) nil) (Con (SOME (Short "Equal")) nil)))))))))))) 
(Dlocal ((Dtype (0 0 0 0 0 0) ((nil "rational" ("Ratpair" (Atapp nil (Short "int")) (Atapp nil (Short "int")))))) (Dlet (0 0 0 0 0 0) "div_gcd" (Fun "v2" (Fun "v3" (Let (SOME "v1") (App Opapp ((App Opapp ((Var (Long "Int" (Short "gcd"))) (Let (SOME "k") (Var (Short "v2")) (If (App OpbLt ((Var (Short "k")) (Lit 0))) (App OpnMinus ((Lit 0) (Var (Short "k")))) (Var (Short "k")))))) (Var (Short "v3")))) (If (Log Or (App Equality ((Var (Short "v1")) (Lit 0))) (App Equality ((Var (Short "v1")) (Lit 1)))) (Con (SOME (Short "Ratpair")) ((Var (Short "v2")) (Var (Short "v3")))) (Con (SOME (Short "Ratpair")) ((App OpnDivide ((Var (Short "v2")) (Var (Short "v1")))) (App OpnDivide ((Var (Short "v3")) (Var (Short "v1")))))))))))) ((Dmod "Rat" ((Dtabbrev (0 0 0 0 0 0) nil "rat" (Atapp nil (Short "rational"))) (Dlet (0 0 0 0 0 0) "fromInt" (Fun "v1" (Con (SOME (Short "Ratpair")) ((Var (Short "v1")) (Lit 1))))) (Dlet (0 0 0 0 0 0) "<=" (Fun "v5" (Fun "v6" (Mat (Var (Short "v5")) (((Pcon (SOME (Short "Ratpair")) ("v4" "v3")) Mat (Var (Short "v6")) (((Pcon (SOME (Short "Ratpair")) ("v2" "v1")) App OpbLeq ((App OpnTimes ((Var (Short "v4")) (Var (Short "v1")))) (App OpnTimes ((Var (Short "v2")) (Var (Short "v3"))))))))))))) (Dlet (0 0 0 0 0 0) ">=" (Fun "v1" (Fun "v2" (App Opapp ((App Opapp ((Var (Short "<=")) (Var (Short "v2")))) (Var (Short "v1"))))))) (Dlet (0 0 0 0 0 0) "<" (Fun "v5" (Fun "v6" (Mat (Var (Short "v5")) (((Pcon (SOME (Short "Ratpair")) ("v4" "v3")) Mat (Var (Short "v6")) (((Pcon (SOME (Short "Ratpair")) ("v2" "v1")) App OpbLt ((App OpnTimes ((Var (Short "v4")) (Var (Short "v1")))) (App OpnTimes ((Var (Short "v2")) (Var (Short "v3"))))))))))))) (Dlet (0 0 0 0 0 0) ">" (Fun "v1" (Fun "v2" (App Opapp ((App Opapp ((Var (Short "<")) (Var (Short "v2")))) (Var (Short "v1"))))))) (Dlet (0 0 0 0 0 0) "compare" (Fun "v7" (Fun "v8" (Mat (Var (Short "v7")) (((Pcon (SOME (Short "Ratpair")) ("v6" "v5")) Mat (Var (Short "v8")) (((Pcon (SOME (Short "Ratpair")) ("v4" "v3")) Let (SOME "v2") (App OpnTimes ((Var (Short "v6")) (Var (Short "v3")))) (Let (SOME "v1") (App OpnTimes ((Var (Short "v4")) (Var (Short "v5")))) (If (App OpbLt ((Var (Short "v2")) (Var (Short "v1")))) (Con (SOME (Short "Less")) nil) (If (App OpbLt ((Var (Short "v1")) (Var (Short "v2")))) (Con (SOME (Short "Greater")) nil) (Con (SOME (Short "Equal")) nil)))))))))))) (Dlet (0 0 0 0 0 0) "min" (Fun "v1" (Fun "v2" (If (App Opapp ((App Opapp ((Var (Short "<")) (Var (Short "v1")))) (Var (Short "v2")))) (Var (Short "v1")) (Var (Short "v2")))))) (Dlet (0 0 0 0 0 0) "max" (Fun "v1" (Fun "v2" (If (App Opapp ((App Opapp ((Var (Short ">")) (Var (Short "v1")))) (Var (Short "v2")))) (Var (Short "v1")) (Var (Short "v2")))))) (Dlet (0 0 0 0 0 0) "+" (Fun "v5" (Fun "v6" (Mat (Var (Short "v5")) (((Pcon (SOME (Short "Ratpair")) ("v4" "v3")) Mat (Var (Short "v6")) (((Pcon (SOME (Short "Ratpair")) ("v2" "v1")) App Opapp ((App Opapp ((Var (Short "div_gcd")) (App OpnPlus ((App OpnTimes ((Var (Short "v4")) (Var (Short "v1")))) (App OpnTimes ((Var (Short "v2")) (Var (Short "v3")))))))) (App OpnTimes ((Var (Short "v3")) (Var (Short "v1"))))))))))))) (Dlet (0 0 0 0 0 0) "-" (Fun "v5" (Fun "v6" (Mat (Var (Short "v5")) (((Pcon (SOME (Short "Ratpair")) ("v4" "v3")) Mat (Var (Short "v6")) (((Pcon (SOME (Short "Ratpair")) ("v2" "v1")) App Opapp ((App Opapp ((Var (Short "div_gcd")) (App OpnMinus ((App OpnTimes ((Var (Short "v4")) (Var (Short "v1")))) (App OpnTimes ((Var (Short "v2")) (Var (Short "v3")))))))) (App OpnTimes ((Var (Short "v3")) (Var (Short "v1"))))))))))))) (Dlet (0 0 0 0 0 0) "~" (Fun "v1" (App Opapp ((App Opapp ((Var (Short "-")) (App Opapp ((Var (Short "fromInt")) (Lit 0))))) (Var (Short "v1")))))) (Dlet (0 0 0 0 0 0) "*" (Fun "v5" (Fun "v6" (Mat (Var (Short "v5")) (((Pcon (SOME (Short "Ratpair")) ("v4" "v3")) Mat (Var (Short "v6")) (((Pcon (SOME (Short "Ratpair")) ("v2" "v1")) App Opapp ((App Opapp ((Var (Short "div_gcd")) (App OpnTimes ((Var (Short "v4")) (Var (Short "v2")))))) (App OpnTimes ((Var (Short "v3")) (Var (Short "v1"))))))))))))) (Dlet (0 0 0 0 0 0) "inv" (Fun "v3" (Mat (Var (Short "v3")) (((Pcon (SOME (Short "Ratpair")) ("v2" "v1")) Con (SOME (Short "Ratpair")) ((If (App OpbLt ((Var (Short "v2")) (Lit 0))) (App OpnMinus ((Lit 0) (Var (Short "v1")))) (Var (Short "v1"))) (Let (SOME "k") (Var (Short "v2")) (If (App OpbLt ((Var (Short "k")) (Lit 0))) (App OpnMinus ((Lit 0) (Var (Short "k")))) (Var (Short "k")))))))))) (Dlet (0 0 0 0 0 0) "/" (Fun "v1" (Fun "v2" (App Opapp ((App Opapp ((Var (Short "*")) (Var (Short "v1")))) (App Opapp ((Var (Short "inv")) (Var (Short "v2"))))))))) (Dlet (0 0 0 0 0 0) "toString" (Fun "v3" (Mat (Var (Short "v3")) (((Pcon (SOME (Short "Ratpair")) ("v2" "v1")) If (App Equality ((Var (Short "v1")) (Lit 1))) (App Opapp ((Var (Long "Int" (Short "toString"))) (Var (Short "v2")))) (App Strcat ((Con (SOME (Short "::")) ((App Opapp ((Var (Long "Int" (Short "toString"))) (Var (Short "v2")))) (Con (SOME (Short "::")) ((App Implode ((Con (SOME (Short "::")) ((Lit (char "/")) (Con (SOME (Short "[]")) nil))))) (Con (SOME (Short "::")) ((App Opapp ((Var (Long "Int" (Short "toString"))) (Var (Short "v1")))) (Con (SOME (Short "[]")) nil)))))))))))))))) (Dtabbrev (0 0 0 0 0 0) nil "rat" (Atapp nil (Short "rational"))))) 
(Dmod "Char" ((Dtabbrev (0 0 0 0 0 0) nil "char" (Atapp nil (Short "char"))) (Dlet (0 0 0 0 0 0) "ord" (Fun "v1" (App Ord ((Var (Short "v1")))))) (Dlet (0 0 0 0 0 0) "chr" (Fun "v1" (App Chr ((Var (Short "v1")))))) (Dlet (0 0 0 0 0 0) "<" (Fun "v1" (Fun "v2" (App ChopbLt ((Var (Short "v1")) (Var (Short "v2"))))))) (Dlet (0 0 0 0 0 0) ">" (Fun "v1" (Fun "v2" (App ChopbGt ((Var (Short "v1")) (Var (Short "v2"))))))) (Dlet (0 0 0 0 0 0) "<=" (Fun "v1" (Fun "v2" (App ChopbLeq ((Var (Short "v1")) (Var (Short "v2"))))))) (Dlet (0 0 0 0 0 0) ">=" (Fun "v1" (Fun "v2" (App ChopbGeq ((Var (Short "v1")) (Var (Short "v2"))))))) (Dlet (0 0 0 0 0 0) "isSpace" (Fun "v1" (Log Or (App Equality ((App Ord ((Var (Short "v1")))) (Lit 32))) (Log And (App OpbLeq ((Lit 9) (App Ord ((Var (Short "v1")))))) (App OpbLeq ((App Ord ((Var (Short "v1")))) (Lit 13))))))))) 
(Dmod "Word64" ((Dtabbrev (0 0 0 0 0 0) nil "word" (Atapp nil (Short "word64"))) (Dlet (0 0 0 0 0 0) "fromInt" (Fun "v1" (App W64fromInt ((Var (Short "v1")))))) (Dlet (0 0 0 0 0 0) "toInt" (Fun "v1" (App W64toInt ((Var (Short "v1")))))) (Dlet (0 0 0 0 0 0) "andb" (Fun "v1" (Fun "v2" (App Opw64Andw ((Var (Short "v1")) (Var (Short "v2"))))))) (Dlet (0 0 0 0 0 0) "orb" (Fun "v1" (Fun "v2" (App Opw64Orw ((Var (Short "v1")) (Var (Short "v2"))))))) (Dlet (0 0 0 0 0 0) "xorb" (Fun "v1" (Fun "v2" (App Opw64Xor ((Var (Short "v1")) (Var (Short "v2"))))))) (Dlet (0 0 0 0 0 0) "notb" (Fun "v1" (App Opw64Xor ((Var (Short "v1")) (Lit (word64 18446744073709551615)))))) (Dlet (0 0 0 0 0 0) "+" (Fun "v1" (Fun "v2" (App Opw64Add ((Var (Short "v1")) (Var (Short "v2"))))))) (Dlet (0 0 0 0 0 0) "-" (Fun "v1" (Fun "v2" (App Opw64Sub ((Var (Short "v1")) (Var (Short "v2"))))))) (Dletrec (0 0 0 0 0 0) (("<<" "v2" Fun "v1" (If (App OpbLt ((Lit 64) (Var (Short "v1")))) (Lit (word64 0)) (If (App OpbLt ((Var (Short "v1")) (Lit 8))) (If (App OpbLt ((Var (Short "v1")) (Lit 4))) (If (App OpbLt ((Var (Short "v1")) (Lit 2))) (If (App OpbLt ((Var (Short "v1")) (Lit 1))) (Var (Short "v2")) (App (Shift64Lsl . 1) ((Var (Short "v2"))))) (If (App OpbLt ((Var (Short "v1")) (Lit 3))) (App (Shift64Lsl . 2) ((Var (Short "v2")))) (App (Shift64Lsl . 3) ((Var (Short "v2")))))) (If (App OpbLt ((Var (Short "v1")) (Lit 6))) (If (App OpbLt ((Var (Short "v1")) (Lit 5))) (App (Shift64Lsl . 4) ((Var (Short "v2")))) (App (Shift64Lsl . 5) ((Var (Short "v2"))))) (If (App OpbLt ((Var (Short "v1")) (Lit 7))) (App (Shift64Lsl . 6) ((Var (Short "v2")))) (App (Shift64Lsl . 7) ((Var (Short "v2"))))))) (App Opapp ((App Opapp ((Var (Short "<<")) (App (Shift64Lsl . 8) ((Var (Short "v2")))))) (Let (SOME "k") (App OpnMinus ((Var (Short "v1")) (Lit 8))) (If (App OpbLt ((Var (Short "k")) (Lit 0))) (Lit 0) (Var (Short "k"))))))))))) (Dletrec (0 0 0 0 0 0) ((">>" "v2" Fun "v1" (If (App OpbLt ((Lit 64) (Var (Short "v1")))) (Lit (word64 0)) (If (App OpbLt ((Var (Short "v1")) (Lit 8))) (If (App OpbLt ((Var (Short "v1")) (Lit 4))) (If (App OpbLt ((Var (Short "v1")) (Lit 2))) (If (App OpbLt ((Var (Short "v1")) (Lit 1))) (Var (Short "v2")) (App (Shift64Lsr . 1) ((Var (Short "v2"))))) (If (App OpbLt ((Var (Short "v1")) (Lit 3))) (App (Shift64Lsr . 2) ((Var (Short "v2")))) (App (Shift64Lsr . 3) ((Var (Short "v2")))))) (If (App OpbLt ((Var (Short "v1")) (Lit 6))) (If (App OpbLt ((Var (Short "v1")) (Lit 5))) (App (Shift64Lsr . 4) ((Var (Short "v2")))) (App (Shift64Lsr . 5) ((Var (Short "v2"))))) (If (App OpbLt ((Var (Short "v1")) (Lit 7))) (App (Shift64Lsr . 6) ((Var (Short "v2")))) (App (Shift64Lsr . 7) ((Var (Short "v2"))))))) (App Opapp ((App Opapp ((Var (Short ">>")) (App (Shift64Lsr . 8) ((Var (Short "v2")))))) (Let (SOME "k") (App OpnMinus ((Var (Short "v1")) (Lit 8))) (If (App OpbLt ((Var (Short "k")) (Lit 0))) (Lit 0) (Var (Short "k"))))))))))) (Dletrec (0 0 0 0 0 0) (("~>>" "v2" Fun "v1" (If (App OpbLt ((Lit 64) (Var (Short "v1")))) (App (Shift64Asr . 64) ((Var (Short "v2")))) (If (App OpbLt ((Var (Short "v1")) (Lit 8))) (If (App OpbLt ((Var (Short "v1")) (Lit 4))) (If (App OpbLt ((Var (Short "v1")) (Lit 2))) (If (App OpbLt ((Var (Short "v1")) (Lit 1))) (Var (Short "v2")) (App (Shift64Asr . 1) ((Var (Short "v2"))))) (If (App OpbLt ((Var (Short "v1")) (Lit 3))) (App (Shift64Asr . 2) ((Var (Short "v2")))) (App (Shift64Asr . 3) ((Var (Short "v2")))))) (If (App OpbLt ((Var (Short "v1")) (Lit 6))) (If (App OpbLt ((Var (Short "v1")) (Lit 5))) (App (Shift64Asr . 4) ((Var (Short "v2")))) (App (Shift64Asr . 5) ((Var (Short "v2"))))) (If (App OpbLt ((Var (Short "v1")) (Lit 7))) (App (Shift64Asr . 6) ((Var (Short "v2")))) (App (Shift64Asr . 7) ((Var (Short "v2"))))))) (App Opapp ((App Opapp ((Var (Short "~>>")) (App (Shift64Asr . 8) ((Var (Short "v2")))))) (Let (SOME "k") (App OpnMinus ((Var (Short "v1")) (Lit 8))) (If (App OpbLt ((Var (Short "k")) (Lit 0))) (Lit 0) (Var (Short "k"))))))))))))) 
(Dtabbrev (0 0 0 0 0 0) nil "byte" (Atapp nil (Short "word8"))) 
(Dmod "Word8" ((Dtabbrev (0 0 0 0 0 0) nil "word" (Atapp nil (Short "word8"))) (Dlet (0 0 0 0 0 0) "fromInt" (Fun "v1" (App W8fromInt ((Var (Short "v1")))))) (Dlet (0 0 0 0 0 0) "toInt" (Fun "v1" (App W8toInt ((Var (Short "v1")))))) (Dlet (0 0 0 0 0 0) "andb" (Fun "v1" (Fun "v2" (App Opw8Andw ((Var (Short "v1")) (Var (Short "v2"))))))) (Dlet (0 0 0 0 0 0) "orb" (Fun "v1" (Fun "v2" (App Opw8Orw ((Var (Short "v1")) (Var (Short "v2"))))))) (Dlet (0 0 0 0 0 0) "xorb" (Fun "v1" (Fun "v2" (App Opw8Xor ((Var (Short "v1")) (Var (Short "v2"))))))) (Dlet (0 0 0 0 0 0) "notb" (Fun "v1" (App Opw8Xor ((Var (Short "v1")) (Lit (word8 255)))))) (Dlet (0 0 0 0 0 0) "+" (Fun "v1" (Fun "v2" (App Opw8Add ((Var (Short "v1")) (Var (Short "v2"))))))) (Dlet (0 0 0 0 0 0) "-" (Fun "v1" (Fun "v2" (App Opw8Sub ((Var (Short "v1")) (Var (Short "v2"))))))) (Dlet (0 0 0 0 0 0) "<<" (Fun "v2" (Fun "v1" (If (App OpbLt ((Var (Short "v1")) (Lit 8))) (If (App OpbLt ((Var (Short "v1")) (Lit 4))) (If (App OpbLt ((Var (Short "v1")) (Lit 2))) (If (App OpbLt ((Var (Short "v1")) (Lit 1))) (Var (Short "v2")) (App (Shift8Lsl . 1) ((Var (Short "v2"))))) (If (App OpbLt ((Var (Short "v1")) (Lit 3))) (App (Shift8Lsl . 2) ((Var (Short "v2")))) (App (Shift8Lsl . 3) ((Var (Short "v2")))))) (If (App OpbLt ((Var (Short "v1")) (Lit 6))) (If (App OpbLt ((Var (Short "v1")) (Lit 5))) (App (Shift8Lsl . 4) ((Var (Short "v2")))) (App (Shift8Lsl . 5) ((Var (Short "v2"))))) (If (App OpbLt ((Var (Short "v1")) (Lit 7))) (App (Shift8Lsl . 6) ((Var (Short "v2")))) (App (Shift8Lsl . 7) ((Var (Short "v2"))))))) (Lit (word8 0)))))) (Dlet (0 0 0 0 0 0) ">>" (Fun "v2" (Fun "v1" (If (App OpbLt ((Var (Short "v1")) (Lit 8))) (If (App OpbLt ((Var (Short "v1")) (Lit 4))) (If (App OpbLt ((Var (Short "v1")) (Lit 2))) (If (App OpbLt ((Var (Short "v1")) (Lit 1))) (Var (Short "v2")) (App (Shift8Lsr . 1) ((Var (Short "v2"))))) (If (App OpbLt ((Var (Short "v1")) (Lit 3))) (App (Shift8Lsr . 2) ((Var (Short "v2")))) (App (Shift8Lsr . 3) ((Var (Short "v2")))))) (If (App OpbLt ((Var (Short "v1")) (Lit 6))) (If (App OpbLt ((Var (Short "v1")) (Lit 5))) (App (Shift8Lsr . 4) ((Var (Short "v2")))) (App (Shift8Lsr . 5) ((Var (Short "v2"))))) (If (App OpbLt ((Var (Short "v1")) (Lit 7))) (App (Shift8Lsr . 6) ((Var (Short "v2")))) (App (Shift8Lsr . 7) ((Var (Short "v2"))))))) (Lit (word8 0)))))) (Dlet (0 0 0 0 0 0) "~>>" (Fun "v2" (Fun "v1" (If (App OpbLt ((Var (Short "v1")) (Lit 8))) (If (App OpbLt ((Var (Short "v1")) (Lit 4))) (If (App OpbLt ((Var (Short "v1")) (Lit 2))) (If (App OpbLt ((Var (Short "v1")) (Lit 1))) (Var (Short "v2")) (App (Shift8Asr . 1) ((Var (Short "v2"))))) (If (App OpbLt ((Var (Short "v1")) (Lit 3))) (App (Shift8Asr . 2) ((Var (Short "v2")))) (App (Shift8Asr . 3) ((Var (Short "v2")))))) (If (App OpbLt ((Var (Short "v1")) (Lit 6))) (If (App OpbLt ((Var (Short "v1")) (Lit 5))) (App (Shift8Asr . 4) ((Var (Short "v2")))) (App (Shift8Asr . 5) ((Var (Short "v2"))))) (If (App OpbLt ((Var (Short "v1")) (Lit 7))) (App (Shift8Asr . 6) ((Var (Short "v2")))) (App (Shift8Asr . 7) ((Var (Short "v2"))))))) (App (Shift8Asr . 8) ((Var (Short "v2")))))))))) 
(Dtabbrev (0 0 0 0 0 0) nil "byte_array" (Atapp nil (Short "word8array"))) 
(Dmod "Word8Array" ((Dlet (0 0 0 0 0 0) "array" (Fun "x" (Fun "y" (App Aw8alloc ((Var (Short "x")) (Var (Short "y"))))))) (Dlet (0 0 0 0 0 0) "sub" (Fun "x" (Fun "y" (App Aw8sub ((Var (Short "x")) (Var (Short "y"))))))) (Dlet (0 0 0 0 0 0) "length" (Fun "x" (App Aw8length ((Var (Short "x")))))) (Dlet (0 0 0 0 0 0) "update" (Fun "x" (Fun "y" (Fun "z" (App Aw8update ((Var (Short "x")) (Var (Short "y")) (Var (Short "z")))))))) (Dlet (0 0 0 0 0 0) "copy" (Fun "src" (Fun "srcoff" (Fun "len" (Fun "dst" (Fun "dstoff" (App CopyAw8Aw8 ((Var (Short "src")) (Var (Short "srcoff")) (Var (Short "len")) (Var (Short "dst")) (Var (Short "dstoff")))))))))) (Dlet (0 0 0 0 0 0) "copyVec" (Fun "src" (Fun "srcoff" (Fun "len" (Fun "dst" (Fun "dstoff" (App CopyStrAw8 ((Var (Short "src")) (Var (Short "srcoff")) (Var (Short "len")) (Var (Short "dst")) (Var (Short "dstoff")))))))))) (Dlet (0 0 0 0 0 0) "substring" (Fun "src" (Fun "srcoff" (Fun "len" (App CopyAw8Str ((Var (Short "src")) (Var (Short "srcoff")) (Var (Short "len")))))))) (Dlocal ((Dletrec (0 0 0 0 0 0) (("findi_aux" "f" Fun "arr" (Fun "max" (Fun "n" (Let (SOME "a") (App Opapp ((App Opapp ((Var (Short "=")) (Var (Short "n")))) (Var (Short "max")))) (If (Var (Short "a")) (Con (SOME (Short "None")) nil) (Let (SOME "b") (App Opapp ((App Opapp ((Var (Short "sub")) (Var (Short "arr")))) (Var (Short "n")))) (Let (SOME "c") (App Opapp ((Var (Short "f")) (Var (Short "b")))) (If (Var (Short "c")) (Let (SOME "d") (App Opapp ((App Opapp ((Var (Short "sub")) (Var (Short "arr")))) (Var (Short "n")))) (Let (SOME "e") (Con NONE ((Var (Short "n")) (Var (Short "d")))) (Con (SOME (Short "Some")) ((Var (Short "e")))))) (Let (SOME "g") (App Opapp ((App Opapp ((Var (Short "+")) (Var (Short "n")))) (Lit 1))) (App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "findi_aux")) (Var (Short "f")))) (Var (Short "arr")))) (Var (Short "max")))) (Var (Short "g")))))))))))))))) ((Dletrec (0 0 0 0 0 0) (("findi" "f" Fun "arr" (Let (SOME "a") (App Opapp ((Var (Short "length")) (Var (Short "arr")))) (App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "findi_aux")) (Var (Short "f")))) (Var (Short "arr")))) (Var (Short "a")))) (Lit 0))))))))))) 
(Dmod "Array" ((Dtabbrev (0 0 0 0 0 0) ("'a") "array" (Atapp ((Atvar "'a")) (Short "array"))) (Dlet (0 0 0 0 0 0) "array" (Fun "x" (Fun "y" (App Aalloc ((Var (Short "x")) (Var (Short "y"))))))) (Dlet (0 0 0 0 0 0) "arrayEmpty" (Fun "x" (App AallocEmpty ((Var (Short "x")))))) (Dlet (0 0 0 0 0 0) "sub" (Fun "x" (Fun "y" (App Asub ((Var (Short "x")) (Var (Short "y"))))))) (Dlet (0 0 0 0 0 0) "length" (Fun "x" (App Alength ((Var (Short "x")))))) (Dlet (0 0 0 0 0 0) "update" (Fun "x" (Fun "y" (Fun "z" (App Aupdate ((Var (Short "x")) (Var (Short "y")) (Var (Short "z")))))))) (Dletrec (0 0 0 0 0 0) (("fromList" "l" Letrec (("f" "arr" Fun "l" (Fun "i" (Mat (Var (Short "l")) (((Pcon (SOME (Short "[]")) nil) Var (Short "arr")) ((Pcon (SOME (Short "::")) ("h" "t")) Let NONE (App Opapp ((App Opapp ((App Opapp ((Var (Short "update")) (Var (Short "arr")))) (Var (Short "i")))) (Var (Short "h")))) (Let (SOME "a") (App Opapp ((App Opapp ((Var (Short "+")) (Var (Short "i")))) (Lit 1))) (App Opapp ((App Opapp ((App Opapp ((Var (Short "f")) (Var (Short "arr")))) (Var (Short "t")))) (Var (Short "a"))))))))))) (Mat (Var (Short "l")) (((Pcon (SOME (Short "[]")) nil) Let (SOME "b") (Con NONE nil) (App Opapp ((Var (Short "arrayEmpty")) (Var (Short "b"))))) ((Pcon (SOME (Short "::")) ("h" "t")) Let (SOME "c") (App Opapp ((Var (Long "List" (Short "length"))) (Var (Short "l")))) (Let (SOME "d") (App Opapp ((App Opapp ((Var (Short "array")) (Var (Short "c")))) (Var (Short "h")))) (App Opapp ((App Opapp ((App Opapp ((Var (Short "f")) (Var (Short "d")))) (Var (Short "t")))) (Lit 1)))))))))) (Dletrec (0 0 0 0 0 0) (("tabulate" "n" Fun "f" (Letrec (("u" "arr" Fun "x" (Let (SOME "a") (App Opapp ((App Opapp ((Var (Short "=")) (Var (Short "x")))) (Var (Short "n")))) (If (Var (Short "a")) (Var (Short "arr")) (Let (SOME "b") (App Opapp ((Var (Short "f")) (Var (Short "x")))) (Let NONE (App Opapp ((App Opapp ((App Opapp ((Var (Short "update")) (Var (Short "arr")))) (Var (Short "x")))) (Var (Short "b")))) (Let (SOME "c") (App Opapp ((App Opapp ((Var (Short "+")) (Var (Short "x")))) (Lit 1))) (App Opapp ((App Opapp ((Var (Short "u")) (Var (Short "arr")))) (Var (Short "c"))))))))))) (Let (SOME "d") (App Opapp ((App Opapp ((Var (Short "=")) (Var (Short "n")))) (Lit 0))) (If (Var (Short "d")) (Let (SOME "e") (Con NONE nil) (App Opapp ((Var (Short "arrayEmpty")) (Var (Short "e"))))) (Let (SOME "g") (App Opapp ((Var (Short "f")) (Lit 0))) (Let (SOME "h") (App Opapp ((App Opapp ((Var (Short "array")) (Var (Short "n")))) (Var (Short "g")))) (App Opapp ((App Opapp ((Var (Short "u")) (Var (Short "h")))) (Lit 1))))))))))) (Dlocal ((Dletrec (0 0 0 0 0 0) (("copy_aux" "src" Fun "dst" (Fun "di" (Fun "max" (Fun "n" (Let (SOME "a") (App Opapp ((App Opapp ((Var (Short "=")) (Var (Short "n")))) (Var (Short "max")))) (If (Var (Short "a")) (Con NONE nil) (Let (SOME "b") (App Opapp ((App Opapp ((Var (Short "sub")) (Var (Short "src")))) (Var (Short "n")))) (Let NONE (App Opapp ((App Opapp ((App Opapp ((Var (Short "update")) (Var (Short "dst")))) (Var (Short "di")))) (Var (Short "b")))) (Let (SOME "d") (App Opapp ((App Opapp ((Var (Short "+")) (Var (Short "n")))) (Lit 1))) (Let (SOME "c") (App Opapp ((App Opapp ((Var (Short "+")) (Var (Short "di")))) (Lit 1))) (App Opapp ((App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "copy_aux")) (Var (Short "src")))) (Var (Short "dst")))) (Var (Short "c")))) (Var (Short "max")))) (Var (Short "d"))))))))))))))))) ((Dletrec (0 0 0 0 0 0) (("copy" "src" Fun "dst" (Fun "di" (Let (SOME "a") (App Opapp ((Var (Short "length")) (Var (Short "src")))) (App Opapp ((App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "copy_aux")) (Var (Short "src")))) (Var (Short "dst")))) (Var (Short "di")))) (Var (Short "a")))) (Lit 0)))))))) (Dlocal ((Dletrec (0 0 0 0 0 0) (("copyVec_aux" "src" Fun "dst" (Fun "di" (Fun "max" (Fun "n" (Let (SOME "a") (App Opapp ((App Opapp ((Var (Short "=")) (Var (Short "n")))) (Var (Short "max")))) (If (Var (Short "a")) (Con NONE nil) (Let (SOME "c") (App Opapp ((App Opapp ((Var (Long "Vector" (Short "sub"))) (Var (Short "src")))) (Var (Short "n")))) (Let (SOME "b") (App Opapp ((App Opapp ((Var (Short "+")) (Var (Short "di")))) (Var (Short "n")))) (Let NONE (App Opapp ((App Opapp ((App Opapp ((Var (Short "update")) (Var (Short "dst")))) (Var (Short "b")))) (Var (Short "c")))) (Let (SOME "d") (App Opapp ((App Opapp ((Var (Short "+")) (Var (Short "n")))) (Lit 1))) (App Opapp ((App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "copyVec_aux")) (Var (Short "src")))) (Var (Short "dst")))) (Var (Short "di")))) (Var (Short "max")))) (Var (Short "d"))))))))))))))))) ((Dletrec (0 0 0 0 0 0) (("copyVec" "src" Fun "dst" (Fun "di" (Let (SOME "a") (App Opapp ((Var (Long "Vector" (Short "length"))) (Var (Short "src")))) (App Opapp ((App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "copyVec_aux")) (Var (Short "src")))) (Var (Short "dst")))) (Var (Short "di")))) (Var (Short "a")))) (Lit 0)))))))) (Dlocal ((Dletrec (0 0 0 0 0 0) (("app_aux" "f" Fun "arr" (Fun "max" (Fun "n" (Let (SOME "a") (App Opapp ((App Opapp ((Var (Short "=")) (Var (Short "n")))) (Var (Short "max")))) (If (Var (Short "a")) (Con NONE nil) (Let (SOME "b") (App Opapp ((App Opapp ((Var (Short "sub")) (Var (Short "arr")))) (Var (Short "n")))) (Let NONE (App Opapp ((Var (Short "f")) (Var (Short "b")))) (Let (SOME "c") (App Opapp ((App Opapp ((Var (Short "+")) (Var (Short "n")))) (Lit 1))) (App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "app_aux")) (Var (Short "f")))) (Var (Short "arr")))) (Var (Short "max")))) (Var (Short "c"))))))))))))))) ((Dletrec (0 0 0 0 0 0) (("app" "f" Fun "arr" (Let (SOME "a") (App Opapp ((Var (Short "length")) (Var (Short "arr")))) (App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "app_aux")) (Var (Short "f")))) (Var (Short "arr")))) (Var (Short "a")))) (Lit 0))))))) (Dlocal ((Dletrec (0 0 0 0 0 0) (("appi_aux" "f" Fun "arr" (Fun "max" (Fun "n" (Let (SOME "a") (App Opapp ((App Opapp ((Var (Short "=")) (Var (Short "n")))) (Var (Short "max")))) (If (Var (Short "a")) (Con NONE nil) (Let (SOME "b") (App Opapp ((App Opapp ((Var (Short "sub")) (Var (Short "arr")))) (Var (Short "n")))) (Let NONE (App Opapp ((App Opapp ((Var (Short "f")) (Var (Short "n")))) (Var (Short "b")))) (Let (SOME "c") (App Opapp ((App Opapp ((Var (Short "+")) (Var (Short "n")))) (Lit 1))) (App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "app_aux")) (Var (Short "f")))) (Var (Short "arr")))) (Var (Short "max")))) (Var (Short "c"))))))))))))))) ((Dletrec (0 0 0 0 0 0) (("appi" "f" Fun "arr" (Let (SOME "a") (App Opapp ((Var (Short "length")) (Var (Short "arr")))) (App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "appi_aux")) (Var (Short "f")))) (Var (Short "arr")))) (Var (Short "a")))) (Lit 0))))))) (Dlocal ((Dletrec (0 0 0 0 0 0) (("modify_aux" "f" Fun "arr" (Fun "max" (Fun "n" (Let (SOME "a") (App Opapp ((App Opapp ((Var (Short "=")) (Var (Short "n")))) (Var (Short "max")))) (If (Var (Short "a")) (Con NONE nil) (Let (SOME "b") (App Opapp ((App Opapp ((Var (Short "sub")) (Var (Short "arr")))) (Var (Short "n")))) (Let (SOME "c") (App Opapp ((Var (Short "f")) (Var (Short "b")))) (Let NONE (App Opapp ((App Opapp ((App Opapp ((Var (Short "update")) (Var (Short "arr")))) (Var (Short "n")))) (Var (Short "c")))) (Let (SOME "d") (App Opapp ((App Opapp ((Var (Short "+")) (Var (Short "n")))) (Lit 1))) (App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "modify_aux")) (Var (Short "f")))) (Var (Short "arr")))) (Var (Short "max")))) (Var (Short "d")))))))))))))))) ((Dletrec (0 0 0 0 0 0) (("modify" "f" Fun "arr" (Let (SOME "a") (App Opapp ((Var (Short "length")) (Var (Short "arr")))) (App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "modify_aux")) (Var (Short "f")))) (Var (Short "arr")))) (Var (Short "a")))) (Lit 0))))))) (Dlocal ((Dletrec (0 0 0 0 0 0) (("modifyi_aux" "f" Fun "arr" (Fun "max" (Fun "n" (Let (SOME "a") (App Opapp ((App Opapp ((Var (Short "=")) (Var (Short "n")))) (Var (Short "max")))) (If (Var (Short "a")) (Con NONE nil) (Let (SOME "b") (App Opapp ((App Opapp ((Var (Short "sub")) (Var (Short "arr")))) (Var (Short "n")))) (Let (SOME "c") (App Opapp ((App Opapp ((Var (Short "f")) (Var (Short "n")))) (Var (Short "b")))) (Let NONE (App Opapp ((App Opapp ((App Opapp ((Var (Short "update")) (Var (Short "arr")))) (Var (Short "n")))) (Var (Short "c")))) (Let (SOME "d") (App Opapp ((App Opapp ((Var (Short "+")) (Var (Short "n")))) (Lit 1))) (App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "modifyi_aux")) (Var (Short "f")))) (Var (Short "arr")))) (Var (Short "max")))) (Var (Short "d")))))))))))))))) ((Dletrec (0 0 0 0 0 0) (("modifyi" "f" Fun "arr" (Let (SOME "a") (App Opapp ((Var (Short "length")) (Var (Short "arr")))) (App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "modifyi_aux")) (Var (Short "f")))) (Var (Short "arr")))) (Var (Short "a")))) (Lit 0))))))) (Dlocal ((Dletrec (0 0 0 0 0 0) (("foldli_aux" "f" Fun "init" (Fun "arr" (Fun "max" (Fun "n" (Let (SOME "a") (App Opapp ((App Opapp ((Var (Short "=")) (Var (Short "n")))) (Var (Short "max")))) (If (Var (Short "a")) (Var (Short "init")) (Let (SOME "d") (App Opapp ((App Opapp ((Var (Short "+")) (Var (Short "n")))) (Lit 1))) (Let (SOME "b") (App Opapp ((App Opapp ((Var (Short "sub")) (Var (Short "arr")))) (Var (Short "n")))) (Let (SOME "c") (App Opapp ((App Opapp ((App Opapp ((Var (Short "f")) (Var (Short "n")))) (Var (Short "b")))) (Var (Short "init")))) (App Opapp ((App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "foldli_aux")) (Var (Short "f")))) (Var (Short "c")))) (Var (Short "arr")))) (Var (Short "max")))) (Var (Short "d")))))))))))))))) ((Dletrec (0 0 0 0 0 0) (("foldli" "f" Fun "init" (Fun "arr" (Let (SOME "a") (App Opapp ((Var (Short "length")) (Var (Short "arr")))) (App Opapp ((App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "foldli_aux")) (Var (Short "f")))) (Var (Short "init")))) (Var (Short "arr")))) (Var (Short "a")))) (Lit 0)))))))) (Dlocal ((Dletrec (0 0 0 0 0 0) (("foldl_aux" "f" Fun "init" (Fun "arr" (Fun "max" (Fun "n" (Let (SOME "a") (App Opapp ((App Opapp ((Var (Short "=")) (Var (Short "n")))) (Var (Short "max")))) (If (Var (Short "a")) (Var (Short "init")) (Let (SOME "d") (App Opapp ((App Opapp ((Var (Short "+")) (Var (Short "n")))) (Lit 1))) (Let (SOME "b") (App Opapp ((App Opapp ((Var (Short "sub")) (Var (Short "arr")))) (Var (Short "n")))) (Let (SOME "c") (App Opapp ((App Opapp ((Var (Short "f")) (Var (Short "b")))) (Var (Short "init")))) (App Opapp ((App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "foldl_aux")) (Var (Short "f")))) (Var (Short "c")))) (Var (Short "arr")))) (Var (Short "max")))) (Var (Short "d")))))))))))))))) ((Dletrec (0 0 0 0 0 0) (("foldl" "f" Fun "init" (Fun "arr" (Let (SOME "a") (App Opapp ((Var (Short "length")) (Var (Short "arr")))) (App Opapp ((App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "foldl_aux")) (Var (Short "f")))) (Var (Short "init")))) (Var (Short "arr")))) (Var (Short "a")))) (Lit 0)))))))) (Dlocal ((Dletrec (0 0 0 0 0 0) (("foldri_aux" "f" Fun "init" (Fun "arr" (Fun "n" (Let (SOME "a") (App Opapp ((App Opapp ((Var (Short "=")) (Var (Short "n")))) (Lit 0))) (If (Var (Short "a")) (Var (Short "init")) (Let (SOME "g") (App Opapp ((App Opapp ((Var (Short "-")) (Var (Short "n")))) (Lit 1))) (Let (SOME "c") (App Opapp ((App Opapp ((Var (Short "-")) (Var (Short "n")))) (Lit 1))) (Let (SOME "d") (App Opapp ((App Opapp ((Var (Short "sub")) (Var (Short "arr")))) (Var (Short "c")))) (Let (SOME "b") (App Opapp ((App Opapp ((Var (Short "-")) (Var (Short "n")))) (Lit 1))) (Let (SOME "e") (App Opapp ((App Opapp ((App Opapp ((Var (Short "f")) (Var (Short "b")))) (Var (Short "d")))) (Var (Short "init")))) (App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "foldri_aux")) (Var (Short "f")))) (Var (Short "e")))) (Var (Short "arr")))) (Var (Short "g"))))))))))))))))) ((Dletrec (0 0 0 0 0 0) (("foldri" "f" Fun "init" (Fun "arr" (Let (SOME "a") (App Opapp ((Var (Short "length")) (Var (Short "arr")))) (App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "foldri_aux")) (Var (Short "f")))) (Var (Short "init")))) (Var (Short "arr")))) (Var (Short "a"))))))))) (Dlocal ((Dletrec (0 0 0 0 0 0) (("foldr_aux" "f" Fun "init" (Fun "arr" (Fun "n" (Let (SOME "a") (App Opapp ((App Opapp ((Var (Short "=")) (Var (Short "n")))) (Lit 0))) (If (Var (Short "a")) (Var (Short "init")) (Let (SOME "e") (App Opapp ((App Opapp ((Var (Short "-")) (Var (Short "n")))) (Lit 1))) (Let (SOME "b") (App Opapp ((App Opapp ((Var (Short "-")) (Var (Short "n")))) (Lit 1))) (Let (SOME "c") (App Opapp ((App Opapp ((Var (Short "sub")) (Var (Short "arr")))) (Var (Short "b")))) (Let (SOME "d") (App Opapp ((App Opapp ((Var (Short "f")) (Var (Short "c")))) (Var (Short "init")))) (App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "foldr_aux")) (Var (Short "f")))) (Var (Short "d")))) (Var (Short "arr")))) (Var (Short "e")))))))))))))))) ((Dletrec (0 0 0 0 0 0) (("foldr" "f" Fun "init" (Fun "arr" (Let (SOME "a") (App Opapp ((Var (Short "length")) (Var (Short "arr")))) (App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "foldr_aux")) (Var (Short "f")))) (Var (Short "init")))) (Var (Short "arr")))) (Var (Short "a"))))))))) (Dlocal ((Dletrec (0 0 0 0 0 0) (("find_aux" "f" Fun "arr" (Fun "max" (Fun "n" (Let (SOME "a") (App Opapp ((App Opapp ((Var (Short "=")) (Var (Short "n")))) (Var (Short "max")))) (If (Var (Short "a")) (Con (SOME (Short "None")) nil) (Let (SOME "b") (App Opapp ((App Opapp ((Var (Short "sub")) (Var (Short "arr")))) (Var (Short "n")))) (Let (SOME "c") (App Opapp ((Var (Short "f")) (Var (Short "b")))) (If (Var (Short "c")) (Let (SOME "d") (App Opapp ((App Opapp ((Var (Short "sub")) (Var (Short "arr")))) (Var (Short "n")))) (Con (SOME (Short "Some")) ((Var (Short "d"))))) (Let (SOME "e") (App Opapp ((App Opapp ((Var (Short "+")) (Var (Short "n")))) (Lit 1))) (App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "find_aux")) (Var (Short "f")))) (Var (Short "arr")))) (Var (Short "max")))) (Var (Short "e")))))))))))))))) ((Dletrec (0 0 0 0 0 0) (("find" "f" Fun "arr" (Let (SOME "a") (App Opapp ((Var (Short "length")) (Var (Short "arr")))) (App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "find_aux")) (Var (Short "f")))) (Var (Short "arr")))) (Var (Short "a")))) (Lit 0))))))) (Dlocal ((Dletrec (0 0 0 0 0 0) (("findi_aux" "f" Fun "arr" (Fun "max" (Fun "n" (Let (SOME "a") (App Opapp ((App Opapp ((Var (Short "=")) (Var (Short "n")))) (Var (Short "max")))) (If (Var (Short "a")) (Con (SOME (Short "None")) nil) (Let (SOME "b") (App Opapp ((App Opapp ((Var (Short "sub")) (Var (Short "arr")))) (Var (Short "n")))) (Let (SOME "c") (App Opapp ((App Opapp ((Var (Short "f")) (Var (Short "n")))) (Var (Short "b")))) (If (Var (Short "c")) (Let (SOME "d") (App Opapp ((App Opapp ((Var (Short "sub")) (Var (Short "arr")))) (Var (Short "n")))) (Con (SOME (Short "Some")) ((Con NONE ((Var (Short "n")) (Var (Short "d"))))))) (Let (SOME "e") (App Opapp ((App Opapp ((Var (Short "+")) (Var (Short "n")))) (Lit 1))) (App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "findi_aux")) (Var (Short "f")))) (Var (Short "arr")))) (Var (Short "max")))) (Var (Short "e")))))))))))))))) ((Dletrec (0 0 0 0 0 0) (("findi" "f" Fun "arr" (Let (SOME "a") (App Opapp ((Var (Short "length")) (Var (Short "arr")))) (App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "findi_aux")) (Var (Short "f")))) (Var (Short "arr")))) (Var (Short "a")))) (Lit 0))))))) (Dlocal ((Dletrec (0 0 0 0 0 0) (("exists_aux" "f" Fun "arr" (Fun "max" (Fun "n" (Let (SOME "a") (App Opapp ((App Opapp ((Var (Short "=")) (Var (Short "n")))) (Var (Short "max")))) (If (Var (Short "a")) (Con (SOME (Short "False")) nil) (Let (SOME "b") (App Opapp ((App Opapp ((Var (Short "sub")) (Var (Short "arr")))) (Var (Short "n")))) (Let (SOME "c") (App Opapp ((Var (Short "f")) (Var (Short "b")))) (If (Var (Short "c")) (Con (SOME (Short "True")) nil) (Let (SOME "d") (App Opapp ((App Opapp ((Var (Short "+")) (Var (Short "n")))) (Lit 1))) (App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "exists_aux")) (Var (Short "f")))) (Var (Short "arr")))) (Var (Short "max")))) (Var (Short "d")))))))))))))))) ((Dletrec (0 0 0 0 0 0) (("exists" "f" Fun "arr" (Let (SOME "a") (App Opapp ((Var (Short "length")) (Var (Short "arr")))) (App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "exists_aux")) (Var (Short "f")))) (Var (Short "arr")))) (Var (Short "a")))) (Lit 0))))))) (Dlocal ((Dletrec (0 0 0 0 0 0) (("all_aux" "f" Fun "arr" (Fun "max" (Fun "n" (Let (SOME "a") (App Opapp ((App Opapp ((Var (Short "=")) (Var (Short "n")))) (Var (Short "max")))) (If (Var (Short "a")) (Con (SOME (Short "True")) nil) (Let (SOME "b") (App Opapp ((App Opapp ((Var (Short "sub")) (Var (Short "arr")))) (Var (Short "n")))) (Let (SOME "c") (App Opapp ((Var (Short "f")) (Var (Short "b")))) (If (Var (Short "c")) (Let (SOME "d") (App Opapp ((App Opapp ((Var (Short "+")) (Var (Short "n")))) (Lit 1))) (App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "all_aux")) (Var (Short "f")))) (Var (Short "arr")))) (Var (Short "max")))) (Var (Short "d"))))) (Con (SOME (Short "False")) nil)))))))))))) ((Dletrec (0 0 0 0 0 0) (("all" "f" Fun "arr" (Let (SOME "a") (App Opapp ((Var (Short "length")) (Var (Short "arr")))) (App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "all_aux")) (Var (Short "f")))) (Var (Short "arr")))) (Var (Short "a")))) (Lit 0))))))) (Dlocal ((Dletrec (0 0 0 0 0 0) (("collate_aux" "f" Fun "a1" (Fun "a2" (Fun "max" (Fun "ord" (Fun "n" (Let (SOME "a") (App Opapp ((App Opapp ((Var (Short "=")) (Var (Short "n")))) (Var (Short "max")))) (If (Var (Short "a")) (Var (Short "ord")) (Let (SOME "e") (Con (SOME (Short "Equal")) nil) (Let (SOME "c") (App Opapp ((App Opapp ((Var (Short "sub")) (Var (Short "a2")))) (Var (Short "n")))) (Let (SOME "b") (App Opapp ((App Opapp ((Var (Short "sub")) (Var (Short "a1")))) (Var (Short "n")))) (Let (SOME "d") (App Opapp ((App Opapp ((Var (Short "f")) (Var (Short "b")))) (Var (Short "c")))) (Let (SOME "g") (App Opapp ((App Opapp ((Var (Short "=")) (Var (Short "d")))) (Var (Short "e")))) (If (Var (Short "g")) (Let (SOME "h") (App Opapp ((App Opapp ((Var (Short "+")) (Var (Short "n")))) (Lit 1))) (App Opapp ((App Opapp ((App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "collate_aux")) (Var (Short "f")))) (Var (Short "a1")))) (Var (Short "a2")))) (Var (Short "max")))) (Var (Short "ord")))) (Var (Short "h"))))) (Let (SOME "j") (App Opapp ((App Opapp ((Var (Short "sub")) (Var (Short "a2")))) (Var (Short "n")))) (Let (SOME "i") (App Opapp ((App Opapp ((Var (Short "sub")) (Var (Short "a1")))) (Var (Short "n")))) (App Opapp ((App Opapp ((Var (Short "f")) (Var (Short "i")))) (Var (Short "j")))))))))))))))))))))) ((Dletrec (0 0 0 0 0 0) (("collate" "f" Fun "a1" (Fun "a2" (Let (SOME "b") (App Opapp ((Var (Short "length")) (Var (Short "a2")))) (Let (SOME "a") (App Opapp ((Var (Short "length")) (Var (Short "a1")))) (Let (SOME "c") (App Opapp ((App Opapp ((Var (Short "<")) (Var (Short "a")))) (Var (Short "b")))) (If (Var (Short "c")) (Let (SOME "e") (Con (SOME (Short "Less")) nil) (Let (SOME "d") (App Opapp ((Var (Short "length")) (Var (Short "a1")))) (App Opapp ((App Opapp ((App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "collate_aux")) (Var (Short "f")))) (Var (Short "a1")))) (Var (Short "a2")))) (Var (Short "d")))) (Var (Short "e")))) (Lit 0))))) (Let (SOME "h") (App Opapp ((Var (Short "length")) (Var (Short "a1")))) (Let (SOME "g") (App Opapp ((Var (Short "length")) (Var (Short "a2")))) (Let (SOME "i") (App Opapp ((App Opapp ((Var (Short "<")) (Var (Short "g")))) (Var (Short "h")))) (If (Var (Short "i")) (Let (SOME "k") (Con (SOME (Short "Greater")) nil) (Let (SOME "j") (App Opapp ((Var (Short "length")) (Var (Short "a2")))) (App Opapp ((App Opapp ((App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "collate_aux")) (Var (Short "f")))) (Var (Short "a1")))) (Var (Short "a2")))) (Var (Short "j")))) (Var (Short "k")))) (Lit 0))))) (Let (SOME "m") (Con (SOME (Short "Equal")) nil) (Let (SOME "l") (App Opapp ((Var (Short "length")) (Var (Short "a2")))) (App Opapp ((App Opapp ((App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "collate_aux")) (Var (Short "f")))) (Var (Short "a1")))) (Var (Short "a2")))) (Var (Short "l")))) (Var (Short "m")))) (Lit 0))))))))))))))))))))))))))))))))))))))))))))))))) 
(Dtype (0 0 0 0 0 0) ((("'k" "'w") "balanced_map" ("Bin" (Atapp nil (Short "int")) (Atvar "'k") (Atvar "'w") (Atapp ((Atvar "'k") (Atvar "'w")) (Short "balanced_map")) (Atapp ((Atvar "'k") (Atvar "'w")) (Short "balanced_map"))) ("Tip" )))) 
(Dlocal ((Dtype (0 0 0 0 0 0) ((("'a" "'b") "map" ("Map" (Atfun (Atvar "'a") (Atfun (Atvar "'a") (Atapp nil (Short "ordering")))) (Atapp ((Atvar "'a") (Atvar "'b")) (Short "balanced_map")))))) (Dlet (0 0 0 0 0 0) "size" (Fun "v6" (Mat (Var (Short "v6")) (((Pcon (SOME (Short "Tip")) nil) Lit 0) ((Pcon (SOME (Short "Bin")) ("v5" "v4" "v3" "v2" "v1")) Var (Short "v5")))))) (Dlet (0 0 0 0 0 0) "singleton" (Fun "v1" (Fun "v2" (Con (SOME (Short "Bin")) ((Lit 1) (Var (Short "v1")) (Var (Short "v2")) (Con (SOME (Short "Tip")) nil) (Con (SOME (Short "Tip")) nil)))))) (Dlet (0 0 0 0 0 0) "ratio" (Lit 2)) (Dlet (0 0 0 0 0 0) "delta" (Lit 3)) (Dlet (0 0 0 0 0 0) "balancel" (Fun "v41" (Fun "v42" (Fun "v43" (Fun "v44" (Mat (Var (Short "v43")) (((Pcon (SOME (Short "Tip")) nil) Mat (Var (Short "v44")) (((Pcon (SOME (Short "Tip")) nil) Con (SOME (Short "Bin")) ((Lit 1) (Var (Short "v41")) (Var (Short "v42")) (Con (SOME (Short "Tip")) nil) (Con (SOME (Short "Tip")) nil))) ((Pcon (SOME (Short "Bin")) ("v5" "v4" "v3" "v2" "v1")) Con (SOME (Short "Bin")) ((App OpnPlus ((Lit 1) (Var (Short "v5")))) (Var (Short "v41")) (Var (Short "v42")) (Con (SOME (Short "Tip")) nil) (Con (SOME (Short "Bin")) ((Var (Short "v5")) (Var (Short "v4")) (Var (Short "v3")) (Var (Short "v2")) (Var (Short "v1")))))))) ((Pcon (SOME (Short "Bin")) ("v40" "v39" "v38" "v37" "v36")) Mat (Var (Short "v44")) (((Pcon (SOME (Short "Tip")) nil) Mat (Var (Short "v37")) (((Pcon (SOME (Short "Tip")) nil) Mat (Var (Short "v36")) (((Pcon (SOME (Short "Tip")) nil) Con (SOME (Short "Bin")) ((Lit 2) (Var (Short "v41")) (Var (Short "v42")) (Con (SOME (Short "Bin")) ((Var (Short "v40")) (Var (Short "v39")) (Var (Short "v38")) (Con (SOME (Short "Tip")) nil) (Con (SOME (Short "Tip")) nil))) (Con (SOME (Short "Tip")) nil))) ((Pcon (SOME (Short "Bin")) ("v10" "v9" "v8" "v7" "v6")) Con (SOME (Short "Bin")) ((Lit 3) (Var (Short "v9")) (Var (Short "v8")) (Con (SOME (Short "Bin")) ((Lit 1) (Var (Short "v39")) (Var (Short "v38")) (Con (SOME (Short "Tip")) nil) (Con (SOME (Short "Tip")) nil))) (Con (SOME (Short "Bin")) ((Lit 1) (Var (Short "v41")) (Var (Short "v42")) (Con (SOME (Short "Tip")) nil) (Con (SOME (Short "Tip")) nil))))))) ((Pcon (SOME (Short "Bin")) ("v20" "v19" "v18" "v17" "v16")) Mat (Var (Short "v36")) (((Pcon (SOME (Short "Tip")) nil) Con (SOME (Short "Bin")) ((Lit 3) (Var (Short "v39")) (Var (Short "v38")) (Con (SOME (Short "Bin")) ((Var (Short "v20")) (Var (Short "v19")) (Var (Short "v18")) (Var (Short "v17")) (Var (Short "v16")))) (Con (SOME (Short "Bin")) ((Lit 1) (Var (Short "v41")) (Var (Short "v42")) (Con (SOME (Short "Tip")) nil) (Con (SOME (Short "Tip")) nil))))) ((Pcon (SOME (Short "Bin")) ("v15" "v14" "v13" "v12" "v11")) If (App OpbLt ((Var (Short "v15")) (App OpnTimes ((Var (Short "ratio")) (Var (Short "v20")))))) (Con (SOME (Short "Bin")) ((App OpnPlus ((Lit 1) (Var (Short "v40")))) (Var (Short "v39")) (Var (Short "v38")) (Con (SOME (Short "Bin")) ((Var (Short "v20")) (Var (Short "v19")) (Var (Short "v18")) (Var (Short "v17")) (Var (Short "v16")))) (Con (SOME (Short "Bin")) ((App OpnPlus ((Lit 1) (Var (Short "v15")))) (Var (Short "v41")) (Var (Short "v42")) (Con (SOME (Short "Bin")) ((Var (Short "v15")) (Var (Short "v14")) (Var (Short "v13")) (Var (Short "v12")) (Var (Short "v11")))) (Con (SOME (Short "Tip")) nil))))) (Con (SOME (Short "Bin")) ((App OpnPlus ((Lit 1) (Var (Short "v40")))) (Var (Short "v14")) (Var (Short "v13")) (Con (SOME (Short "Bin")) ((App OpnPlus ((App OpnPlus ((Lit 1) (Var (Short "v20")))) (App Opapp ((Var (Short "size")) (Var (Short "v12")))))) (Var (Short "v39")) (Var (Short "v38")) (Con (SOME (Short "Bin")) ((Var (Short "v20")) (Var (Short "v19")) (Var (Short "v18")) (Var (Short "v17")) (Var (Short "v16")))) (Var (Short "v12")))) (Con (SOME (Short "Bin")) ((App OpnPlus ((Lit 1) (App Opapp ((Var (Short "size")) (Var (Short "v11")))))) (Var (Short "v41")) (Var (Short "v42")) (Var (Short "v11")) (Con (SOME (Short "Tip")) nil)))))))))) ((Pcon (SOME (Short "Bin")) ("v35" "v34" "v33" "v32" "v31")) If (App OpbGt ((Var (Short "v40")) (App OpnTimes ((Var (Short "delta")) (Var (Short "v35")))))) (Mat (Var (Short "v37")) (((Pcon (SOME (Short "Tip")) nil) Con (SOME (Short "Tip")) nil) ((Pcon (SOME (Short "Bin")) ("v30" "v29" "v28" "v27" "v26")) Mat (Var (Short "v36")) (((Pcon (SOME (Short "Tip")) nil) Con (SOME (Short "Tip")) nil) ((Pcon (SOME (Short "Bin")) ("v25" "v24" "v23" "v22" "v21")) If (App OpbLt ((Var (Short "v25")) (App OpnTimes ((Var (Short "ratio")) (Var (Short "v30")))))) (Con (SOME (Short "Bin")) ((App OpnPlus ((App OpnPlus ((Lit 1) (Var (Short "v40")))) (Var (Short "v35")))) (Var (Short "v39")) (Var (Short "v38")) (Var (Short "v37")) (Con (SOME (Short "Bin")) ((App OpnPlus ((App OpnPlus ((Lit 1) (Var (Short "v35")))) (Var (Short "v25")))) (Var (Short "v41")) (Var (Short "v42")) (Var (Short "v36")) (Con (SOME (Short "Bin")) ((Var (Short "v35")) (Var (Short "v34")) (Var (Short "v33")) (Var (Short "v32")) (Var (Short "v31")))))))) (Con (SOME (Short "Bin")) ((App OpnPlus ((App OpnPlus ((Lit 1) (Var (Short "v40")))) (Var (Short "v35")))) (Var (Short "v24")) (Var (Short "v23")) (Con (SOME (Short "Bin")) ((App OpnPlus ((App OpnPlus ((Lit 1) (Var (Short "v30")))) (App Opapp ((Var (Short "size")) (Var (Short "v22")))))) (Var (Short "v39")) (Var (Short "v38")) (Var (Short "v37")) (Var (Short "v22")))) (Con (SOME (Short "Bin")) ((App OpnPlus ((App OpnPlus ((Lit 1) (Var (Short "v35")))) (App Opapp ((Var (Short "size")) (Var (Short "v21")))))) (Var (Short "v41")) (Var (Short "v42")) (Var (Short "v21")) (Con (SOME (Short "Bin")) ((Var (Short "v35")) (Var (Short "v34")) (Var (Short "v33")) (Var (Short "v32")) (Var (Short "v31"))))))))))))) (Con (SOME (Short "Bin")) ((App OpnPlus ((App OpnPlus ((Lit 1) (Var (Short "v40")))) (Var (Short "v35")))) (Var (Short "v41")) (Var (Short "v42")) (Con (SOME (Short "Bin")) ((Var (Short "v40")) (Var (Short "v39")) (Var (Short "v38")) (Var (Short "v37")) (Var (Short "v36")))) (Con (SOME (Short "Bin")) ((Var (Short "v35")) (Var (Short "v34")) (Var (Short "v33")) (Var (Short "v32")) (Var (Short "v31")))))))))))))))) (Dlet (0 0 0 0 0 0) "balancer" (Fun "v41" (Fun "v42" (Fun "v43" (Fun "v44" (Mat (Var (Short "v43")) (((Pcon (SOME (Short "Tip")) nil) Mat (Var (Short "v44")) (((Pcon (SOME (Short "Tip")) nil) Con (SOME (Short "Bin")) ((Lit 1) (Var (Short "v41")) (Var (Short "v42")) (Con (SOME (Short "Tip")) nil) (Con (SOME (Short "Tip")) nil))) ((Pcon (SOME (Short "Bin")) ("v20" "v19" "v18" "v17" "v16")) Mat (Var (Short "v17")) (((Pcon (SOME (Short "Tip")) nil) Mat (Var (Short "v16")) (((Pcon (SOME (Short "Tip")) nil) Con (SOME (Short "Bin")) ((Lit 2) (Var (Short "v41")) (Var (Short "v42")) (Con (SOME (Short "Tip")) nil) (Con (SOME (Short "Bin")) ((Var (Short "v20")) (Var (Short "v19")) (Var (Short "v18")) (Con (SOME (Short "Tip")) nil) (Con (SOME (Short "Tip")) nil))))) ((Pcon (SOME (Short "Bin")) ("v5" "v4" "v3" "v2" "v1")) Con (SOME (Short "Bin")) ((Lit 3) (Var (Short "v19")) (Var (Short "v18")) (Con (SOME (Short "Bin")) ((Lit 1) (Var (Short "v41")) (Var (Short "v42")) (Con (SOME (Short "Tip")) nil) (Con (SOME (Short "Tip")) nil))) (Con (SOME (Short "Bin")) ((Var (Short "v5")) (Var (Short "v4")) (Var (Short "v3")) (Var (Short "v2")) (Var (Short "v1")))))))) ((Pcon (SOME (Short "Bin")) ("v15" "v14" "v13" "v12" "v11")) Mat (Var (Short "v16")) (((Pcon (SOME (Short "Tip")) nil) Con (SOME (Short "Bin")) ((Lit 3) (Var (Short "v14")) (Var (Short "v13")) (Con (SOME (Short "Bin")) ((Lit 1) (Var (Short "v41")) (Var (Short "v42")) (Con (SOME (Short "Tip")) nil) (Con (SOME (Short "Tip")) nil))) (Con (SOME (Short "Bin")) ((Lit 1) (Var (Short "v19")) (Var (Short "v18")) (Con (SOME (Short "Tip")) nil) (Con (SOME (Short "Tip")) nil))))) ((Pcon (SOME (Short "Bin")) ("v10" "v9" "v8" "v7" "v6")) If (App OpbLt ((Var (Short "v15")) (App OpnTimes ((Var (Short "ratio")) (Var (Short "v10")))))) (Con (SOME (Short "Bin")) ((App OpnPlus ((Lit 1) (Var (Short "v20")))) (Var (Short "v19")) (Var (Short "v18")) (Con (SOME (Short "Bin")) ((App OpnPlus ((Lit 1) (Var (Short "v15")))) (Var (Short "v41")) (Var (Short "v42")) (Con (SOME (Short "Tip")) nil) (Con (SOME (Short "Bin")) ((Var (Short "v15")) (Var (Short "v14")) (Var (Short "v13")) (Var (Short "v12")) (Var (Short "v11")))))) (Con (SOME (Short "Bin")) ((Var (Short "v10")) (Var (Short "v9")) (Var (Short "v8")) (Var (Short "v7")) (Var (Short "v6")))))) (Con (SOME (Short "Bin")) ((App OpnPlus ((Lit 1) (Var (Short "v20")))) (Var (Short "v14")) (Var (Short "v13")) (Con (SOME (Short "Bin")) ((App OpnPlus ((Lit 1) (App Opapp ((Var (Short "size")) (Var (Short "v12")))))) (Var (Short "v41")) (Var (Short "v42")) (Con (SOME (Short "Tip")) nil) (Var (Short "v12")))) (Con (SOME (Short "Bin")) ((App OpnPlus ((App OpnPlus ((Lit 1) (Var (Short "v10")))) (App Opapp ((Var (Short "size")) (Var (Short "v11")))))) (Var (Short "v19")) (Var (Short "v18")) (Var (Short "v11")) (Con (SOME (Short "Bin")) ((Var (Short "v10")) (Var (Short "v9")) (Var (Short "v8")) (Var (Short "v7")) (Var (Short "v6"))))))))))))))) ((Pcon (SOME (Short "Bin")) ("v40" "v39" "v38" "v37" "v36")) Mat (Var (Short "v44")) (((Pcon (SOME (Short "Tip")) nil) Con (SOME (Short "Bin")) ((App OpnPlus ((Lit 1) (Var (Short "v40")))) (Var (Short "v41")) (Var (Short "v42")) (Con (SOME (Short "Bin")) ((Var (Short "v40")) (Var (Short "v39")) (Var (Short "v38")) (Var (Short "v37")) (Var (Short "v36")))) (Con (SOME (Short "Tip")) nil))) ((Pcon (SOME (Short "Bin")) ("v35" "v34" "v33" "v32" "v31")) If (App OpbGt ((Var (Short "v35")) (App OpnTimes ((Var (Short "delta")) (Var (Short "v40")))))) (Mat (Var (Short "v32")) (((Pcon (SOME (Short "Tip")) nil) Con (SOME (Short "Tip")) nil) ((Pcon (SOME (Short "Bin")) ("v30" "v29" "v28" "v27" "v26")) Mat (Var (Short "v31")) (((Pcon (SOME (Short "Tip")) nil) Con (SOME (Short "Tip")) nil) ((Pcon (SOME (Short "Bin")) ("v25" "v24" "v23" "v22" "v21")) If (App OpbLt ((Var (Short "v30")) (App OpnTimes ((Var (Short "ratio")) (Var (Short "v25")))))) (Con (SOME (Short "Bin")) ((App OpnPlus ((App OpnPlus ((Lit 1) (Var (Short "v40")))) (Var (Short "v35")))) (Var (Short "v34")) (Var (Short "v33")) (Con (SOME (Short "Bin")) ((App OpnPlus ((App OpnPlus ((Lit 1) (Var (Short "v40")))) (Var (Short "v30")))) (Var (Short "v41")) (Var (Short "v42")) (Con (SOME (Short "Bin")) ((Var (Short "v40")) (Var (Short "v39")) (Var (Short "v38")) (Var (Short "v37")) (Var (Short "v36")))) (Var (Short "v32")))) (Var (Short "v31")))) (Con (SOME (Short "Bin")) ((App OpnPlus ((App OpnPlus ((Lit 1) (Var (Short "v40")))) (Var (Short "v35")))) (Var (Short "v29")) (Var (Short "v28")) (Con (SOME (Short "Bin")) ((App OpnPlus ((App OpnPlus ((Lit 1) (Var (Short "v40")))) (App Opapp ((Var (Short "size")) (Var (Short "v27")))))) (Var (Short "v41")) (Var (Short "v42")) (Con (SOME (Short "Bin")) ((Var (Short "v40")) (Var (Short "v39")) (Var (Short "v38")) (Var (Short "v37")) (Var (Short "v36")))) (Var (Short "v27")))) (Con (SOME (Short "Bin")) ((App OpnPlus ((App OpnPlus ((Lit 1) (Var (Short "v25")))) (App Opapp ((Var (Short "size")) (Var (Short "v26")))))) (Var (Short "v34")) (Var (Short "v33")) (Var (Short "v26")) (Var (Short "v31"))))))))))) (Con (SOME (Short "Bin")) ((App OpnPlus ((App OpnPlus ((Lit 1) (Var (Short "v40")))) (Var (Short "v35")))) (Var (Short "v41")) (Var (Short "v42")) (Con (SOME (Short "Bin")) ((Var (Short "v40")) (Var (Short "v39")) (Var (Short "v38")) (Var (Short "v37")) (Var (Short "v36")))) (Con (SOME (Short "Bin")) ((Var (Short "v35")) (Var (Short "v34")) (Var (Short "v33")) (Var (Short "v32")) (Var (Short "v31")))))))))))))))) (Dletrec (0 0 0 0 0 0) (("deletefindmax" "v14" Mat (Var (Short "v14")) (((Pcon (SOME (Short "Tip")) nil) Con NONE ((Raise (Con (SOME (Short "Bind")) nil)) (Con (SOME (Short "Tip")) nil))) ((Pcon (SOME (Short "Bin")) ("v13" "v12" "v11" "v10" "v9")) Mat (Var (Short "v9")) (((Pcon (SOME (Short "Tip")) nil) Con NONE ((Con NONE ((Var (Short "v12")) (Var (Short "v11")))) (Var (Short "v10")))) ((Pcon (SOME (Short "Bin")) ("v8" "v7" "v6" "v5" "v4")) Let (SOME "v3") (App Opapp ((Var (Short "deletefindmax")) (Con (SOME (Short "Bin")) ((Var (Short "v8")) (Var (Short "v7")) (Var (Short "v6")) (Var (Short "v5")) (Var (Short "v4")))))) (Mat (Var (Short "v3")) (((Pcon NONE ("v2" "v1")) Con NONE ((Var (Short "v2")) (App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "balancel")) (Var (Short "v12")))) (Var (Short "v11")))) (Var (Short "v10")))) (Var (Short "v1"))))))))))))))) (Dletrec (0 0 0 0 0 0) (("deletefindmin" "v14" Mat (Var (Short "v14")) (((Pcon (SOME (Short "Tip")) nil) Con NONE ((Raise (Con (SOME (Short "Bind")) nil)) (Con (SOME (Short "Tip")) nil))) ((Pcon (SOME (Short "Bin")) ("v13" "v12" "v11" "v10" "v9")) Mat (Var (Short "v10")) (((Pcon (SOME (Short "Tip")) nil) Con NONE ((Con NONE ((Var (Short "v12")) (Var (Short "v11")))) (Var (Short "v9")))) ((Pcon (SOME (Short "Bin")) ("v8" "v7" "v6" "v5" "v4")) Let (SOME "v3") (App Opapp ((Var (Short "deletefindmin")) (Con (SOME (Short "Bin")) ((Var (Short "v8")) (Var (Short "v7")) (Var (Short "v6")) (Var (Short "v5")) (Var (Short "v4")))))) (Mat (Var (Short "v3")) (((Pcon NONE ("v2" "v1")) Con NONE ((Var (Short "v2")) (App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "balancer")) (Var (Short "v12")))) (Var (Short "v11")))) (Var (Short "v1")))) (Var (Short "v9"))))))))))))))) (Dlet (0 0 0 0 0 0) "glue" (Fun "v23" (Fun "v24" (Mat (Var (Short "v23")) (((Pcon (SOME (Short "Tip")) nil) Var (Short "v24")) ((Pcon (SOME (Short "Bin")) ("v22" "v21" "v20" "v19" "v18")) Mat (Var (Short "v24")) (((Pcon (SOME (Short "Tip")) nil) Con (SOME (Short "Bin")) ((Var (Short "v22")) (Var (Short "v21")) (Var (Short "v20")) (Var (Short "v19")) (Var (Short "v18")))) ((Pcon (SOME (Short "Bin")) ("v17" "v16" "v15" "v14" "v13")) If (App OpbGt ((App Opapp ((Var (Short "size")) (Con (SOME (Short "Bin")) ((Var (Short "v22")) (Var (Short "v21")) (Var (Short "v20")) (Var (Short "v19")) (Var (Short "v18")))))) (App Opapp ((Var (Short "size")) (Con (SOME (Short "Bin")) ((Var (Short "v17")) (Var (Short "v16")) (Var (Short "v15")) (Var (Short "v14")) (Var (Short "v13")))))))) (Let (SOME "v6") (App Opapp ((Var (Short "deletefindmax")) (Con (SOME (Short "Bin")) ((Var (Short "v22")) (Var (Short "v21")) (Var (Short "v20")) (Var (Short "v19")) (Var (Short "v18")))))) (Mat (Var (Short "v6")) (((Pcon NONE ("v5" "v4")) App Opapp ((Mat (Var (Short "v5")) (((Pcon NONE ("v3" "v2")) Fun "v1" (App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "balancer")) (Var (Short "v3")))) (Var (Short "v2")))) (Var (Short "v1")))) (Con (SOME (Short "Bin")) ((Var (Short "v17")) (Var (Short "v16")) (Var (Short "v15")) (Var (Short "v14")) (Var (Short "v13"))))))))) (Var (Short "v4"))))))) (Let (SOME "v12") (App Opapp ((Var (Short "deletefindmin")) (Con (SOME (Short "Bin")) ((Var (Short "v17")) (Var (Short "v16")) (Var (Short "v15")) (Var (Short "v14")) (Var (Short "v13")))))) (Mat (Var (Short "v12")) (((Pcon NONE ("v11" "v10")) App Opapp ((Mat (Var (Short "v11")) (((Pcon NONE ("v9" "v8")) Fun "v7" (App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "balancel")) (Var (Short "v9")))) (Var (Short "v8")))) (Con (SOME (Short "Bin")) ((Var (Short "v22")) (Var (Short "v21")) (Var (Short "v20")) (Var (Short "v19")) (Var (Short "v18")))))) (Var (Short "v7"))))))) (Var (Short "v10"))))))))))))))) (Dletrec (0 0 0 0 0 0) (("trim_help_greater" "v6" Fun "v7" (Fun "v8" (Mat (Var (Short "v8")) (((Pcon (SOME (Short "Tip")) nil) Con (SOME (Short "Tip")) nil) ((Pcon (SOME (Short "Bin")) ("v5" "v4" "v3" "v2" "v1")) If (Log Or (App Equality ((App Opapp ((App Opapp ((Var (Short "v6")) (Var (Short "v4")))) (Var (Short "v7")))) (Con (SOME (Short "Less")) nil))) (App Equality ((App Opapp ((App Opapp ((Var (Short "v6")) (Var (Short "v4")))) (Var (Short "v7")))) (Con (SOME (Short "Equal")) nil)))) (App Opapp ((App Opapp ((App Opapp ((Var (Short "trim_help_greater")) (Var (Short "v6")))) (Var (Short "v7")))) (Var (Short "v1")))) (Con (SOME (Short "Bin")) ((Var (Short "v5")) (Var (Short "v4")) (Var (Short "v3")) (Var (Short "v2")) (Var (Short "v1"))))))))))) (Dletrec (0 0 0 0 0 0) (("trim_help_lesser" "v6" Fun "v7" (Fun "v8" (Mat (Var (Short "v8")) (((Pcon (SOME (Short "Tip")) nil) Con (SOME (Short "Tip")) nil) ((Pcon (SOME (Short "Bin")) ("v5" "v4" "v3" "v2" "v1")) If (Log Or (App Equality ((App Opapp ((App Opapp ((Var (Short "v6")) (Var (Short "v4")))) (Var (Short "v7")))) (Con (SOME (Short "Greater")) nil))) (App Equality ((App Opapp ((App Opapp ((Var (Short "v6")) (Var (Short "v4")))) (Var (Short "v7")))) (Con (SOME (Short "Equal")) nil)))) (App Opapp ((App Opapp ((App Opapp ((Var (Short "trim_help_lesser")) (Var (Short "v6")))) (Var (Short "v7")))) (Var (Short "v2")))) (Con (SOME (Short "Bin")) ((Var (Short "v5")) (Var (Short "v4")) (Var (Short "v3")) (Var (Short "v2")) (Var (Short "v1"))))))))))) (Dletrec (0 0 0 0 0 0) (("trim_help_middle" "v10" Fun "v8" (Fun "v11" (Fun "v9" (Mat (Con NONE ((Var (Short "v8")) (Var (Short "v9")))) (((Pcon NONE ("v7" "v6")) Mat (Var (Short "v6")) (((Pcon (SOME (Short "Tip")) nil) Con (SOME (Short "Tip")) nil) ((Pcon (SOME (Short "Bin")) ("v5" "v4" "v3" "v2" "v1")) If (Log Or (App Equality ((App Opapp ((App Opapp ((Var (Short "v10")) (Var (Short "v4")))) (Var (Short "v7")))) (Con (SOME (Short "Less")) nil))) (App Equality ((App Opapp ((App Opapp ((Var (Short "v10")) (Var (Short "v4")))) (Var (Short "v7")))) (Con (SOME (Short "Equal")) nil)))) (App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "trim_help_middle")) (Var (Short "v10")))) (Var (Short "v7")))) (Var (Short "v11")))) (Var (Short "v1")))) (If (Log Or (App Equality ((App Opapp ((App Opapp ((Var (Short "v10")) (Var (Short "v4")))) (Var (Short "v11")))) (Con (SOME (Short "Greater")) nil))) (App Equality ((App Opapp ((App Opapp ((Var (Short "v10")) (Var (Short "v4")))) (Var (Short "v11")))) (Con (SOME (Short "Equal")) nil)))) (App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "trim_help_middle")) (Var (Short "v10")))) (Var (Short "v7")))) (Var (Short "v11")))) (Var (Short "v2")))) (Con (SOME (Short "Bin")) ((Var (Short "v5")) (Var (Short "v4")) (Var (Short "v3")) (Var (Short "v2")) (Var (Short "v1"))))))))))))))) (Dlet (0 0 0 0 0 0) "trim" (Fun "v4" (Fun "v5" (Fun "v6" (Fun "v7" (Mat (Var (Short "v5")) (((Pcon (SOME (Short "None")) nil) Mat (Var (Short "v6")) (((Pcon (SOME (Short "None")) nil) Var (Short "v7")) ((Pcon (SOME (Short "Some")) ("v1")) App Opapp ((App Opapp ((App Opapp ((Var (Short "trim_help_lesser")) (Var (Short "v4")))) (Var (Short "v1")))) (Var (Short "v7")))))) ((Pcon (SOME (Short "Some")) ("v3")) Mat (Var (Short "v6")) (((Pcon (SOME (Short "None")) nil) App Opapp ((App Opapp ((App Opapp ((Var (Short "trim_help_greater")) (Var (Short "v4")))) (Var (Short "v3")))) (Var (Short "v7")))) ((Pcon (SOME (Short "Some")) ("v2")) App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "trim_help_middle")) (Var (Short "v4")))) (Var (Short "v3")))) (Var (Short "v2")))) (Var (Short "v7"))))))))))))) (Dletrec (0 0 0 0 0 0) (("insertmin" "v6" Fun "v8" (Fun "v7" (Mat (Var (Short "v7")) (((Pcon (SOME (Short "Tip")) nil) App Opapp ((App Opapp ((Var (Short "singleton")) (Var (Short "v6")))) (Var (Short "v8")))) ((Pcon (SOME (Short "Bin")) ("v5" "v4" "v3" "v2" "v1")) App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "balancel")) (Var (Short "v4")))) (Var (Short "v3")))) (App Opapp ((App Opapp ((App Opapp ((Var (Short "insertmin")) (Var (Short "v6")))) (Var (Short "v8")))) (Var (Short "v2")))))) (Var (Short "v1")))))))))) (Dletrec (0 0 0 0 0 0) (("insertmax" "v6" Fun "v8" (Fun "v7" (Mat (Var (Short "v7")) (((Pcon (SOME (Short "Tip")) nil) App Opapp ((App Opapp ((Var (Short "singleton")) (Var (Short "v6")))) (Var (Short "v8")))) ((Pcon (SOME (Short "Bin")) ("v5" "v4" "v3" "v2" "v1")) App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "balancer")) (Var (Short "v4")))) (Var (Short "v3")))) (Var (Short "v2")))) (App Opapp ((App Opapp ((App Opapp ((Var (Short "insertmax")) (Var (Short "v6")))) (Var (Short "v8")))) (Var (Short "v1")))))))))))) (Dlet (0 0 0 0 0 0) "bin" (Fun "v1" (Fun "v4" (Fun "v2" (Fun "v3" (Con (SOME (Short "Bin")) ((App OpnPlus ((App OpnPlus ((App Opapp ((Var (Short "size")) (Var (Short "v2")))) (App Opapp ((Var (Short "size")) (Var (Short "v3")))))) (Lit 1))) (Var (Short "v1")) (Var (Short "v4")) (Var (Short "v2")) (Var (Short "v3"))))))))) (Dletrec (0 0 0 0 0 0) (("link" "v11" Fun "v12" (Fun "v13" (Fun "v14" (Mat (Var (Short "v13")) (((Pcon (SOME (Short "Tip")) nil) App Opapp ((App Opapp ((App Opapp ((Var (Short "insertmin")) (Var (Short "v11")))) (Var (Short "v12")))) (Var (Short "v14")))) ((Pcon (SOME (Short "Bin")) ("v10" "v9" "v8" "v7" "v6")) Mat (Var (Short "v14")) (((Pcon (SOME (Short "Tip")) nil) App Opapp ((App Opapp ((App Opapp ((Var (Short "insertmax")) (Var (Short "v11")))) (Var (Short "v12")))) (Con (SOME (Short "Bin")) ((Var (Short "v10")) (Var (Short "v9")) (Var (Short "v8")) (Var (Short "v7")) (Var (Short "v6")))))) ((Pcon (SOME (Short "Bin")) ("v5" "v4" "v3" "v2" "v1")) If (App OpbLt ((App OpnTimes ((Var (Short "delta")) (Var (Short "v10")))) (Var (Short "v5")))) (App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "balancel")) (Var (Short "v4")))) (Var (Short "v3")))) (App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "link")) (Var (Short "v11")))) (Var (Short "v12")))) (Con (SOME (Short "Bin")) ((Var (Short "v10")) (Var (Short "v9")) (Var (Short "v8")) (Var (Short "v7")) (Var (Short "v6")))))) (Var (Short "v2")))))) (Var (Short "v1")))) (If (App OpbLt ((App OpnTimes ((Var (Short "delta")) (Var (Short "v5")))) (Var (Short "v10")))) (App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "balancer")) (Var (Short "v9")))) (Var (Short "v8")))) (Var (Short "v7")))) (App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "link")) (Var (Short "v11")))) (Var (Short "v12")))) (Var (Short "v6")))) (Con (SOME (Short "Bin")) ((Var (Short "v5")) (Var (Short "v4")) (Var (Short "v3")) (Var (Short "v2")) (Var (Short "v1")))))))) (App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "bin")) (Var (Short "v11")))) (Var (Short "v12")))) (Con (SOME (Short "Bin")) ((Var (Short "v10")) (Var (Short "v9")) (Var (Short "v8")) (Var (Short "v7")) (Var (Short "v6")))))) (Con (SOME (Short "Bin")) ((Var (Short "v5")) (Var (Short "v4")) (Var (Short "v3")) (Var (Short "v2")) (Var (Short "v1"))))))))))))))))) (Dletrec (0 0 0 0 0 0) (("filterlt_help" "v7" Fun "v6" (Fun "v8" (Mat (Var (Short "v8")) (((Pcon (SOME (Short "Tip")) nil) Con (SOME (Short "Tip")) nil) ((Pcon (SOME (Short "Bin")) ("v5" "v4" "v3" "v2" "v1")) Mat (App Opapp ((App Opapp ((Var (Short "v7")) (Var (Short "v4")))) (Var (Short "v6")))) (((Pcon (SOME (Short "Less")) nil) App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "link")) (Var (Short "v4")))) (Var (Short "v3")))) (Var (Short "v2")))) (App Opapp ((App Opapp ((App Opapp ((Var (Short "filterlt_help")) (Var (Short "v7")))) (Var (Short "v6")))) (Var (Short "v1")))))) ((Pcon (SOME (Short "Equal")) nil) Var (Short "v2")) ((Pcon (SOME (Short "Greater")) nil) App Opapp ((App Opapp ((App Opapp ((Var (Short "filterlt_help")) (Var (Short "v7")))) (Var (Short "v6")))) (Var (Short "v2")))))))))))) (Dlet (0 0 0 0 0 0) "filterlt" (Fun "v2" (Fun "v3" (Fun "v4" (Mat (Var (Short "v3")) (((Pcon (SOME (Short "None")) nil) Var (Short "v4")) ((Pcon (SOME (Short "Some")) ("v1")) App Opapp ((App Opapp ((App Opapp ((Var (Short "filterlt_help")) (Var (Short "v2")))) (Var (Short "v1")))) (Var (Short "v4")))))))))) (Dletrec (0 0 0 0 0 0) (("filtergt_help" "v7" Fun "v6" (Fun "v8" (Mat (Var (Short "v8")) (((Pcon (SOME (Short "Tip")) nil) Con (SOME (Short "Tip")) nil) ((Pcon (SOME (Short "Bin")) ("v5" "v4" "v3" "v2" "v1")) Mat (App Opapp ((App Opapp ((Var (Short "v7")) (Var (Short "v6")))) (Var (Short "v4")))) (((Pcon (SOME (Short "Less")) nil) App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "link")) (Var (Short "v4")))) (Var (Short "v3")))) (App Opapp ((App Opapp ((App Opapp ((Var (Short "filtergt_help")) (Var (Short "v7")))) (Var (Short "v6")))) (Var (Short "v2")))))) (Var (Short "v1")))) ((Pcon (SOME (Short "Equal")) nil) Var (Short "v1")) ((Pcon (SOME (Short "Greater")) nil) App Opapp ((App Opapp ((App Opapp ((Var (Short "filtergt_help")) (Var (Short "v7")))) (Var (Short "v6")))) (Var (Short "v1")))))))))))) (Dlet (0 0 0 0 0 0) "filtergt" (Fun "v2" (Fun "v3" (Fun "v4" (Mat (Var (Short "v3")) (((Pcon (SOME (Short "None")) nil) Var (Short "v4")) ((Pcon (SOME (Short "Some")) ("v1")) App Opapp ((App Opapp ((App Opapp ((Var (Short "filtergt_help")) (Var (Short "v2")))) (Var (Short "v1")))) (Var (Short "v4")))))))))) (Dletrec (0 0 0 0 0 0) (("insertr" "v6" Fun "v7" (Fun "v9" (Fun "v8" (Mat (Var (Short "v8")) (((Pcon (SOME (Short "Tip")) nil) App Opapp ((App Opapp ((Var (Short "singleton")) (Var (Short "v7")))) (Var (Short "v9")))) ((Pcon (SOME (Short "Bin")) ("v5" "v4" "v3" "v2" "v1")) Mat (App Opapp ((App Opapp ((Var (Short "v6")) (Var (Short "v7")))) (Var (Short "v4")))) (((Pcon (SOME (Short "Less")) nil) App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "balancel")) (Var (Short "v4")))) (Var (Short "v3")))) (App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "insertr")) (Var (Short "v6")))) (Var (Short "v7")))) (Var (Short "v9")))) (Var (Short "v2")))))) (Var (Short "v1")))) ((Pcon (SOME (Short "Equal")) nil) Con (SOME (Short "Bin")) ((Var (Short "v5")) (Var (Short "v4")) (Var (Short "v3")) (Var (Short "v2")) (Var (Short "v1")))) ((Pcon (SOME (Short "Greater")) nil) App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "balancer")) (Var (Short "v4")))) (Var (Short "v3")))) (Var (Short "v2")))) (App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "insertr")) (Var (Short "v6")))) (Var (Short "v7")))) (Var (Short "v9")))) (Var (Short "v1"))))))))))))))) (Dletrec (0 0 0 0 0 0) (("hedgeunion" "v21" Fun "v22" (Fun "v23" (Fun "v24" (Fun "v25" (Mat (Var (Short "v25")) (((Pcon (SOME (Short "Tip")) nil) Var (Short "v24")) ((Pcon (SOME (Short "Bin")) ("v20" "v19" "v18" "v17" "v16")) Mat (Var (Short "v24")) (((Pcon (SOME (Short "Tip")) nil) App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "link")) (Var (Short "v19")))) (Var (Short "v18")))) (App Opapp ((App Opapp ((App Opapp ((Var (Short "filtergt")) (Var (Short "v21")))) (Var (Short "v22")))) (Var (Short "v17")))))) (App Opapp ((App Opapp ((App Opapp ((Var (Short "filterlt")) (Var (Short "v21")))) (Var (Short "v23")))) (Var (Short "v16")))))) ((Pcon (SOME (Short "Bin")) ("v15" "v14" "v13" "v12" "v11")) Mat (Var (Short "v17")) (((Pcon (SOME (Short "Tip")) nil) Mat (Var (Short "v16")) (((Pcon (SOME (Short "Tip")) nil) App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "insertr")) (Var (Short "v21")))) (Var (Short "v19")))) (Var (Short "v18")))) (Con (SOME (Short "Bin")) ((Var (Short "v15")) (Var (Short "v14")) (Var (Short "v13")) (Var (Short "v12")) (Var (Short "v11")))))) ((Pcon (SOME (Short "Bin")) ("v5" "v4" "v3" "v2" "v1")) App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "link")) (Var (Short "v14")))) (Var (Short "v13")))) (App Opapp ((App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "hedgeunion")) (Var (Short "v21")))) (Var (Short "v22")))) (Con (SOME (Short "Some")) ((Var (Short "v14")))))) (Var (Short "v12")))) (App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "trim")) (Var (Short "v21")))) (Var (Short "v22")))) (Con (SOME (Short "Some")) ((Var (Short "v14")))))) (Con (SOME (Short "Bin")) ((Var (Short "v20")) (Var (Short "v19")) (Var (Short "v18")) (Con (SOME (Short "Tip")) nil) (Con (SOME (Short "Bin")) ((Var (Short "v5")) (Var (Short "v4")) (Var (Short "v3")) (Var (Short "v2")) (Var (Short "v1")))))))))))) (App Opapp ((App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "hedgeunion")) (Var (Short "v21")))) (Con (SOME (Short "Some")) ((Var (Short "v14")))))) (Var (Short "v23")))) (Var (Short "v11")))) (App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "trim")) (Var (Short "v21")))) (Con (SOME (Short "Some")) ((Var (Short "v14")))))) (Var (Short "v23")))) (Con (SOME (Short "Bin")) ((Var (Short "v20")) (Var (Short "v19")) (Var (Short "v18")) (Con (SOME (Short "Tip")) nil) (Con (SOME (Short "Bin")) ((Var (Short "v5")) (Var (Short "v4")) (Var (Short "v3")) (Var (Short "v2")) (Var (Short "v1")))))))))))))) ((Pcon (SOME (Short "Bin")) ("v10" "v9" "v8" "v7" "v6")) App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "link")) (Var (Short "v14")))) (Var (Short "v13")))) (App Opapp ((App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "hedgeunion")) (Var (Short "v21")))) (Var (Short "v22")))) (Con (SOME (Short "Some")) ((Var (Short "v14")))))) (Var (Short "v12")))) (App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "trim")) (Var (Short "v21")))) (Var (Short "v22")))) (Con (SOME (Short "Some")) ((Var (Short "v14")))))) (Con (SOME (Short "Bin")) ((Var (Short "v20")) (Var (Short "v19")) (Var (Short "v18")) (Con (SOME (Short "Bin")) ((Var (Short "v10")) (Var (Short "v9")) (Var (Short "v8")) (Var (Short "v7")) (Var (Short "v6")))) (Var (Short "v16")))))))))) (App Opapp ((App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "hedgeunion")) (Var (Short "v21")))) (Con (SOME (Short "Some")) ((Var (Short "v14")))))) (Var (Short "v23")))) (Var (Short "v11")))) (App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "trim")) (Var (Short "v21")))) (Con (SOME (Short "Some")) ((Var (Short "v14")))))) (Var (Short "v23")))) (Con (SOME (Short "Bin")) ((Var (Short "v20")) (Var (Short "v19")) (Var (Short "v18")) (Con (SOME (Short "Bin")) ((Var (Short "v10")) (Var (Short "v9")) (Var (Short "v8")) (Var (Short "v7")) (Var (Short "v6")))) (Var (Short "v16")))))))))))))))))))))) (Dletrec (0 0 0 0 0 0) (("splitlookup" "v18" Fun "v19" (Fun "v20" (Mat (Var (Short "v20")) (((Pcon (SOME (Short "Tip")) nil) Con NONE ((Con (SOME (Short "Tip")) nil) (Con NONE ((Con (SOME (Short "None")) nil) (Con (SOME (Short "Tip")) nil))))) ((Pcon (SOME (Short "Bin")) ("v17" "v16" "v15" "v14" "v13")) Mat (App Opapp ((App Opapp ((Var (Short "v18")) (Var (Short "v19")))) (Var (Short "v16")))) (((Pcon (SOME (Short "Less")) nil) Let (SOME "v6") (App Opapp ((App Opapp ((App Opapp ((Var (Short "splitlookup")) (Var (Short "v18")))) (Var (Short "v19")))) (Var (Short "v14")))) (Mat (Var (Short "v6")) (((Pcon NONE ("v5" "v4")) Mat (Var (Short "v4")) (((Pcon NONE ("v3" "v2")) Let (SOME "v1") (App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "link")) (Var (Short "v16")))) (Var (Short "v15")))) (Var (Short "v2")))) (Var (Short "v13")))) (Con NONE ((Var (Short "v5")) (Con NONE ((Var (Short "v3")) (Var (Short "v1")))))))))))) ((Pcon (SOME (Short "Equal")) nil) Con NONE ((Var (Short "v14")) (Con NONE ((Con (SOME (Short "Some")) ((Var (Short "v15")))) (Var (Short "v13")))))) ((Pcon (SOME (Short "Greater")) nil) Let (SOME "v12") (App Opapp ((App Opapp ((App Opapp ((Var (Short "splitlookup")) (Var (Short "v18")))) (Var (Short "v19")))) (Var (Short "v13")))) (Mat (Var (Short "v12")) (((Pcon NONE ("v11" "v10")) Mat (Var (Short "v10")) (((Pcon NONE ("v9" "v8")) Let (SOME "v7") (App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "link")) (Var (Short "v16")))) (Var (Short "v15")))) (Var (Short "v14")))) (Var (Short "v11")))) (Con NONE ((Var (Short "v7")) (Con NONE ((Var (Short "v9")) (Var (Short "v8")))))))))))))))))))) (Dletrec (0 0 0 0 0 0) (("submap'" "v18" Fun "v19" (Fun "v20" (Fun "v21" (Mat (Con NONE ((Var (Short "v20")) (Var (Short "v21")))) (((Pcon NONE ("v17" "v16")) Mat (Var (Short "v17")) (((Pcon (SOME (Short "Tip")) nil) App OpbLeq ((Lit 0) (Lit 0))) ((Pcon (SOME (Short "Bin")) ("v15" "v14" "v13" "v12" "v11")) Mat (Var (Short "v16")) (((Pcon (SOME (Short "Tip")) nil) App OpbLt ((Lit 0) (Lit 0))) ((Pcon (SOME (Short "Bin")) ("v10" "v9" "v8" "v7" "v6")) Mat (App Opapp ((App Opapp ((App Opapp ((Var (Short "splitlookup")) (Var (Short "v18")))) (Var (Short "v14")))) (Con (SOME (Short "Bin")) ((Var (Short "v10")) (Var (Short "v9")) (Var (Short "v8")) (Var (Short "v7")) (Var (Short "v6")))))) (((Pcon NONE ("v5" "v4")) Mat (Var (Short "v4")) (((Pcon NONE ("v3" "v2")) Mat (Var (Short "v3")) (((Pcon (SOME (Short "None")) nil) App OpbLt ((Lit 0) (Lit 0))) ((Pcon (SOME (Short "Some")) ("v1")) Log And (Log And (App Opapp ((App Opapp ((Var (Short "v19")) (Var (Short "v13")))) (Var (Short "v1")))) (App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "submap'")) (Var (Short "v18")))) (Var (Short "v19")))) (Var (Short "v12")))) (Var (Short "v5"))))) (App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "submap'")) (Var (Short "v18")))) (Var (Short "v19")))) (Var (Short "v11")))) (Var (Short "v2")))))))))))))))))))))) (Dlet (0 0 0 0 0 0) "null" (Fun "v6" (Mat (Var (Short "v6")) (((Pcon (SOME (Short "Tip")) nil) App OpbLeq ((Lit 0) (Lit 0))) ((Pcon (SOME (Short "Bin")) ("v5" "v4" "v3" "v2" "v1")) App OpbLt ((Lit 0) (Lit 0))))))) (Dletrec (0 0 0 0 0 0) (("lookup" "v6" Fun "v7" (Fun "v8" (Mat (Var (Short "v8")) (((Pcon (SOME (Short "Tip")) nil) Con (SOME (Short "None")) nil) ((Pcon (SOME (Short "Bin")) ("v5" "v4" "v3" "v2" "v1")) Mat (App Opapp ((App Opapp ((Var (Short "v6")) (Var (Short "v7")))) (Var (Short "v4")))) (((Pcon (SOME (Short "Less")) nil) App Opapp ((App Opapp ((App Opapp ((Var (Short "lookup")) (Var (Short "v6")))) (Var (Short "v7")))) (Var (Short "v2")))) ((Pcon (SOME (Short "Equal")) nil) Con (SOME (Short "Some")) ((Var (Short "v3")))) ((Pcon (SOME (Short "Greater")) nil) App Opapp ((App Opapp ((App Opapp ((Var (Short "lookup")) (Var (Short "v6")))) (Var (Short "v7")))) (Var (Short "v1")))))))))))) (Dletrec (0 0 0 0 0 0) (("member" "v6" Fun "v7" (Fun "v8" (Mat (Var (Short "v8")) (((Pcon (SOME (Short "Tip")) nil) App OpbLt ((Lit 0) (Lit 0))) ((Pcon (SOME (Short "Bin")) ("v5" "v4" "v3" "v2" "v1")) Mat (App Opapp ((App Opapp ((Var (Short "v6")) (Var (Short "v7")))) (Var (Short "v4")))) (((Pcon (SOME (Short "Less")) nil) App Opapp ((App Opapp ((App Opapp ((Var (Short "member")) (Var (Short "v6")))) (Var (Short "v7")))) (Var (Short "v2")))) ((Pcon (SOME (Short "Equal")) nil) App OpbLeq ((Lit 0) (Lit 0))) ((Pcon (SOME (Short "Greater")) nil) App Opapp ((App Opapp ((App Opapp ((Var (Short "member")) (Var (Short "v6")))) (Var (Short "v7")))) (Var (Short "v1")))))))))))) (Dlet (0 0 0 0 0 0) "empty" (Con (SOME (Short "Tip")) nil)) (Dletrec (0 0 0 0 0 0) (("insert" "v6" Fun "v7" (Fun "v9" (Fun "v8" (Mat (Var (Short "v8")) (((Pcon (SOME (Short "Tip")) nil) App Opapp ((App Opapp ((Var (Short "singleton")) (Var (Short "v7")))) (Var (Short "v9")))) ((Pcon (SOME (Short "Bin")) ("v5" "v4" "v3" "v2" "v1")) Mat (App Opapp ((App Opapp ((Var (Short "v6")) (Var (Short "v7")))) (Var (Short "v4")))) (((Pcon (SOME (Short "Less")) nil) App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "balancel")) (Var (Short "v4")))) (Var (Short "v3")))) (App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "insert")) (Var (Short "v6")))) (Var (Short "v7")))) (Var (Short "v9")))) (Var (Short "v2")))))) (Var (Short "v1")))) ((Pcon (SOME (Short "Equal")) nil) Con (SOME (Short "Bin")) ((Var (Short "v5")) (Var (Short "v7")) (Var (Short "v9")) (Var (Short "v2")) (Var (Short "v1")))) ((Pcon (SOME (Short "Greater")) nil) App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "balancer")) (Var (Short "v4")))) (Var (Short "v3")))) (Var (Short "v2")))) (App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "insert")) (Var (Short "v6")))) (Var (Short "v7")))) (Var (Short "v9")))) (Var (Short "v1"))))))))))))))) (Dletrec (0 0 0 0 0 0) (("delete" "v6" Fun "v7" (Fun "v8" (Mat (Var (Short "v8")) (((Pcon (SOME (Short "Tip")) nil) Con (SOME (Short "Tip")) nil) ((Pcon (SOME (Short "Bin")) ("v5" "v4" "v3" "v2" "v1")) Mat (App Opapp ((App Opapp ((Var (Short "v6")) (Var (Short "v7")))) (Var (Short "v4")))) (((Pcon (SOME (Short "Less")) nil) App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "balancer")) (Var (Short "v4")))) (Var (Short "v3")))) (App Opapp ((App Opapp ((App Opapp ((Var (Short "delete")) (Var (Short "v6")))) (Var (Short "v7")))) (Var (Short "v2")))))) (Var (Short "v1")))) ((Pcon (SOME (Short "Equal")) nil) App Opapp ((App Opapp ((Var (Short "glue")) (Var (Short "v2")))) (Var (Short "v1")))) ((Pcon (SOME (Short "Greater")) nil) App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "balancel")) (Var (Short "v4")))) (Var (Short "v3")))) (Var (Short "v2")))) (App Opapp ((App Opapp ((App Opapp ((Var (Short "delete")) (Var (Short "v6")))) (Var (Short "v7")))) (Var (Short "v1")))))))))))))) (Dlet (0 0 0 0 0 0) "union" (Fun "v11" (Fun "v12" (Fun "v13" (Mat (Var (Short "v12")) (((Pcon (SOME (Short "Tip")) nil) Var (Short "v13")) ((Pcon (SOME (Short "Bin")) ("v10" "v9" "v8" "v7" "v6")) Mat (Var (Short "v13")) (((Pcon (SOME (Short "Tip")) nil) Con (SOME (Short "Bin")) ((Var (Short "v10")) (Var (Short "v9")) (Var (Short "v8")) (Var (Short "v7")) (Var (Short "v6")))) ((Pcon (SOME (Short "Bin")) ("v5" "v4" "v3" "v2" "v1")) App Opapp ((App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "hedgeunion")) (Var (Short "v11")))) (Con (SOME (Short "None")) nil))) (Con (SOME (Short "None")) nil))) (Con (SOME (Short "Bin")) ((Var (Short "v10")) (Var (Short "v9")) (Var (Short "v8")) (Var (Short "v7")) (Var (Short "v6")))))) (Con (SOME (Short "Bin")) ((Var (Short "v5")) (Var (Short "v4")) (Var (Short "v3")) (Var (Short "v2")) (Var (Short "v1")))))))))))))) (Dletrec (0 0 0 0 0 0) (("foldrWithKey" "v6" Fun "v8" (Fun "v7" (Mat (Var (Short "v7")) (((Pcon (SOME (Short "Tip")) nil) Var (Short "v8")) ((Pcon (SOME (Short "Bin")) ("v5" "v4" "v3" "v2" "v1")) App Opapp ((App Opapp ((App Opapp ((Var (Short "foldrWithKey")) (Var (Short "v6")))) (App Opapp ((App Opapp ((App Opapp ((Var (Short "v6")) (Var (Short "v4")))) (Var (Short "v3")))) (App Opapp ((App Opapp ((App Opapp ((Var (Short "foldrWithKey")) (Var (Short "v6")))) (Var (Short "v8")))) (Var (Short "v1")))))))) (Var (Short "v2")))))))))) (Dlet (0 0 0 0 0 0) "toAscList" (Fun "v4" (App Opapp ((App Opapp ((App Opapp ((Var (Short "foldrWithKey")) (Fun "v3" (Fun "v2" (Fun "v1" (Con (SOME (Short "::")) ((Con NONE ((Var (Short "v3")) (Var (Short "v2")))) (Var (Short "v1"))))))))) (Con (SOME (Short "[]")) nil))) (Var (Short "v4")))))) (Dlet (0 0 0 0 0 0) "compare" (Fun "v1" (Fun "v2" (Fun "v3" (Fun "v4" (App Opapp ((App Opapp ((App Opapp ((Var (Long "List" (Short "compare"))) (App Opapp ((App Opapp ((Var (Long "Pair" (Short "compare"))) (Var (Short "v1")))) (Var (Short "v2")))))) (App Opapp ((Var (Short "toAscList")) (Var (Short "v3")))))) (App Opapp ((Var (Short "toAscList")) (Var (Short "v4"))))))))))) (Dletrec (0 0 0 0 0 0) (("map" "v7" Fun "v6" (Mat (Var (Short "v6")) (((Pcon (SOME (Short "Tip")) nil) Con (SOME (Short "Tip")) nil) ((Pcon (SOME (Short "Bin")) ("v5" "v4" "v3" "v2" "v1")) Con (SOME (Short "Bin")) ((Var (Short "v5")) (Var (Short "v4")) (App Opapp ((Var (Short "v7")) (Var (Short "v3")))) (App Opapp ((App Opapp ((Var (Short "map")) (Var (Short "v7")))) (Var (Short "v2")))) (App Opapp ((App Opapp ((Var (Short "map")) (Var (Short "v7")))) (Var (Short "v1"))))))))))) (Dlet (0 0 0 0 0 0) "isSubmapOfBy" (Fun "v1" (Fun "v2" (Fun "v3" (Fun "v4" (Log And (App OpbLeq ((App Opapp ((Var (Short "size")) (Var (Short "v3")))) (App Opapp ((Var (Short "size")) (Var (Short "v4")))))) (App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "submap'")) (Var (Short "v1")))) (Var (Short "v2")))) (Var (Short "v3")))) (Var (Short "v4")))))))))) (Dlet (0 0 0 0 0 0) "isSubmapOf" (Fun "v3" (Fun "v4" (Fun "v5" (App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "isSubmapOfBy")) (Var (Short "v3")))) (Fun "v2" (Fun "v1" (App Equality ((Var (Short "v2")) (Var (Short "v1")))))))) (Var (Short "v4")))) (Var (Short "v5")))))))) (Dlet (0 0 0 0 0 0) "fromList" (Fun "v5" (Fun "v6" (App Opapp ((App Opapp ((App Opapp ((Var (Long "List" (Short "foldr"))) (Fun "v4" (Mat (Var (Short "v4")) (((Pcon NONE ("v3" "v2")) Fun "v1" (App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "insert")) (Var (Short "v5")))) (Var (Short "v3")))) (Var (Short "v2")))) (Var (Short "v1")))))))))) (Var (Short "empty")))) (Var (Short "v6")))))))) ((Dmod "Map" ((Dtabbrev (0 0 0 0 0 0) ("'a" "'b") "map" (Atapp ((Atvar "'a") (Atvar "'b")) (Short "map"))) (Dlet (0 0 0 0 0 0) "lookup" (Fun "v3" (Fun "v4" (Mat (Var (Short "v3")) (((Pcon (SOME (Short "Map")) ("v2" "v1")) App Opapp ((App Opapp ((App Opapp ((Var (Short "lookup")) (Var (Short "v2")))) (Var (Short "v4")))) (Var (Short "v1"))))))))) (Dlet (0 0 0 0 0 0) "insert" (Fun "v5" (Fun "v6" (Fun "v7" (Mat (Var (Short "v5")) (((Pcon (SOME (Short "Map")) ("v4" "v3")) Mat (Con NONE ((Var (Short "v6")) (Var (Short "v7")))) (((Pcon NONE ("v2" "v1")) Con (SOME (Short "Map")) ((Var (Short "v4")) (App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "insert")) (Var (Short "v4")))) (Var (Short "v2")))) (Var (Short "v1")))) (Var (Short "v3")))))))))))))) (Dlet (0 0 0 0 0 0) "delete" (Fun "v3" (Fun "v4" (Mat (Var (Short "v3")) (((Pcon (SOME (Short "Map")) ("v2" "v1")) Con (SOME (Short "Map")) ((Var (Short "v2")) (App Opapp ((App Opapp ((App Opapp ((Var (Short "delete")) (Var (Short "v2")))) (Var (Short "v4")))) (Var (Short "v1"))))))))))) (Dlet (0 0 0 0 0 0) "null" (Fun "v3" (Mat (Var (Short "v3")) (((Pcon (SOME (Short "Map")) ("v2" "v1")) App Opapp ((Var (Short "null")) (Var (Short "v1")))))))) (Dlet (0 0 0 0 0 0) "empty" (Fun "v1" (Con (SOME (Short "Map")) ((Var (Short "v1")) (Var (Short "empty")))))) (Dlet (0 0 0 0 0 0) "union" (Fun "v5" (Fun "v6" (Mat (Var (Short "v5")) (((Pcon (SOME (Short "Map")) ("v4" "v3")) Mat (Var (Short "v6")) (((Pcon (SOME (Short "Map")) ("v2" "v1")) Con (SOME (Short "Map")) ((Var (Short "v4")) (App Opapp ((App Opapp ((App Opapp ((Var (Short "union")) (Var (Short "v4")))) (Var (Short "v3")))) (Var (Short "v1"))))))))))))) (Dlet (0 0 0 0 0 0) "foldrWithKey" (Fun "v5" (Fun "v6" (Fun "v7" (Mat (Con NONE ((Var (Short "v6")) (Var (Short "v7")))) (((Pcon NONE ("v4" "v3")) Mat (Var (Short "v3")) (((Pcon (SOME (Short "Map")) ("v2" "v1")) App Opapp ((App Opapp ((App Opapp ((Var (Short "foldrWithKey")) (Var (Short "v5")))) (Var (Short "v4")))) (Var (Short "v1")))))))))))) (Dlet (0 0 0 0 0 0) "map" (Fun "v3" (Fun "v4" (Mat (Var (Short "v4")) (((Pcon (SOME (Short "Map")) ("v2" "v1")) Con (SOME (Short "Map")) ((Var (Short "v2")) (App Opapp ((App Opapp ((Var (Short "map")) (Var (Short "v3")))) (Var (Short "v1"))))))))))) (Dlet (0 0 0 0 0 0) "toAscList" (Fun "v3" (Mat (Var (Short "v3")) (((Pcon (SOME (Short "Map")) ("v2" "v1")) App Opapp ((Var (Short "toAscList")) (Var (Short "v1")))))))) (Dlet (0 0 0 0 0 0) "fromList" (Fun "v1" (Fun "v2" (Con (SOME (Short "Map")) ((Var (Short "v1")) (App Opapp ((App Opapp ((Var (Short "fromList")) (Var (Short "v1")))) (Var (Short "v2"))))))))) (Dlet (0 0 0 0 0 0) "isSubmapBy" (Fun "v7" (Fun "v8" (Fun "v9" (Mat (Con NONE ((Var (Short "v8")) (Var (Short "v9")))) (((Pcon NONE ("v6" "v5")) Mat (Var (Short "v6")) (((Pcon (SOME (Short "Map")) ("v4" "v3")) Mat (Var (Short "v5")) (((Pcon (SOME (Short "Map")) ("v2" "v1")) App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "isSubmapOfBy")) (Var (Short "v4")))) (Var (Short "v7")))) (Var (Short "v3")))) (Var (Short "v1")))))))))))))) (Dlet (0 0 0 0 0 0) "isSubmap" (Fun "v3" (Fun "v4" (App Opapp ((App Opapp ((App Opapp ((Var (Short "isSubmapBy")) (Fun "v2" (Fun "v1" (App Equality ((Var (Short "v2")) (Var (Short "v1")))))))) (Var (Short "v3")))) (Var (Short "v4"))))))))) (Dtabbrev (0 0 0 0 0 0) ("'a" "'b") "map" (Atapp ((Atvar "'a") (Atvar "'b")) (Short "map"))))) 
(Dletrec (0 0 0 0 0 0) (("exec_dfa" "v4" Fun "v7" (Fun "v5" (Fun "v6" (Mat (Var (Short "v6")) (((Pcon (SOME (Short "[]")) nil) App Vsub ((Var (Short "v4")) (Var (Short "v5")))) ((Pcon (SOME (Short "::")) ("v3" "v2")) Mat (App Vsub ((App Vsub ((Var (Short "v7")) (Var (Short "v5")))) (App Ord ((Var (Short "v3")))))) (((Pcon (SOME (Short "None")) nil) App OpbLt ((Lit 0) (Lit 0))) ((Pcon (SOME (Short "Some")) ("v1")) App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "exec_dfa")) (Var (Short "v4")))) (Var (Short "v7")))) (Var (Short "v1")))) (Var (Short "v2"))))))))))))) 
(Dlet (0 0 0 0 0 0) "matcher" (Fun "v1" (App Opapp ((App Opapp ((App Opapp ((App Opapp ((Var (Short "exec_dfa")) (App VfromList ((Con (SOME (Short "::")) ((App OpbLt ((Lit 0) (Lit 0))) (Con (SOME (Short "::")) ((App OpbLt ((Lit 0) (Lit 0))) (Con (SOME (Short "::")) ((App OpbLt ((Lit 0) (Lit 0))) (Con (SOME (Short "::")) ((App OpbLt ((Lit 0) (Lit 0))) (Con (SOME (Short "::")) ((App OpbLt ((Lit 0) (Lit 0))) (Con (SOME (Short "::")) ((App OpbLt ((Lit 0) (Lit 0))) (Con (SOME (Short "::")) ((App OpbLt ((Lit 0) (Lit 0))) (Con (SOME (Short "::")) ((App OpbLt ((Lit 0) (Lit 0))) (Con (SOME (Short "::")) ((App OpbLt ((Lit 0) (Lit 0))) (Con (SOME (Short "::")) ((App OpbLeq ((Lit 0) (Lit 0))) (Con (SOME (Short "[]")) nil))))))))))))))))))))))))) (App VfromList ((Con (SOME (Short "::")) ((App VfromList ((Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 2))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "[]")) nilon (SOME (Short "::")) ((App VfromList ((Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "[]")) nilon (SOME (Short "::")) ((App VfromList ((Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 3))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "[]")) nilon (SOME (Short "::")) ((App VfromList ((Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 4))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "[]")) nilon (SOME (Short "::")) ((App VfromList ((Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 5))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "[]")) nilon (SOME (Short "::")) ((App VfromList ((Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 6))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "[]")) nilon (SOME (Short "::")) ((App VfromList ((Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 7))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "[]")) nilon (SOME (Short "::")) ((App VfromList ((Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 8))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "[]")) nilon (SOME (Short "::")) ((App VfromList ((Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 9))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "[]")) nil))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) (Con (SOME (Short "::")) ((App VfromList ((Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "::")) ((Con (SOME (Short "Some")) ((Lit 1))) (Con (SOME (Short "[]")) nilon (SOME (Short "[]")) nil))))))))))))))))))))))))) (Lit 0))) (Var (Short "v1")))))) 
(Dlet (0 0 0 0 0 0) "match_string" (Fun "v1" (App Opapp ((Var (Short "matcher")) (App Explode ((Var (Short "v1")))))))) 
(Dletrec (0 0 0 0 0 0) (("null_index" "v2" Fun "v1" (If (App OpbGeq ((Var (Short "v1")) (App Strlen ((Var (Short "v2")))))) (Con (SOME (Short "None")) nil) (If (App Equality ((App Strsub ((Var (Short "v2")) (Var (Short "v1")))) (Lit (char "\\00")))) (Con (SOME (Short "Some")) ((Var (Short "v1")))) (App Opapp ((App Opapp ((Var (Short "null_index")) (Var (Short "v2")))) (App OpnPlus ((Var (Short "v1")) (Lit 1)))))))))) 
(Dlet (0 0 0 0 0 0) "cut_at_null" (Fun "v2" (Mat (App Opapp ((App Opapp ((Var (Short "null_index")) (Var (Short "v2")))) (Lit 0))) (((Pcon (SOME (Short "None")) nil) App Opapp ((App Opapp ((Var (Long "String" (Short "strcat"))) (Var (Short "v2")))) (App Opapp ((Var (Long "String" (Short "str"))) (Lit (char "\\00")))))) ((Pcon (SOME (Short "Some")) ("v1")) App CopyStrStr ((Var (Short "v2")) (Lit 0) (App OpnPlus ((Var (Short "v1")) (Lit 1))))))))) 
(Dlet (0 0 0 0 0 0) "dummyarr" (App Aw8alloc ((Lit 0) (Lit (word8 0))))) 
(Dletrec (0 0 0 0 0 0) (("forward_loop" "inputarr" Let NONE (App (FFI . "accept_call") ((Lit "") (Var (Short "inputarr")))) (Let NONE (Let (SOME "ln") (App Opapp ((App Opapp ((App Opapp ((Var (Long "Word8Array" (Short "substring"))) (Var (Short "inputarr")))) (Lit 0))) (Lit 256))) (Let (SOME "ln'") (App Opapp ((Var (Short "cut_at_null")) (Var (Short "ln")))) (Let (SOME "a") (App Opapp ((Var (Short "match_string")) (Var (Short "ln'")))) (If (Var (Short "a")) (App (FFI . "emit_string") ((Var (Short "ln'")) (Var (Short "dummyarr")))) (Con NONE nil))))) (App Opapp ((Var (Short "forward_loop")) (Var (Short "inputarr")))))))) 
(Dletrec (0 0 0 0 0 0) (("forward_matching_lines" "u" Let (SOME "a") (App Opapp ((Var (Long "Word8" (Short "fromInt"))) (Lit 0))) (Let (SOME "inputarr") (App Opapp ((App Opapp ((Var (Long "Word8Array" (Short "array"))) (Lit 256))) (Var (Short "a")))) (App Opapp ((Var (Short "forward_loop")) (Var (Short "inputarr"))))))))
)