--Copyright © 2021 Rockwell Collins, Inc., a part of Collins Aerospace
package VPM
public

	with LRUs, Processors, Memories;
	with Busses;
	with DTU_Types;
	with ADSB_Types;
	with CASE_Proxies;
	with Base_Types;
	with Common_Types;
	with Data_Model;
	with CASE_Properties;
	with CASE_AGREE;
	renames CASE_AGREE::all;
	with HAMR;
	with CASE_Scheduling;

	thread Dummy_Filter
		features
			Input: in event data port ADSB_Types::ADSB_Aggregated_Message.impl;
			Output: out event data port ADSB_Types::ADSB_Aggregated_Message.impl;
		properties
			CASE_Properties::Filtering => 100;
			CASE_Properties::Component_Spec => ("Dummy_Filter_Output");
			CASE_Properties::Component_Language => CakeML;
			Dispatch_Protocol => Periodic;
			Compute_Execution_Time => 10ms .. 50ms;
			Period => 500ms;
		annex agree {**
			property Dummy_Filter_policy = true;
			guarantee Dummy_Filter_Output "The filter output shall be well-formed" :
			if event(Input) and Dummy_Filter_policy then
				event(Output) and Output = Input
			else
				not event(Output);
			**};
	end Dummy_Filter;

	thread implementation Dummy_Filter.Impl

	end Dummy_Filter.Impl;

	thread adapter_high
		-- automagically generated
		features
			-- high to low messages
			SHM_QUEUE_ADSB_Heartbeat_In: in event data port CASE_Proxies::shm_queue_adsb_Heartbeat.impl;
			SHM_QUEUE_ADSB_Ownship_In: in event data port CASE_Proxies::shm_queue_adsb_ownship.impl;
			SHM_QUEUE_ADSB_Traffic_In: in event data port CASE_Proxies::shm_queue_adsb_traffic.impl;

			ADSB_Messages_Out: out event data port ADSB_Types::ADSB_Aggregated_Message.impl;
		properties
			Dispatch_Protocol => Periodic;
			Compute_Execution_Time => 10ms .. 50ms;
			Period => 250ms;
	end adapter_high;

	thread implementation adapter_high.impl

	end adapter_high.impl;

	thread adapter_low
		-- automagically generated
		features
			-- high to low messages
			ADSB_Messages_In: in event data port ADSB_Types::ADSB_Aggregated_Message.impl;

			SHM_QUEUE_ADSB_Heartbeat_Out: out event data port CASE_Proxies::shm_queue_adsb_Heartbeat.impl;
			SHM_QUEUE_ADSB_Ownship_Out: out event data port CASE_Proxies::shm_queue_adsb_ownship.impl;
			SHM_QUEUE_ADSB_Traffic_Out: out event data port CASE_Proxies::shm_queue_adsb_traffic.impl;
		properties
			Dispatch_Protocol => Periodic;
			Compute_Execution_Time => 10ms .. 50ms;
			Period => 500ms;
	end adapter_low;

	thread implementation adapter_low.impl

	end adapter_low.impl;

	process SW
		features
			SHM_QUEUE_ADSB_Heartbeat_In: in event data port CASE_Proxies::shm_queue_adsb_Heartbeat.impl;
			SHM_QUEUE_ADSB_Ownship_In: in event data port CASE_Proxies::shm_queue_adsb_ownship.impl;
			SHM_QUEUE_ADSB_Traffic_In: in event data port CASE_Proxies::shm_queue_adsb_traffic.impl;

			SHM_QUEUE_ADSB_Heartbeat_Out: out event data port CASE_Proxies::shm_queue_adsb_Heartbeat.impl;
			SHM_QUEUE_ADSB_Ownship_Out: out event data port CASE_Proxies::shm_queue_adsb_ownship.impl;
			SHM_QUEUE_ADSB_Traffic_Out: out event data port CASE_Proxies::shm_queue_adsb_traffic.impl;
	end SW;

	process implementation SW.impl
		subcomponents
			adapter_high: thread adapter_high.impl;
			adapter_low: thread adapter_low.impl;

			Filter: thread Dummy_Filter.Impl;
		connections
			c29: port SHM_QUEUE_ADSB_Heartbeat_In -> adapter_high.SHM_QUEUE_ADSB_Heartbeat_In;
			c30: port SHM_QUEUE_ADSB_Ownship_In -> adapter_high.SHM_QUEUE_ADSB_Ownship_In;
			c31: port SHM_QUEUE_ADSB_Traffic_In -> adapter_high.SHM_QUEUE_ADSB_Traffic_In;
			c41: port adapter_high.ADSB_Messages_Out -> Filter.Input;
			c42: port adapter_low.SHM_QUEUE_ADSB_Heartbeat_Out -> SHM_QUEUE_ADSB_Heartbeat_Out;
			c43: port adapter_low.SHM_QUEUE_ADSB_Ownship_Out -> SHM_QUEUE_ADSB_Ownship_Out;
			c44: port adapter_low.SHM_QUEUE_ADSB_Traffic_Out -> SHM_QUEUE_ADSB_Traffic_Out;

			c1: port Filter.Output -> adapter_low.ADSB_Messages_In;
	end SW.impl;

	system VPM_8600B_Ext extends LRUs::VPM_8600B
		features
			Eth_Conn: requires bus access Busses::IEEE_802_3.impl;

			ADSB_Heartbeat_In: in event data port ADSB_Types::HeartBeat_Message.impl;
			ADSB_Ownship_In: in event data port ADSB_Types::TrafficReport.impl;
			ADSB_Traffic_In: in event data port ADSB_Types::TrafficReport.impl {Acceptable_Array_Size => (0 .. 150);};

			ADSB_Heartbeat_Out: out event data port ADSB_Types::HeartBeat_Message.impl;
			ADSB_Ownship_Out: out event data port ADSB_Types::TrafficReport.impl;
			ADSB_Traffic_Out: out event data port ADSB_Types::TrafficReport.impl {Acceptable_Array_Size => (0 .. 150);};
	end VPM_8600B_Ext;

	system implementation VPM_8600B_Ext.impl extends LRUs::VPM_8600B.impl
		subcomponents
			NAND_Flash: memory Memories::Flash_Memory;
			Memory_Bus: bus Memories::Memory_Bus;

			Proxy_Low: process CASE_Proxies::Proxy_Low.impl;
			Proxy_High: process CASE_Proxies::Proxy_High.impl;

			SW: system SW_seL4.Impl;
		connections

			c21: port ADSB_Heartbeat_In -> Proxy_High.ADSB_Heartbeat_In;
			c22: port ADSB_Ownship_In -> Proxy_High.ADSB_Ownship_In;
			c23: port ADSB_Traffic_In -> Proxy_High.ADSB_Traffic_In;
			c24: port Proxy_High.SHM_QUEUE_ADSB_Heartbeat_Out -> SW.SHM_QUEUE_ADSB_Heartbeat_In;
			c25: port Proxy_High.SHM_QUEUE_ADSB_Ownship_Out -> SW.SHM_QUEUE_ADSB_Ownship_In;
			c26: port Proxy_High.SHM_QUEUE_ADSB_Traffic_Out -> SW.SHM_QUEUE_ADSB_Traffic_In;
			c27: port SW.SHM_QUEUE_ADSB_Heartbeat_Out -> Proxy_Low.SHM_QUEUE_ADSB_Heartbeat_In;
			c28: port SW.SHM_QUEUE_ADSB_Ownship_Out -> Proxy_Low.SHM_QUEUE_ADSB_Ownship_In;
			c29: port SW.SHM_QUEUE_ADSB_Traffic_Out -> Proxy_Low.SHM_QUEUE_ADSB_Traffic_In;
			c30: port Proxy_Low.ADSB_Heartbeat_Out -> ADSB_Heartbeat_Out;
			c31: port Proxy_Low.ADSB_Ownship_Out -> ADSB_Ownship_Out;
			c32: port Proxy_Low.ADSB_Traffic_Out -> ADSB_Traffic_Out;

		A1_Basecard_mem: bus access A1_Basecard.Memory_Access <-> Memory_Bus;
			A1_Mez_mem: bus access A1_Mezz.Memory_Access <-> Memory_Bus;
			A2_Basecard_mem: bus access A2_Basecard.Memory_Access <-> Memory_Bus;
			A2_Mez_mem: bus access A2_Mezz.Memory_Access <-> Memory_Bus;
			A3_Basecard_mem: bus access A3_Basecard.Memory_Access <-> Memory_Bus;
			mem_card: bus access NAND_Flash.Flash_Data_Bus <-> Memory_Bus;

			A1_Basecard_Eth: bus access A1_Basecard.Eth_Conn <-> Eth_Conn;
			A1_Mez_Eth: bus access A1_Mezz.Eth_Conn <-> Eth_Conn;
			A2_Basecard_Eth: bus access A2_Basecard.Eth_Conn <-> Eth_Conn;
			A2_Mez_Eth: bus access A2_Mezz.Eth_Conn <-> Eth_Conn;
			A3_Basecard_Eth: bus access A3_Basecard.Eth_Conn <-> Eth_Conn;
		properties
			Actual_Memory_Binding => (
				reference (NAND_Flash)) applies to A1_Basecard.application_proc, A1_Mezz.application_proc, A2_Basecard.application_proc, A2_Mezz.application_proc, A3_Basecard.application_proc;

			-- proxies running on separate R5 cores
			Actual_Processor_Binding => (reference (A1_Basecard.real_time_proc.Core0)) applies to Proxy_Low;

			Actual_Processor_Binding => (reference (A1_Basecard.real_time_proc.Core1)) applies to Proxy_High;

			-- new process runs on A53
			Actual_Processor_Binding => (reference (A1_Basecard.application_proc.Core0)) applies to SW;
			CASE_Properties::OS => seL4 applies to A1_Basecard.application_proc.Core0;
			Frame_Period => 500 ms applies to A1_Basecard.application_proc.Core0;
			Clock_Period => 2 ms applies to A1_Basecard.application_proc.Core0;
			CASE_Scheduling::Max_Domain => 8 applies to A1_Basecard.application_proc.Core0;			
			HAMR::Bit_Codec_Raw_Connections => true;
		annex resolute {**
			check(HAMR_Guidelines)
		**};

	end VPM_8600B_Ext.impl;
	
	process adapter_high_seL4
		features
			SHM_QUEUE_ADSB_Heartbeat_In: in event data port CASE_Proxies::shm_queue_adsb_Heartbeat.impl;
			SHM_QUEUE_ADSB_Ownship_In: in event data port CASE_Proxies::shm_queue_adsb_ownship.impl;
			SHM_QUEUE_ADSB_Traffic_In: in event data port CASE_Proxies::shm_queue_adsb_traffic.impl;
			ADSB_Messages_Out: out event data port ADSB_Types::ADSB_Aggregated_Message.impl;
		properties
			Period => 250ms;
			CASE_Scheduling::Domain => 2;			
	end adapter_high_seL4;

	process implementation adapter_high_seL4.Impl
		subcomponents
			adapter_high: thread adapter_high.impl;
		connections
			c1: port SHM_QUEUE_ADSB_Heartbeat_In -> adapter_high.SHM_QUEUE_ADSB_Heartbeat_In;
			c2: port adapter_high.ADSB_Messages_Out -> ADSB_Messages_Out;
			c3: port SHM_QUEUE_ADSB_Ownship_In -> adapter_high.SHM_QUEUE_ADSB_Ownship_In;
			c4: port SHM_QUEUE_ADSB_Traffic_In -> adapter_high.SHM_QUEUE_ADSB_Traffic_In;
	end adapter_high_seL4.Impl;

	process adapter_low_seL4
		features
			ADSB_Messages_In: in event data port ADSB_Types::ADSB_Aggregated_Message.impl;
			SHM_QUEUE_ADSB_Heartbeat_Out: out event data port CASE_Proxies::shm_queue_adsb_Heartbeat.impl;
			SHM_QUEUE_ADSB_Ownship_Out: out event data port CASE_Proxies::shm_queue_adsb_ownship.impl;
			SHM_QUEUE_ADSB_Traffic_Out: out event data port CASE_Proxies::shm_queue_adsb_traffic.impl;
		properties
			Period => 500ms;
			CASE_Scheduling::Domain => 3;			
	end adapter_low_seL4;

	process implementation adapter_low_seL4.Impl
		subcomponents
			adapter_low: thread adapter_low.impl;
		connections
			c1: port ADSB_Messages_In -> adapter_low.ADSB_Messages_In;
			c2: port adapter_low.SHM_QUEUE_ADSB_Ownship_Out -> SHM_QUEUE_ADSB_Ownship_Out;
			c3: port adapter_low.SHM_QUEUE_ADSB_Traffic_Out -> SHM_QUEUE_ADSB_Traffic_Out;
			c4: port adapter_low.SHM_QUEUE_ADSB_Heartbeat_Out -> SHM_QUEUE_ADSB_Heartbeat_Out;
	end adapter_low_seL4.Impl;

	process Dummy_Filter_seL4
		features
			Input: in event data port ADSB_Types::ADSB_Aggregated_Message.impl;
			Output: out event data port ADSB_Types::ADSB_Aggregated_Message.impl;
		properties
			CASE_Properties::Filtering => 100;
			CASE_Properties::Component_Spec => ("Dummy_Filter_Output");
			CASE_Properties::Component_Language => CakeML;
			Period => 500ms;
			CASE_Scheduling::Domain => 4;			
	end Dummy_Filter_seL4;

	process implementation Dummy_Filter_seL4.Impl
		subcomponents
			Dummy_Filter: thread Dummy_Filter.Impl;
		connections
			c1: port Input -> Dummy_Filter.Input;
			c2: port Dummy_Filter.Output -> Output;
		annex agree {**
			lift contract;
			**};
	end Dummy_Filter_seL4.Impl;

	system SW_seL4
		features
			SHM_QUEUE_ADSB_Heartbeat_In: in event data port CASE_Proxies::shm_queue_adsb_Heartbeat.impl;
			SHM_QUEUE_ADSB_Ownship_In: in event data port CASE_Proxies::shm_queue_adsb_ownship.impl;
			SHM_QUEUE_ADSB_Traffic_In: in event data port CASE_Proxies::shm_queue_adsb_traffic.impl;
			SHM_QUEUE_ADSB_Heartbeat_Out: out event data port CASE_Proxies::shm_queue_adsb_Heartbeat.impl;
			SHM_QUEUE_ADSB_Ownship_Out: out event data port CASE_Proxies::shm_queue_adsb_ownship.impl;
			SHM_QUEUE_ADSB_Traffic_Out: out event data port CASE_Proxies::shm_queue_adsb_traffic.impl;
	end SW_seL4;

	system implementation SW_seL4.Impl
		subcomponents
			Filter: process Dummy_Filter_seL4.Impl;
			adapter_low: process adapter_low_seL4.Impl;
			adapter_high: process adapter_high_seL4.Impl;
		connections
			c1: port SHM_QUEUE_ADSB_Heartbeat_In -> adapter_high.SHM_QUEUE_ADSB_Heartbeat_In;
			c2: port SHM_QUEUE_ADSB_Ownship_In -> adapter_high.SHM_QUEUE_ADSB_Ownship_In;
			c3: port SHM_QUEUE_ADSB_Traffic_In -> adapter_high.SHM_QUEUE_ADSB_Traffic_In;
			c4: port adapter_high.ADSB_Messages_Out -> Filter.Input;
			c5: port adapter_low.SHM_QUEUE_ADSB_Heartbeat_Out -> SHM_QUEUE_ADSB_Heartbeat_Out;
			c6: port adapter_low.SHM_QUEUE_ADSB_Ownship_Out -> SHM_QUEUE_ADSB_Ownship_Out;
			c7: port adapter_low.SHM_QUEUE_ADSB_Traffic_Out -> SHM_QUEUE_ADSB_Traffic_Out;
			c8: port Filter.Output -> adapter_low.ADSB_Messages_In;
		properties
			HAMR::Bit_Codec_Raw_Connections => true;
	end SW_seL4.Impl;
end VPM;