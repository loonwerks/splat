(*---------------------------------------------------------------------------*)
(*  Actual setup and invocation                                              *)
(*---------------------------------------------------------------------------*)

structure Control =
struct

fun pacer_emit() =
    (#(sb_pacer_notification_emit) "" Utils.singlebuf;
     Word8Array.sub Utils.singlebuf 0 <> Word8.fromInt 0);

fun pacer_wait() =
    (#(sb_pacer_notification_wait) "" Utils.singlebuf;
     Word8Array.sub Utils.singlebuf 0 <> Word8.fromInt 0);

fun receiveInput() = #(api_receiveInput) "" Utils.emptybuf;
fun sendOutput()   = #(api_sendOutput) "" Utils.emptybuf;

fun loop () =
  if pacer_wait() then
    ( receiveInput();
      Monitor.stepFn();
      sendOutput();
      pacer_emit();
      loop()
    )
  else
    loop();

fun start () = (pacer_emit(); loop());

end (* Control *)

val _ = Control.start();
