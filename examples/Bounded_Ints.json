[
  {
    "name": "Producer_Consumer",
    "kind": "AadlPackage",
    "public": {
      "with": [
        "Base_Types",
        "CASE_Properties",
        "CASE_Model_Transformations"
      ],
      "components": [
        {
          "name": "Producer_Consumer::CASE_Filter",
          "localName": "CASE_Filter",
          "kind": "ComponentType",
          "category": "thread",
          "features": [
            {
              "name": "filter_in",
              "kind": "EventDataPort",
              "classifier": "Producer_Consumer::Coordinate.Impl",
              "direction": "in"
            },
            {
              "name": "filter_out",
              "kind": "EventDataPort",
              "classifier": "Producer_Consumer::Coordinate.Impl",
              "direction": "out"
            }
          ],
          "properties": [
            {
              "name": "CASE_Properties::COMP_TYPE",
              "kind": "PropertyAssociation",
              "value": "FILTER"
            },
            {
              "name": "CASE_Properties::COMP_SPEC",
              "kind": "PropertyAssociation",
              "value": [
                "Req_Filter_LatLong",
                "Req_Filter_Alt"
              ]
            }
          ],
          "annexes": [
            {
              "name": "agree",
              "kind": "AnnexSubclause",
              "parsedAnnexSubclause": {
                "statements": [
                  {
                    "kind": "GuaranteeStatement",
                    "name": "Req_Filter_LatLong",
                    "label": "The Consumer shall only receive well-formed lat-long values",
                    "expr": {
                      "kind": "CallExpr",
                      "function": {
                        "kind": "DoubleDotRef",
                        "packageName": "Producer_Consumer",
                        "name": "WELL_FORMED_LAT_LONG"
                      },
                      "args": [
                        {
                          "kind": "NamedElmExpr",
                          "name": "filter_out"
                        }
                      ]
                    }
                  },
                  {
                    "kind": "GuaranteeStatement",
                    "name": "Req_Filter_Alt",
                    "label": "The Consumer shall only receive well-formed altitude values",
                    "expr": {
                      "kind": "CallExpr",
                      "function": {
                        "kind": "DoubleDotRef",
                        "packageName": "Producer_Consumer",
                        "name": "WELL_FORMED_ALT"
                      },
                      "args": [
                        {
                          "kind": "NamedElmExpr",
                          "name": "filter_out"
                        }
                      ]
                    }
                  }
                ]
              }
            }
          ]
        },
        {
          "packageName": "Producer_Consumer",
          "name": "Producer_Consumer::CASE_Filter.Impl",
          "localName": "CASE_Filter.Impl",
          "kind": "ComponentImplementation",
          "category": "thread",
          "properties": [
            {
              "name": "Thread_Properties::Dispatch_Protocol",
              "kind": "PropertyAssociation",
              "value": "Sporadic"
            },
            {
              "name": "Programming_Properties::Source_Text",
              "kind": "PropertyAssociation",
              "value": [
                "CASE_Filter.c"
              ]
            }
          ]
        },
        {
          "name": "Producer_Consumer::Coordinate",
          "localName": "Coordinate",
          "kind": "ComponentType",
          "category": "data"
        },
        {
          "packageName": "Producer_Consumer",
          "name": "Producer_Consumer::Coordinate.Impl",
          "localName": "Coordinate.Impl",
          "kind": "ComponentImplementation",
          "category": "data",
          "subcomponents": [
            {
              "name": "latitude",
              "kind": "Subcomponent",
              "category": "data",
              "classifier": "Base_Types::Integer_32"
            },
            {
              "name": "longitude",
              "kind": "Subcomponent",
              "category": "data",
              "classifier": "Base_Types::Integer_32"
            },
            {
              "name": "altitude",
              "kind": "Subcomponent",
              "category": "data",
              "classifier": "Base_Types::Integer_32"
            }
          ]
        },
        {
          "name": "Producer_Consumer::Producer",
          "localName": "Producer",
          "kind": "ComponentType",
          "category": "thread",
          "features": [
            {
              "name": "trigger",
              "kind": "EventDataPort",
              "classifier": "Base_Types::Integer_32",
              "direction": "in"
            },
            {
              "name": "msg_out",
              "kind": "EventDataPort",
              "classifier": "Producer_Consumer::Coordinate.Impl",
              "direction": "out"
            }
          ]
        },
        {
          "packageName": "Producer_Consumer",
          "name": "Producer_Consumer::Producer.Impl",
          "localName": "Producer.Impl",
          "kind": "ComponentImplementation",
          "category": "thread",
          "properties": [
            {
              "name": "Thread_Properties::Dispatch_Protocol",
              "kind": "PropertyAssociation",
              "value": "Sporadic"
            },
            {
              "name": "Programming_Properties::Source_Text",
              "kind": "PropertyAssociation",
              "value": [
                "Producer.c"
              ]
            }
          ]
        },
        {
          "name": "Producer_Consumer::Consumer",
          "localName": "Consumer",
          "kind": "ComponentType",
          "category": "thread",
          "features": [
            {
              "name": "msg_in",
              "kind": "EventDataPort",
              "classifier": "Producer_Consumer::Coordinate.Impl",
              "direction": "in"
            },
            {
              "name": "status",
              "kind": "EventDataPort",
              "classifier": "Base_Types::Boolean",
              "direction": "out"
            }
          ],
          "annexes": [
            {
              "name": "agree",
              "kind": "AnnexSubclause",
              "parsedAnnexSubclause": {
                "statements": [
                  {
                    "kind": "AssumeStatement",
                    "name": "Req_Wellformed_LatLong",
                    "label": "The Consumer shall only receive well-formed lat-long values",
                    "expr": {
                      "kind": "CallExpr",
                      "function": {
                        "kind": "DoubleDotRef",
                        "packageName": "Producer_Consumer",
                        "name": "WELL_FORMED_LAT_LONG"
                      },
                      "args": [
                        {
                          "kind": "NamedElmExpr",
                          "name": "msg_in"
                        }
                      ]
                    }
                  },
                  {
                    "kind": "AssumeStatement",
                    "name": "Req_Wellformed_Alt",
                    "label": "The Consumer shall only receive well-formed alt values",
                    "expr": {
                      "kind": "CallExpr",
                      "function": {
                        "kind": "DoubleDotRef",
                        "packageName": "Producer_Consumer",
                        "name": "WELL_FORMED_ALT"
                      },
                      "args": [
                        {
                          "kind": "NamedElmExpr",
                          "name": "msg_in"
                        }
                      ]
                    }
                  },
                  {
                    "kind": "GuaranteeStatement",
                    "label": "Consumer status shall never be false",
                    "expr": {
                      "kind": "NamedElmExpr",
                      "name": "status"
                    }
                  }
                ]
              }
            }
          ]
        },
        {
          "packageName": "Producer_Consumer",
          "name": "Producer_Consumer::Consumer.Impl",
          "localName": "Consumer.Impl",
          "kind": "ComponentImplementation",
          "category": "thread",
          "properties": [
            {
              "name": "Thread_Properties::Dispatch_Protocol",
              "kind": "PropertyAssociation",
              "value": "Sporadic"
            },
            {
              "name": "Programming_Properties::Source_Text",
              "kind": "PropertyAssociation",
              "value": [
                "Consumer.c"
              ]
            }
          ]
        },
        {
          "name": "Producer_Consumer::SW",
          "localName": "SW",
          "kind": "ComponentType",
          "category": "process",
          "features": [
            {
              "name": "input",
              "kind": "EventDataPort",
              "classifier": "Base_Types::Integer_32",
              "direction": "in"
            },
            {
              "name": "output",
              "kind": "EventDataPort",
              "classifier": "Base_Types::Boolean",
              "direction": "out"
            }
          ],
          "annexes": [
            {
              "name": "agree",
              "kind": "AnnexSubclause",
              "parsedAnnexSubclause": {
                "statements": [
                  {
                    "kind": "GuaranteeStatement",
                    "label": "Consumer status is never false",
                    "expr": {
                      "kind": "NamedElmExpr",
                      "name": "output"
                    }
                  }
                ]
              }
            }
          ]
        },
        {
          "packageName": "Producer_Consumer",
          "name": "Producer_Consumer::SW.Impl",
          "localName": "SW.Impl",
          "kind": "ComponentImplementation",
          "category": "process",
          "subcomponents": [
            {
              "name": "Producer",
              "kind": "Subcomponent",
              "category": "thread",
              "classifier": "Producer_Consumer::Producer.Impl"
            },
            {
              "name": "Consumer",
              "kind": "Subcomponent",
              "category": "thread",
              "classifier": "Producer_Consumer::Consumer.Impl"
            },
            {
              "name": "FLT",
              "kind": "Subcomponent",
              "category": "thread",
              "classifier": "Producer_Consumer::CASE_Filter.Impl"
            }
          ],
          "connections": [
            {
              "name": "c0",
              "kind": "port",
              "source": "input",
              "destination": "Producer.trigger",
              "bidirectional": false
            },
            {
              "name": "c1",
              "kind": "port",
              "source": "Producer.msg_out",
              "destination": "FLT.filter_in",
              "bidirectional": false
            },
            {
              "name": "c3",
              "kind": "port",
              "source": "FLT.filter_out",
              "destination": "Consumer.msg_in",
              "bidirectional": false
            },
            {
              "name": "c2",
              "kind": "port",
              "source": "Consumer.status",
              "destination": "output",
              "bidirectional": false
            }
          ],
          "annexes": [
            {
              "name": "resolute",
              "kind": "AnnexSubclause",
              "sourceText": "{**\r\n\t\t\tprove Req_Wellformed_LatLong(this.Consumer, \\\"Req_Wellformed_LatLong\\\", this.FLT, this.c3, Coordinate.Impl)\r\n\t\t\tprove Req_Wellformed_Alt(this.Consumer, \\\"Req_Wellformed_Alt\\\", this.FLT, this.c3, Coordinate.Impl)\r\n\t\t**}"
            }
          ]
        },
        {
          "name": "Producer_Consumer::Proc",
          "localName": "Proc",
          "kind": "ComponentType",
          "category": "processor"
        },
        {
          "packageName": "Producer_Consumer",
          "name": "Producer_Consumer::Proc.Impl",
          "localName": "Proc.Impl",
          "kind": "ComponentImplementation",
          "category": "processor",
          "properties": [
            {
              "name": "CASE_Properties::OS",
              "kind": "PropertyAssociation",
              "value": "Linux"
            }
          ]
        },
        {
          "name": "Producer_Consumer::Sys",
          "localName": "Sys",
          "kind": "ComponentType",
          "category": "system",
          "features": [
            {
              "name": "input",
              "kind": "EventDataPort",
              "classifier": "Base_Types::Integer_32",
              "direction": "in"
            },
            {
              "name": "output",
              "kind": "EventDataPort",
              "classifier": "Base_Types::Boolean",
              "direction": "out"
            }
          ]
        },
        {
          "packageName": "Producer_Consumer",
          "name": "Producer_Consumer::Sys.Impl",
          "localName": "Sys.Impl",
          "kind": "ComponentImplementation",
          "category": "system",
          "subcomponents": [
            {
              "name": "SW",
              "kind": "Subcomponent",
              "category": "process",
              "classifier": "Producer_Consumer::SW.Impl"
            },
            {
              "name": "PROC",
              "kind": "Subcomponent",
              "category": "processor",
              "classifier": "Producer_Consumer::Proc.Impl"
            }
          ],
          "connections": [
            {
              "name": "c1",
              "kind": "port",
              "source": "input",
              "destination": "SW.input",
              "bidirectional": false
            },
            {
              "name": "c2",
              "kind": "port",
              "source": "SW.output",
              "destination": "output",
              "bidirectional": false
            }
          ],
          "properties": [
            {
              "name": "Deployment_Properties::Actual_Processor_Binding",
              "kind": "PropertyAssociation",
              "value": [
                "PROC"
              ],
              "appliesTo": [
                "SW"
              ]
            }
          ],
          "annexes": [
            {
              "name": "resolute",
              "kind": "AnnexSubclause",
              "sourceText": "{**\r\n\t\t\tcheck CASE_Tools\r\n\t\t**}"
            }
          ]
        }
      ],
      "annexes": [
        {
          "name": "agree",
          "kind": "AnnexLibrary",
          "parsedAnnexLibrary": {
            "statements": [
              {
                "kind": "FnDef",
                "packageName": "Producer_Consumer",
                "name": "WELL_FORMED_LAT_LONG",
                "args": [
                  {
                    "name": "coord",
                    "type": {
                      "kind": "DoubleDotRef",
                      "name": "Coordinate.Impl"
                    }
                  }
                ],
                "type": {
                  "kind": "PrimType",
                  "primType": "bool"
                },
                "expr": {
                  "kind": "BinaryExpr",
                  "left": {
                    "kind": "BinaryExpr",
                    "left": {
                      "kind": "BinaryExpr",
                      "left": {
                        "kind": "BinaryExpr",
                        "left": {
                          "kind": "Selection",
                          "target": {
                            "kind": "NamedElmExpr",
                            "name": "coord"
                          },
                          "field": "latitude"
                        },
                        "op": ">=",
                        "right": {
                          "kind": "UnaryExpr",
                          "operand": {
                            "kind": "IntLitExpr",
                            "value": "90"
                          },
                          "op": "-"
                        }
                      },
                      "op": "and",
                      "right": {
                        "kind": "BinaryExpr",
                        "left": {
                          "kind": "Selection",
                          "target": {
                            "kind": "NamedElmExpr",
                            "name": "coord"
                          },
                          "field": "latitude"
                        },
                        "op": "<=",
                        "right": {
                          "kind": "IntLitExpr",
                          "value": "90"
                        }
                      }
                    },
                    "op": "and",
                    "right": {
                      "kind": "BinaryExpr",
                      "left": {
                        "kind": "Selection",
                        "target": {
                          "kind": "NamedElmExpr",
                          "name": "coord"
                        },
                        "field": "longitude"
                      },
                      "op": ">=",
                      "right": {
                        "kind": "UnaryExpr",
                        "operand": {
                          "kind": "IntLitExpr",
                          "value": "180"
                        },
                        "op": "-"
                      }
                    }
                  },
                  "op": "and",
                  "right": {
                    "kind": "BinaryExpr",
                    "left": {
                      "kind": "Selection",
                      "target": {
                        "kind": "NamedElmExpr",
                        "name": "coord"
                      },
                      "field": "longitude"
                    },
                    "op": "<=",
                    "right": {
                      "kind": "IntLitExpr",
                      "value": "180"
                    }
                  }
                }
              },
              {
                "kind": "FnDef",
                "packageName": "Producer_Consumer",
                "name": "WELL_FORMED_ALT",
                "args": [
                  {
                    "name": "coord",
                    "type": {
                      "kind": "DoubleDotRef",
                      "name": "Coordinate.Impl"
                    }
                  }
                ],
                "type": {
                  "kind": "PrimType",
                  "primType": "bool"
                },
                "expr": {
                  "kind": "BinaryExpr",
                  "left": {
                    "kind": "BinaryExpr",
                    "left": {
                      "kind": "Selection",
                      "target": {
                        "kind": "NamedElmExpr",
                        "name": "coord"
                      },
                      "field": "altitude"
                    },
                    "op": ">=",
                    "right": {
                      "kind": "IntLitExpr",
                      "value": "0"
                    }
                  },
                  "op": "and",
                  "right": {
                    "kind": "BinaryExpr",
                    "left": {
                      "kind": "Selection",
                      "target": {
                        "kind": "NamedElmExpr",
                        "name": "coord"
                      },
                      "field": "altitude"
                    },
                    "op": "<=",
                    "right": {
                      "kind": "IntLitExpr",
                      "value": "15000"
                    }
                  }
                }
              }
            ]
          }
        }
      ]
    }
  },
  {
    "name": "Base_Types",
    "kind": "AadlPackage",
    "public": {
      "with": [
        "Data_Model"
      ],
      "components": [
        {
          "name": "Base_Types::Boolean",
          "localName": "Boolean",
          "kind": "ComponentType",
          "category": "data",
          "properties": [
            {
              "name": "Data_Model::Data_Representation",
              "kind": "PropertyAssociation",
              "value": "Boolean"
            }
          ]
        },
        {
          "name": "Base_Types::Integer",
          "localName": "Integer",
          "kind": "ComponentType",
          "category": "data",
          "properties": [
            {
              "name": "Data_Model::Data_Representation",
              "kind": "PropertyAssociation",
              "value": "Integer"
            }
          ]
        },
        {
          "name": "Base_Types::Integer_8",
          "localName": "Integer_8",
          "kind": "ComponentType",
          "category": "data",
          "extends": "Base_Types::Integer",
          "properties": [
            {
              "name": "Data_Model::Number_Representation",
              "kind": "PropertyAssociation",
              "value": "Signed"
            },
            {
              "name": "Memory_Properties::Data_Size",
              "kind": "PropertyAssociation",
              "value": 1
            }
          ]
        },
        {
          "name": "Base_Types::Integer_16",
          "localName": "Integer_16",
          "kind": "ComponentType",
          "category": "data",
          "extends": "Base_Types::Integer",
          "properties": [
            {
              "name": "Data_Model::Number_Representation",
              "kind": "PropertyAssociation",
              "value": "Signed"
            },
            {
              "name": "Memory_Properties::Data_Size",
              "kind": "PropertyAssociation",
              "value": 2
            }
          ]
        },
        {
          "name": "Base_Types::Integer_32",
          "localName": "Integer_32",
          "kind": "ComponentType",
          "category": "data",
          "extends": "Base_Types::Integer",
          "properties": [
            {
              "name": "Data_Model::Number_Representation",
              "kind": "PropertyAssociation",
              "value": "Signed"
            },
            {
              "name": "Memory_Properties::Data_Size",
              "kind": "PropertyAssociation",
              "value": 4
            }
          ]
        },
        {
          "name": "Base_Types::Integer_64",
          "localName": "Integer_64",
          "kind": "ComponentType",
          "category": "data",
          "extends": "Base_Types::Integer",
          "properties": [
            {
              "name": "Data_Model::Number_Representation",
              "kind": "PropertyAssociation",
              "value": "Signed"
            },
            {
              "name": "Memory_Properties::Data_Size",
              "kind": "PropertyAssociation",
              "value": 8
            }
          ]
        },
        {
          "name": "Base_Types::Unsigned_8",
          "localName": "Unsigned_8",
          "kind": "ComponentType",
          "category": "data",
          "extends": "Base_Types::Integer",
          "properties": [
            {
              "name": "Data_Model::Number_Representation",
              "kind": "PropertyAssociation",
              "value": "Unsigned"
            },
            {
              "name": "Memory_Properties::Data_Size",
              "kind": "PropertyAssociation",
              "value": 1
            }
          ]
        },
        {
          "name": "Base_Types::Unsigned_16",
          "localName": "Unsigned_16",
          "kind": "ComponentType",
          "category": "data",
          "extends": "Base_Types::Integer",
          "properties": [
            {
              "name": "Data_Model::Number_Representation",
              "kind": "PropertyAssociation",
              "value": "Unsigned"
            },
            {
              "name": "Memory_Properties::Data_Size",
              "kind": "PropertyAssociation",
              "value": 2
            }
          ]
        },
        {
          "name": "Base_Types::Unsigned_32",
          "localName": "Unsigned_32",
          "kind": "ComponentType",
          "category": "data",
          "extends": "Base_Types::Integer",
          "properties": [
            {
              "name": "Data_Model::Number_Representation",
              "kind": "PropertyAssociation",
              "value": "Unsigned"
            },
            {
              "name": "Memory_Properties::Data_Size",
              "kind": "PropertyAssociation",
              "value": 4
            }
          ]
        },
        {
          "name": "Base_Types::Unsigned_64",
          "localName": "Unsigned_64",
          "kind": "ComponentType",
          "category": "data",
          "extends": "Base_Types::Integer",
          "properties": [
            {
              "name": "Data_Model::Number_Representation",
              "kind": "PropertyAssociation",
              "value": "Unsigned"
            },
            {
              "name": "Memory_Properties::Data_Size",
              "kind": "PropertyAssociation",
              "value": 8
            }
          ]
        },
        {
          "name": "Base_Types::Natural",
          "localName": "Natural",
          "kind": "ComponentType",
          "category": "data",
          "extends": "Base_Types::Integer",
          "properties": [
            {
              "name": "Data_Model::Integer_Range",
              "kind": "PropertyAssociation",
              "value": {
                "kind": "RangeValue",
                "min": 0,
                "max": {
                  "kind": "PropertyConstant",
                  "name": "Max_Target_Integer"
                }
              }
            }
          ]
        },
        {
          "name": "Base_Types::Float",
          "localName": "Float",
          "kind": "ComponentType",
          "category": "data",
          "properties": [
            {
              "name": "Data_Model::Data_Representation",
              "kind": "PropertyAssociation",
              "value": "Float"
            }
          ]
        },
        {
          "name": "Base_Types::Float_32",
          "localName": "Float_32",
          "kind": "ComponentType",
          "category": "data",
          "extends": "Base_Types::Float",
          "properties": [
            {
              "name": "Data_Model::IEEE754_Precision",
              "kind": "PropertyAssociation",
              "value": "Simple"
            },
            {
              "name": "Memory_Properties::Data_Size",
              "kind": "PropertyAssociation",
              "value": 4
            }
          ]
        },
        {
          "name": "Base_Types::Float_64",
          "localName": "Float_64",
          "kind": "ComponentType",
          "category": "data",
          "extends": "Base_Types::Float",
          "properties": [
            {
              "name": "Data_Model::IEEE754_Precision",
              "kind": "PropertyAssociation",
              "value": "Double"
            },
            {
              "name": "Memory_Properties::Data_Size",
              "kind": "PropertyAssociation",
              "value": 8
            }
          ]
        },
        {
          "name": "Base_Types::Character",
          "localName": "Character",
          "kind": "ComponentType",
          "category": "data",
          "properties": [
            {
              "name": "Data_Model::Data_Representation",
              "kind": "PropertyAssociation",
              "value": "Character"
            }
          ]
        },
        {
          "name": "Base_Types::String",
          "localName": "String",
          "kind": "ComponentType",
          "category": "data",
          "properties": [
            {
              "name": "Data_Model::Data_Representation",
              "kind": "PropertyAssociation",
              "value": "String"
            }
          ]
        }
      ]
    }
  },
  {
    "name": "Data_Model",
    "kind": "PropertySet",
    "properties": [
      {
        "name": "Data_Model::Base_Type",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "ListType",
          "propertyType": {
            "kind": "ClassifierType",
            "classifiers": [
              "data"
            ]
          }
        },
        "appliesTo": [
          "data",
          "feature"
        ]
      },
      {
        "name": "Data_Model::Code_Set",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "AadlInteger"
        },
        "appliesTo": [
          "data",
          "feature"
        ]
      },
      {
        "name": "Data_Model::Data_Digits",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "AadlInteger"
        },
        "appliesTo": [
          "data",
          "feature"
        ]
      },
      {
        "name": "Data_Model::Data_Scale",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "AadlInteger"
        },
        "appliesTo": [
          "data",
          "feature"
        ]
      },
      {
        "name": "Data_Model::Data_Representation",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "EnumerationType",
          "values": [
            "Array",
            "Boolean",
            "Character",
            "Enum",
            "Float",
            "Fixed",
            "Integer",
            "String",
            "Struct",
            "Union"
          ]
        },
        "appliesTo": [
          "data",
          "feature"
        ]
      },
      {
        "name": "Data_Model::MyDimension",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "AadlInteger"
        },
        "appliesTo": [
          "data",
          "feature"
        ]
      },
      {
        "name": "Data_Model::Dimension",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "ListType",
          "propertyType": {
            "kind": "AadlInteger"
          }
        },
        "appliesTo": [
          "data",
          "data port",
          "event data port",
          "data access"
        ]
      },
      {
        "name": "Data_Model::Element_Names",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "ListType",
          "propertyType": {
            "kind": "AadlString"
          }
        },
        "appliesTo": [
          "data",
          "feature"
        ]
      },
      {
        "name": "Data_Model::Enumerators",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "ListType",
          "propertyType": {
            "kind": "AadlString"
          }
        },
        "appliesTo": [
          "data",
          "feature"
        ]
      },
      {
        "name": "Data_Model::IEEE754_Precision",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "EnumerationType",
          "values": [
            "Simple",
            "Double"
          ]
        },
        "appliesTo": [
          "data",
          "feature"
        ]
      },
      {
        "name": "Data_Model::Initial_Value",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "ListType",
          "propertyType": {
            "kind": "AadlString"
          }
        },
        "appliesTo": [
          "data",
          "feature"
        ]
      },
      {
        "name": "Data_Model::Integer_Range",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "RangeType",
          "numberType": {
            "kind": "AadlInteger"
          }
        },
        "appliesTo": [
          "data",
          "feature"
        ]
      },
      {
        "name": "Data_Model::Measurement_Unit",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "AadlString"
        },
        "appliesTo": [
          "data",
          "feature"
        ]
      },
      {
        "name": "Data_Model::Number_Representation",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "EnumerationType",
          "values": [
            "Signed",
            "Unsigned"
          ]
        },
        "appliesTo": [
          "data",
          "feature"
        ]
      },
      {
        "name": "Data_Model::Real_Range",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "RangeType",
          "numberType": {
            "kind": "AadlReal"
          }
        },
        "appliesTo": [
          "data",
          "feature"
        ]
      },
      {
        "name": "Data_Model::Representation",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "ListType",
          "propertyType": {
            "kind": "AadlString"
          }
        },
        "appliesTo": [
          "data",
          "feature"
        ]
      }
    ]
  },
  {
    "name": "CASE_Properties",
    "kind": "PropertySet",
    "properties": [
      {
        "name": "CASE_Properties::COMP_TYPE",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "EnumerationType",
          "values": [
            "FILTER",
            "ATTESTATION",
            "MONITOR",
            "ISOLATOR",
            "COMM_DRIVER",
            "SWITCH",
            "SAFETY_CONTROLLER"
          ]
        },
        "appliesTo": [
          "system",
          "process",
          "thread",
          "device",
          "abstract",
          "virtual processor"
        ]
      },
      {
        "name": "CASE_Properties::COMP_IMPL",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "AadlString"
        },
        "appliesTo": [
          "system",
          "process",
          "thread",
          "abstract"
        ]
      },
      {
        "name": "CASE_Properties::COMP_SPEC",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "ListType",
          "propertyType": {
            "kind": "AadlString"
          }
        },
        "appliesTo": [
          "system",
          "process",
          "thread",
          "abstract"
        ]
      },
      {
        "name": "CASE_Properties::CACHE_TIMEOUT",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "AadlInteger"
        },
        "appliesTo": [
          "system",
          "process",
          "thread",
          "device",
          "abstract"
        ]
      },
      {
        "name": "CASE_Properties::CACHE_SIZE",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "AadlInteger"
        },
        "appliesTo": [
          "system",
          "process",
          "thread",
          "device",
          "abstract"
        ]
      },
      {
        "name": "CASE_Properties::COMM_MODALITY",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "EnumerationType",
          "values": [
            "RF",
            "WIFI",
            "WIRED_ETHERNET",
            "SERIAL",
            "BT"
          ]
        },
        "appliesTo": [
          "bus"
        ]
      },
      {
        "name": "CASE_Properties::OS",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "AadlString"
        },
        "appliesTo": [
          "processor",
          "virtual processor"
        ]
      },
      {
        "name": "CASE_Properties::Element_Zeroized",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "RecordType",
          "fields": [
            {
              "name": "Holdup_Required",
              "propertyType": {
                "kind": "AADL_Project::Time"
              }
            },
            {
              "name": "Zeroize_Pattern",
              "propertyType": {
                "kind": "CASE_Properties::Zeroize_Pattern_Type"
              }
            },
            {
              "name": "Implemented",
              "propertyType": {
                "kind": "AadlBoolean"
              }
            }
          ]
        },
        "appliesTo": [
          "memory",
          "system",
          "processor",
          "device"
        ]
      },
      {
        "name": "CASE_Properties::BOUNDARY",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "ListType",
          "propertyType": {
            "kind": "EnumerationType",
            "values": [
              "TRUSTED",
              "SECURE",
              "PHYSICAL",
              "UNCONTROLLED"
            ]
          }
        },
        "appliesTo": [
          "system",
          "process",
          "thread",
          "thread group",
          "device",
          "bus",
          "feature",
          "connection",
          "memory",
          "abstract"
        ]
      },
      {
        "name": "CASE_Properties::TRUST_BOUNDARY",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "AadlBoolean"
        },
        "appliesTo": [
          "bus",
          "feature",
          "connection",
          "memory"
        ]
      },
      {
        "name": "CASE_Properties::SECURITY_PERIMETER",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "AadlBoolean"
        },
        "appliesTo": [
          "bus",
          "feature",
          "connection"
        ]
      },
      {
        "name": "CASE_Properties::CONFIDENTIALITY",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "EnumerationType",
          "values": [
            "HIGH",
            "MEDIUM",
            "LOW"
          ]
        },
        "appliesTo": [
          "system",
          "process",
          "thread",
          "device",
          "abstract",
          "virtual processor"
        ]
      },
      {
        "name": "CASE_Properties::INTEGRITY",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "EnumerationType",
          "values": [
            "HIGH",
            "MEDIUM",
            "LOW"
          ]
        },
        "appliesTo": [
          "system",
          "process",
          "thread",
          "device",
          "abstract",
          "virtual processor"
        ]
      },
      {
        "name": "CASE_Properties::AVAILABILITY",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "EnumerationType",
          "values": [
            "HIGH",
            "MEDIUM",
            "LOW"
          ]
        },
        "appliesTo": [
          "system",
          "process",
          "thread",
          "device",
          "abstract",
          "virtual processor"
        ]
      },
      {
        "name": "CASE_Properties::Asset_List",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "ListType",
          "propertyType": "CASE_Properties::Asset_Record_Type"
        },
        "appliesTo": [
          "system",
          "device",
          "process",
          "bus"
        ]
      },
      {
        "name": "CASE_Properties::Asset_Description",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "RecordType",
          "fields": [
            {
              "name": "Asset",
              "propertyType": {
                "kind": "ReferenceType",
                "references": [
                  "system",
                  "device",
                  "process",
                  "bus",
                  "processor",
                  "memory"
                ]
              }
            },
            {
              "name": "Asset_Name",
              "propertyType": {
                "kind": "AadlString"
              }
            },
            {
              "name": "Protection_Level",
              "propertyType": {
                "kind": "CASE_Properties::Protection_Level_Type"
              }
            },
            {
              "name": "Protection",
              "propertyType": {
                "kind": "CASE_Properties::Protection_Type"
              }
            },
            {
              "name": "Protection_Tactic",
              "propertyType": {
                "kind": "CASE_Properties::Protection_Tactic_Type"
              }
            },
            {
              "name": "Classified",
              "propertyType": {
                "kind": "AadlBoolean"
              }
            }
          ]
        },
        "appliesTo": [
          "system",
          "device",
          "process",
          "bus"
        ]
      },
      {
        "name": "CASE_Properties::Dependencies",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "RecordType",
          "fields": [
            {
              "name": "Data_Handling",
              "propertyType": {
                "kind": "CASE_Properties::Data_Classification_Type"
              }
            },
            {
              "name": "Classified_Processing",
              "propertyType": {
                "kind": "AadlBoolean"
              }
            }
          ]
        },
        "appliesTo": [
          "process",
          "thread"
        ]
      },
      {
        "name": "CASE_Properties::STPA_Flow_Description",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "RecordType",
          "fields": [
            {
              "name": "STPA_Flow_Ref",
              "propertyType": {
                "kind": "ReferenceType",
                "references": [
                  "flow",
                  "end to end flow"
                ]
              }
            },
            {
              "name": "STPA_Type",
              "propertyType": {
                "kind": "CASE_Properties::STPA_Flow_Type"
              }
            },
            {
              "name": "STPA_Hazard_Name",
              "propertyType": {
                "kind": "AadlString"
              }
            }
          ]
        },
        "appliesTo": [
          "end to end flow",
          "flow"
        ]
      }
    ],
    "propertyTypes": [
      {
        "name": "CASE_Properties::Zeroize_Pattern_Type",
        "kind": "PropertyType",
        "type": {
          "kind": "EnumerationType",
          "values": [
            "overwrite_zeros",
            "NIST_800_88_clear",
            "NIST_800_88_purge",
            "other"
          ]
        }
      },
      {
        "name": "CASE_Properties::Zeroize_Enabled_Type",
        "kind": "PropertyType",
        "type": {
          "kind": "RecordType",
          "fields": [
            {
              "name": "Holdup_Required",
              "propertyType": {
                "kind": "AADL_Project::Time"
              }
            },
            {
              "name": "Zeroize_Pattern",
              "propertyType": {
                "kind": "CASE_Properties::Zeroize_Pattern_Type"
              }
            },
            {
              "name": "Implemented",
              "propertyType": {
                "kind": "AadlBoolean"
              }
            }
          ]
        }
      },
      {
        "name": "CASE_Properties::Protection_Level_Type",
        "kind": "PropertyType",
        "type": {
          "kind": "EnumerationType",
          "values": [
            "MINIMAL",
            "NOMINAL",
            "ROBUST"
          ]
        }
      },
      {
        "name": "CASE_Properties::Protection_Type",
        "kind": "PropertyType",
        "type": {
          "kind": "EnumerationType",
          "values": [
            "INFOSEC",
            "PHYS_ACCESS",
            "TECHNOLOGY"
          ]
        }
      },
      {
        "name": "CASE_Properties::Protection_Tactic_Type",
        "kind": "PropertyType",
        "type": {
          "kind": "EnumerationType",
          "values": [
            "DESTRUCTIVE",
            "ENCRYPTION",
            "MILS_SEPARATION",
            "MLS_SEPARATION",
            "GUARD",
            "other"
          ]
        }
      },
      {
        "name": "CASE_Properties::Asset_Record_Type",
        "kind": "PropertyType",
        "type": {
          "kind": "RecordType",
          "fields": [
            {
              "name": "Asset",
              "propertyType": {
                "kind": "ReferenceType",
                "references": [
                  "system",
                  "device",
                  "process",
                  "bus",
                  "processor",
                  "memory"
                ]
              }
            },
            {
              "name": "Asset_Name",
              "propertyType": {
                "kind": "AadlString"
              }
            },
            {
              "name": "Protection_Level",
              "propertyType": {
                "kind": "CASE_Properties::Protection_Level_Type"
              }
            },
            {
              "name": "Protection",
              "propertyType": {
                "kind": "CASE_Properties::Protection_Type"
              }
            },
            {
              "name": "Protection_Tactic",
              "propertyType": {
                "kind": "CASE_Properties::Protection_Tactic_Type"
              }
            },
            {
              "name": "Classified",
              "propertyType": {
                "kind": "AadlBoolean"
              }
            }
          ]
        }
      },
      {
        "name": "CASE_Properties::Data_Classification_Type",
        "kind": "PropertyType",
        "type": {
          "kind": "EnumerationType",
          "values": [
            "Top_Secret",
            "Secret",
            "Confidential",
            "FOUO",
            "Time_Sensitive"
          ]
        }
      },
      {
        "name": "CASE_Properties::Dependencies_Type",
        "kind": "PropertyType",
        "type": {
          "kind": "RecordType",
          "fields": [
            {
              "name": "Data_Handling",
              "propertyType": {
                "kind": "CASE_Properties::Data_Classification_Type"
              }
            },
            {
              "name": "Classified_Processing",
              "propertyType": {
                "kind": "AadlBoolean"
              }
            }
          ]
        }
      },
      {
        "name": "CASE_Properties::STPA_Flow_Type",
        "kind": "PropertyType",
        "type": {
          "kind": "EnumerationType",
          "values": [
            "Control_Action",
            "Feedback"
          ]
        }
      },
      {
        "name": "CASE_Properties::STPA_Flow",
        "kind": "PropertyType",
        "type": {
          "kind": "RecordType",
          "fields": [
            {
              "name": "STPA_Flow_Ref",
              "propertyType": {
                "kind": "ReferenceType",
                "references": [
                  "flow",
                  "end to end flow"
                ]
              }
            },
            {
              "name": "STPA_Type",
              "propertyType": {
                "kind": "CASE_Properties::STPA_Flow_Type"
              }
            },
            {
              "name": "STPA_Hazard_Name",
              "propertyType": {
                "kind": "AadlString"
              }
            }
          ]
        }
      }
    ]
  },
  {
    "name": "CASE_Model_Transformations",
    "kind": "AadlPackage",
    "public": {
      "with": [
        "Base_Types",
        "CASE_Properties"
      ],
      "components": [
        {
          "name": "CASE_Model_Transformations::CASE_MsgHeader",
          "localName": "CASE_MsgHeader",
          "kind": "ComponentType",
          "category": "data"
        },
        {
          "packageName": "CASE_Model_Transformations",
          "name": "CASE_Model_Transformations::CASE_MsgHeader.Impl",
          "localName": "CASE_MsgHeader.Impl",
          "kind": "ComponentImplementation",
          "category": "data",
          "subcomponents": [
            {
              "name": "src",
              "kind": "Subcomponent",
              "category": "data",
              "classifier": "Base_Types::Integer_32"
            },
            {
              "name": "dst",
              "kind": "Subcomponent",
              "category": "data",
              "classifier": "Base_Types::Integer_32"
            },
            {
              "name": "trusted",
              "kind": "Subcomponent",
              "category": "data",
              "classifier": "Base_Types::Boolean"
            },
            {
              "name": "HMAC",
              "kind": "Subcomponent",
              "category": "data",
              "classifier": "Base_Types::Boolean"
            }
          ]
        },
        {
          "name": "CASE_Model_Transformations::CASE_RF_Msg",
          "localName": "CASE_RF_Msg",
          "kind": "ComponentType",
          "category": "data"
        },
        {
          "packageName": "CASE_Model_Transformations",
          "name": "CASE_Model_Transformations::CASE_RF_Msg.Impl",
          "localName": "CASE_RF_Msg.Impl",
          "kind": "ComponentImplementation",
          "category": "data",
          "subcomponents": [
            {
              "name": "header",
              "kind": "Subcomponent",
              "category": "data",
              "classifier": "CASE_Model_Transformations::CASE_MsgHeader.Impl"
            },
            {
              "name": "payload",
              "kind": "Subcomponent",
              "category": "data",
              "classifier": null
            }
          ]
        },
        {
          "name": "CASE_Model_Transformations::CASE_UART_Msg",
          "localName": "CASE_UART_Msg",
          "kind": "ComponentType",
          "category": "data"
        },
        {
          "packageName": "CASE_Model_Transformations",
          "name": "CASE_Model_Transformations::CASE_UART_Msg.Impl",
          "localName": "CASE_UART_Msg.Impl",
          "kind": "ComponentImplementation",
          "category": "data",
          "subcomponents": [
            {
              "name": "crc",
              "kind": "Subcomponent",
              "category": "data",
              "classifier": "Base_Types::Boolean"
            },
            {
              "name": "message",
              "kind": "Subcomponent",
              "category": "data",
              "classifier": "Base_Types::String"
            }
          ]
        },
        {
          "name": "CASE_Model_Transformations::CASE_WIFI_Msg",
          "localName": "CASE_WIFI_Msg",
          "kind": "ComponentType",
          "category": "data"
        },
        {
          "packageName": "CASE_Model_Transformations",
          "name": "CASE_Model_Transformations::CASE_WIFI_Msg.Impl",
          "localName": "CASE_WIFI_Msg.Impl",
          "kind": "ComponentImplementation",
          "category": "data",
          "subcomponents": [
            {
              "name": "crc",
              "kind": "Subcomponent",
              "category": "data",
              "classifier": "Base_Types::Boolean"
            },
            {
              "name": "message",
              "kind": "Subcomponent",
              "category": "data",
              "classifier": "Base_Types::String"
            }
          ]
        },
        {
          "name": "CASE_Model_Transformations::CASE_AttestationRequestMsg",
          "localName": "CASE_AttestationRequestMsg",
          "kind": "ComponentType",
          "category": "data"
        },
        {
          "packageName": "CASE_Model_Transformations",
          "name": "CASE_Model_Transformations::CASE_AttestationRequestMsg.Impl",
          "localName": "CASE_AttestationRequestMsg.Impl",
          "kind": "ComponentImplementation",
          "category": "data",
          "subcomponents": [
            {
              "name": "header",
              "kind": "Subcomponent",
              "category": "data",
              "classifier": "CASE_Model_Transformations::CASE_MsgHeader.Impl"
            }
          ]
        },
        {
          "name": "CASE_Model_Transformations::CASE_AttestationResponseMsg",
          "localName": "CASE_AttestationResponseMsg",
          "kind": "ComponentType",
          "category": "data"
        },
        {
          "packageName": "CASE_Model_Transformations",
          "name": "CASE_Model_Transformations::CASE_AttestationResponseMsg.Impl",
          "localName": "CASE_AttestationResponseMsg.Impl",
          "kind": "ComponentImplementation",
          "category": "data",
          "subcomponents": [
            {
              "name": "header",
              "kind": "Subcomponent",
              "category": "data",
              "classifier": "CASE_Model_Transformations::CASE_MsgHeader.Impl"
            },
            {
              "name": "status",
              "kind": "Subcomponent",
              "category": "data",
              "classifier": "Base_Types::Boolean"
            }
          ]
        },
        {
          "name": "CASE_Model_Transformations::CASE_AttestationCacheRecord",
          "localName": "CASE_AttestationCacheRecord",
          "kind": "ComponentType",
          "category": "data"
        },
        {
          "packageName": "CASE_Model_Transformations",
          "name": "CASE_Model_Transformations::CASE_AttestationCacheRecord.Impl",
          "localName": "CASE_AttestationCacheRecord.Impl",
          "kind": "ComponentImplementation",
          "category": "data",
          "subcomponents": [
            {
              "name": "src",
              "kind": "Subcomponent",
              "category": "data",
              "classifier": "Base_Types::Integer_32"
            },
            {
              "name": "trusted",
              "kind": "Subcomponent",
              "category": "data",
              "classifier": "Base_Types::Integer_32"
            },
            {
              "name": "timeout",
              "kind": "Subcomponent",
              "category": "data",
              "classifier": "Base_Types::Integer_32"
            }
          ]
        },
        {
          "name": "CASE_Model_Transformations::CASE_AttestationCache",
          "localName": "CASE_AttestationCache",
          "kind": "ComponentType",
          "category": "data"
        },
        {
          "packageName": "CASE_Model_Transformations",
          "name": "CASE_Model_Transformations::CASE_AttestationCache.Impl",
          "localName": "CASE_AttestationCache.Impl",
          "kind": "ComponentImplementation",
          "category": "data",
          "subcomponents": [
            {
              "name": "src1",
              "kind": "Subcomponent",
              "category": "data",
              "classifier": "CASE_Model_Transformations::CASE_AttestationCacheRecord.Impl"
            },
            {
              "name": "src2",
              "kind": "Subcomponent",
              "category": "data",
              "classifier": "CASE_Model_Transformations::CASE_AttestationCacheRecord.Impl"
            },
            {
              "name": "src3",
              "kind": "Subcomponent",
              "category": "data",
              "classifier": "CASE_Model_Transformations::CASE_AttestationCacheRecord.Impl"
            },
            {
              "name": "src4",
              "kind": "Subcomponent",
              "category": "data",
              "classifier": "CASE_Model_Transformations::CASE_AttestationCacheRecord.Impl"
            },
            {
              "name": "src5",
              "kind": "Subcomponent",
              "category": "data",
              "classifier": "CASE_Model_Transformations::CASE_AttestationCacheRecord.Impl"
            },
            {
              "name": "src6",
              "kind": "Subcomponent",
              "category": "data",
              "classifier": "CASE_Model_Transformations::CASE_AttestationCacheRecord.Impl"
            }
          ]
        }
      ],
      "annexes": [
        {
          "name": "Agree",
          "kind": "AnnexLibrary",
          "parsedAnnexLibrary": {
            "statements": [
              {
                "kind": "ConstStatement",
                "name": "NULL_ID",
                "type": {
                  "kind": "PrimType",
                  "primType": "int"
                },
                "expr": {
                  "kind": "IntLitExpr",
                  "value": "0"
                }
              },
              {
                "kind": "ConstStatement",
                "name": "NULL_HEADER",
                "type": {
                  "kind": "DoubleDotRef",
                  "name": "CASE_MsgHeader.Impl"
                },
                "expr": {
                  "kind": "RecordLitExpr",
                  "recordType": {
                    "kind": "DoubleDotRef",
                    "name": "CASE_MsgHeader.Impl"
                  },
                  "value": {
                    "src": {
                      "kind": "NamedElmExpr",
                      "name": "NULL_ID"
                    },
                    "dst": {
                      "kind": "NamedElmExpr",
                      "name": "NULL_ID"
                    },
                    "trusted": {
                      "kind": "BoolLitExpr",
                      "value": "false"
                    },
                    "HMAC": {
                      "kind": "BoolLitExpr",
                      "value": "false"
                    }
                  }
                }
              },
              {
                "kind": "FnDef",
                "packageName": "CASE_Model_Transformations",
                "name": "NULL_MESSAGE",
                "args": [
                  {
                    "name": "header",
                    "type": {
                      "kind": "DoubleDotRef",
                      "name": "CASE_MsgHeader.Impl"
                    }
                  }
                ],
                "type": {
                  "kind": "PrimType",
                  "primType": "bool"
                },
                "expr": {
                  "kind": "BinaryExpr",
                  "left": {
                    "kind": "NamedElmExpr",
                    "name": "header"
                  },
                  "op": "=",
                  "right": {
                    "kind": "NamedElmExpr",
                    "name": "NULL_HEADER"
                  }
                }
              },
              {
                "kind": "ConstStatement",
                "name": "NULL_MSG_TYPE",
                "type": {
                  "kind": "PrimType",
                  "primType": "int"
                },
                "expr": {
                  "kind": "IntLitExpr",
                  "value": "0"
                }
              },
              {
                "kind": "ConstStatement",
                "name": "AM_REQUEST_MSG_TYPE",
                "type": {
                  "kind": "PrimType",
                  "primType": "int"
                },
                "expr": {
                  "kind": "IntLitExpr",
                  "value": "1"
                }
              },
              {
                "kind": "ConstStatement",
                "name": "AM_RESPONSE_MSG_TYPE",
                "type": {
                  "kind": "PrimType",
                  "primType": "int"
                },
                "expr": {
                  "kind": "IntLitExpr",
                  "value": "2"
                }
              },
              {
                "kind": "ConstStatement",
                "name": "FREE_MSG_TYPE",
                "type": {
                  "kind": "PrimType",
                  "primType": "int"
                },
                "expr": {
                  "kind": "IntLitExpr",
                  "value": "3"
                }
              },
              {
                "kind": "ConstStatement",
                "name": "NULL_AM_REQUEST_MESSAGE",
                "type": {
                  "kind": "DoubleDotRef",
                  "name": "CASE_AttestationRequestMsg.Impl"
                },
                "expr": {
                  "kind": "RecordLitExpr",
                  "recordType": {
                    "kind": "DoubleDotRef",
                    "name": "CASE_AttestationRequestMsg.Impl"
                  },
                  "value": {
                    "header": {
                      "kind": "NamedElmExpr",
                      "name": "NULL_HEADER"
                    }
                  }
                }
              },
              {
                "kind": "ConstStatement",
                "name": "NULL_CACHE",
                "type": {
                  "kind": "DoubleDotRef",
                  "name": "CASE_AttestationCache.Impl"
                },
                "expr": {
                  "kind": "RecordLitExpr",
                  "recordType": {
                    "kind": "DoubleDotRef",
                    "name": "CASE_AttestationCache.Impl"
                  },
                  "value": {
                    "src1": {
                      "kind": "NamedElmExpr",
                      "name": "NULL_RECORD"
                    },
                    "src2": {
                      "kind": "NamedElmExpr",
                      "name": "NULL_RECORD"
                    },
                    "src3": {
                      "kind": "NamedElmExpr",
                      "name": "NULL_RECORD"
                    },
                    "src4": {
                      "kind": "NamedElmExpr",
                      "name": "NULL_RECORD"
                    },
                    "src5": {
                      "kind": "NamedElmExpr",
                      "name": "NULL_RECORD"
                    },
                    "src6": {
                      "kind": "NamedElmExpr",
                      "name": "NULL_RECORD"
                    }
                  }
                }
              },
              {
                "kind": "ConstStatement",
                "name": "NULL_RECORD",
                "type": {
                  "kind": "DoubleDotRef",
                  "name": "CASE_AttestationCacheRecord.Impl"
                },
                "expr": {
                  "kind": "RecordLitExpr",
                  "recordType": {
                    "kind": "DoubleDotRef",
                    "name": "CASE_AttestationCacheRecord.Impl"
                  },
                  "value": {
                    "src": {
                      "kind": "NamedElmExpr",
                      "name": "NULL_ID"
                    },
                    "trusted": {
                      "kind": "NamedElmExpr",
                      "name": "AM_FAIL"
                    },
                    "timeout": {
                      "kind": "IntLitExpr",
                      "value": "0"
                    }
                  }
                }
              },
              {
                "kind": "NodeDef",
                "name": "CACHE",
                "args": [
                  {
                    "name": "new_cache",
                    "type": {
                      "kind": "DoubleDotRef",
                      "name": "CASE_AttestationCache.Impl"
                    }
                  }
                ],
                "returns": [
                  {
                    "name": "cache",
                    "type": {
                      "kind": "DoubleDotRef",
                      "name": "CASE_AttestationCache.Impl"
                    }
                  }
                ],
                "body": [
                  {
                    "kind": "NodeEq",
                    "left": [
                      {
                        "name": "cache",
                        "type": {
                          "kind": "DoubleDotRef",
                          "name": "CASE_AttestationCache.Impl"
                        }
                      }
                    ],
                    "expr": {
                      "kind": "IfThenElseExpr",
                      "if": {
                        "kind": "BinaryExpr",
                        "left": {
                          "kind": "NamedElmExpr",
                          "name": "new_cache"
                        },
                        "op": "=",
                        "right": {
                          "kind": "NamedElmExpr",
                          "name": "NULL_CACHE"
                        }
                      },
                      "then": {
                        "kind": "BinaryExpr",
                        "left": {
                          "kind": "NamedElmExpr",
                          "name": "NULL_CACHE"
                        },
                        "op": "->",
                        "right": {
                          "kind": "PreExpr",
                          "expr": {
                            "kind": "NamedElmExpr",
                            "name": "cache"
                          }
                        }
                      },
                      "else": {
                        "kind": "NamedElmExpr",
                        "name": "new_cache"
                      }
                    }
                  }
                ]
              },
              {
                "kind": "FnDef",
                "packageName": "CASE_Model_Transformations",
                "name": "TRUSTED",
                "args": [
                  {
                    "name": "src",
                    "type": {
                      "kind": "DoubleDotRef",
                      "name": "Integer_32"
                    }
                  }
                ],
                "type": {
                  "kind": "PrimType",
                  "primType": "bool"
                },
                "expr": {
                  "kind": "BinaryExpr",
                  "left": {
                    "kind": "BinaryExpr",
                    "left": {
                      "kind": "CallExpr",
                      "function": {
                        "kind": "DoubleDotRef",
                        "packageName": "CASE_Model_Transformations",
                        "name": "IN_CACHE"
                      },
                      "args": [
                        {
                          "kind": "NamedElmExpr",
                          "name": "src"
                        }
                      ]
                    },
                    "op": "and",
                    "right": {
                      "kind": "CallExpr",
                      "function": {
                        "kind": "DoubleDotRef",
                        "packageName": "CASE_Model_Transformations",
                        "name": "PASS_ATTESTATION"
                      },
                      "args": [
                        {
                          "kind": "NamedElmExpr",
                          "name": "src"
                        }
                      ]
                    }
                  },
                  "op": "and",
                  "right": {
                    "kind": "UnaryExpr",
                    "operand": {
                      "kind": "CallExpr",
                      "function": {
                        "kind": "DoubleDotRef",
                        "packageName": "CASE_Model_Transformations",
                        "name": "IS_STALE"
                      },
                      "args": [
                        {
                          "kind": "NamedElmExpr",
                          "name": "src"
                        }
                      ]
                    },
                    "op": "not"
                  }
                }
              },
              {
                "kind": "ConstStatement",
                "name": "AM_FAIL",
                "type": {
                  "kind": "PrimType",
                  "primType": "int"
                },
                "expr": {
                  "kind": "IntLitExpr",
                  "value": "0"
                }
              },
              {
                "kind": "ConstStatement",
                "name": "AM_PASS",
                "type": {
                  "kind": "PrimType",
                  "primType": "int"
                },
                "expr": {
                  "kind": "IntLitExpr",
                  "value": "1"
                }
              },
              {
                "kind": "ConstStatement",
                "name": "AM_REQUESTING",
                "type": {
                  "kind": "PrimType",
                  "primType": "int"
                },
                "expr": {
                  "kind": "IntLitExpr",
                  "value": "2"
                }
              },
              {
                "kind": "NodeDef",
                "name": "IN_CACHE",
                "args": [
                  {
                    "name": "src",
                    "type": {
                      "kind": "PrimType",
                      "primType": "int"
                    }
                  }
                ],
                "returns": [
                  {
                    "name": "result",
                    "type": {
                      "kind": "PrimType",
                      "primType": "bool"
                    }
                  }
                ],
                "body": [
                  {
                    "kind": "NodeEq",
                    "left": [
                      {
                        "name": "result",
                        "type": {
                          "kind": "PrimType",
                          "primType": "bool"
                        }
                      }
                    ],
                    "expr": {
                      "kind": "UnaryExpr",
                      "operand": {
                        "kind": "BinaryExpr",
                        "left": {
                          "kind": "CallExpr",
                          "function": {
                            "kind": "DoubleDotRef",
                            "packageName": "CASE_Model_Transformations",
                            "name": "GET_RECORD_BY_NAME"
                          },
                          "args": [
                            {
                              "kind": "NamedElmExpr",
                              "name": "src"
                            }
                          ]
                        },
                        "op": "=",
                        "right": {
                          "kind": "NamedElmExpr",
                          "name": "NULL_RECORD"
                        }
                      },
                      "op": "not"
                    }
                  }
                ]
              },
              {
                "kind": "NodeDef",
                "name": "GET_STATUS",
                "args": [
                  {
                    "name": "src",
                    "type": {
                      "kind": "PrimType",
                      "primType": "int"
                    }
                  }
                ],
                "returns": [
                  {
                    "name": "result",
                    "type": {
                      "kind": "PrimType",
                      "primType": "int"
                    }
                  }
                ],
                "body": [
                  {
                    "kind": "NodeEq",
                    "left": [
                      {
                        "name": "record",
                        "type": {
                          "kind": "DoubleDotRef",
                          "name": "CASE_AttestationCacheRecord.Impl"
                        }
                      }
                    ],
                    "expr": {
                      "kind": "CallExpr",
                      "function": {
                        "kind": "DoubleDotRef",
                        "packageName": "CASE_Model_Transformations",
                        "name": "GET_RECORD_BY_NAME"
                      },
                      "args": [
                        {
                          "kind": "NamedElmExpr",
                          "name": "src"
                        }
                      ]
                    }
                  },
                  {
                    "kind": "NodeEq",
                    "left": [
                      {
                        "name": "result",
                        "type": {
                          "kind": "PrimType",
                          "primType": "int"
                        }
                      }
                    ],
                    "expr": {
                      "kind": "Selection",
                      "target": {
                        "kind": "NamedElmExpr",
                        "name": "record"
                      },
                      "field": "trusted"
                    }
                  }
                ]
              },
              {
                "kind": "NodeDef",
                "name": "PASS_ATTESTATION",
                "args": [
                  {
                    "name": "src",
                    "type": {
                      "kind": "PrimType",
                      "primType": "int"
                    }
                  }
                ],
                "returns": [
                  {
                    "name": "result",
                    "type": {
                      "kind": "PrimType",
                      "primType": "bool"
                    }
                  }
                ],
                "body": [
                  {
                    "kind": "NodeEq",
                    "left": [
                      {
                        "name": "record",
                        "type": {
                          "kind": "DoubleDotRef",
                          "name": "CASE_AttestationCacheRecord.Impl"
                        }
                      }
                    ],
                    "expr": {
                      "kind": "CallExpr",
                      "function": {
                        "kind": "DoubleDotRef",
                        "packageName": "CASE_Model_Transformations",
                        "name": "GET_RECORD_BY_NAME"
                      },
                      "args": [
                        {
                          "kind": "NamedElmExpr",
                          "name": "src"
                        }
                      ]
                    }
                  },
                  {
                    "kind": "NodeEq",
                    "left": [
                      {
                        "name": "result",
                        "type": {
                          "kind": "PrimType",
                          "primType": "bool"
                        }
                      }
                    ],
                    "expr": {
                      "kind": "BinaryExpr",
                      "left": {
                        "kind": "Selection",
                        "target": {
                          "kind": "NamedElmExpr",
                          "name": "record"
                        },
                        "field": "trusted"
                      },
                      "op": "=",
                      "right": {
                        "kind": "NamedElmExpr",
                        "name": "AM_PASS"
                      }
                    }
                  }
                ]
              },
              {
                "kind": "NodeDef",
                "name": "IS_STALE",
                "args": [
                  {
                    "name": "src",
                    "type": {
                      "kind": "PrimType",
                      "primType": "int"
                    }
                  }
                ],
                "returns": [
                  {
                    "name": "result",
                    "type": {
                      "kind": "PrimType",
                      "primType": "bool"
                    }
                  }
                ],
                "body": [
                  {
                    "kind": "NodeEq",
                    "left": [
                      {
                        "name": "record",
                        "type": {
                          "kind": "DoubleDotRef",
                          "name": "CASE_AttestationCacheRecord.Impl"
                        }
                      }
                    ],
                    "expr": {
                      "kind": "CallExpr",
                      "function": {
                        "kind": "DoubleDotRef",
                        "packageName": "CASE_Model_Transformations",
                        "name": "GET_RECORD_BY_NAME"
                      },
                      "args": [
                        {
                          "kind": "NamedElmExpr",
                          "name": "src"
                        }
                      ]
                    }
                  },
                  {
                    "kind": "NodeEq",
                    "left": [
                      {
                        "name": "result",
                        "type": {
                          "kind": "PrimType",
                          "primType": "bool"
                        }
                      }
                    ],
                    "expr": {
                      "kind": "BoolLitExpr",
                      "value": "false"
                    }
                  }
                ]
              },
              {
                "kind": "NodeDef",
                "name": "CREATE_RECORD",
                "args": [
                  {
                    "name": "new_src",
                    "type": {
                      "kind": "PrimType",
                      "primType": "int"
                    }
                  },
                  {
                    "name": "new_trusted",
                    "type": {
                      "kind": "PrimType",
                      "primType": "int"
                    }
                  },
                  {
                    "name": "new_timeout",
                    "type": {
                      "kind": "PrimType",
                      "primType": "int"
                    }
                  }
                ],
                "returns": [
                  {
                    "name": "new_record",
                    "type": {
                      "kind": "DoubleDotRef",
                      "name": "CASE_AttestationCacheRecord.Impl"
                    }
                  }
                ],
                "body": [
                  {
                    "kind": "NodeEq",
                    "left": [
                      {
                        "name": "new_record",
                        "type": {
                          "kind": "DoubleDotRef",
                          "name": "CASE_AttestationCacheRecord.Impl"
                        }
                      }
                    ],
                    "expr": {
                      "kind": "RecordLitExpr",
                      "recordType": {
                        "kind": "DoubleDotRef",
                        "name": "CASE_AttestationCacheRecord.Impl"
                      },
                      "value": {
                        "src": {
                          "kind": "NamedElmExpr",
                          "name": "new_src"
                        },
                        "trusted": {
                          "kind": "NamedElmExpr",
                          "name": "new_trusted"
                        },
                        "timeout": {
                          "kind": "NamedElmExpr",
                          "name": "new_timeout"
                        }
                      }
                    }
                  }
                ]
              },
              {
                "kind": "NodeDef",
                "name": "ADD_RECORD",
                "args": [
                  {
                    "name": "src",
                    "type": {
                      "kind": "PrimType",
                      "primType": "int"
                    }
                  },
                  {
                    "name": "trusted",
                    "type": {
                      "kind": "PrimType",
                      "primType": "int"
                    }
                  },
                  {
                    "name": "timeout",
                    "type": {
                      "kind": "PrimType",
                      "primType": "int"
                    }
                  },
                  {
                    "name": "max_idx",
                    "type": {
                      "kind": "PrimType",
                      "primType": "int"
                    }
                  }
                ],
                "returns": [
                  {
                    "name": "success",
                    "type": {
                      "kind": "PrimType",
                      "primType": "bool"
                    }
                  }
                ],
                "body": [
                  {
                    "kind": "NodeEq",
                    "left": [
                      {
                        "name": "free_idx",
                        "type": {
                          "kind": "PrimType",
                          "primType": "int"
                        }
                      }
                    ],
                    "expr": {
                      "kind": "CallExpr",
                      "function": {
                        "kind": "DoubleDotRef",
                        "packageName": "CASE_Model_Transformations",
                        "name": "GET_FREE_IDX"
                      },
                      "args": [
                        {
                          "kind": "NamedElmExpr",
                          "name": "max_idx"
                        }
                      ]
                    }
                  },
                  {
                    "kind": "NodeEq",
                    "left": [
                      {
                        "name": "success",
                        "type": {
                          "kind": "PrimType",
                          "primType": "bool"
                        }
                      }
                    ],
                    "expr": {
                      "kind": "IfThenElseExpr",
                      "if": {
                        "kind": "CallExpr",
                        "function": {
                          "kind": "DoubleDotRef",
                          "packageName": "CASE_Model_Transformations",
                          "name": "IN_CACHE"
                        },
                        "args": [
                          {
                            "kind": "NamedElmExpr",
                            "name": "src"
                          }
                        ]
                      },
                      "then": {
                        "kind": "UnaryExpr",
                        "operand": {
                          "kind": "BinaryExpr",
                          "left": {
                            "kind": "CallExpr",
                            "function": {
                              "kind": "DoubleDotRef",
                              "packageName": "CASE_Model_Transformations",
                              "name": "WRITE_CACHE"
                            },
                            "args": [
                              {
                                "kind": "CallExpr",
                                "function": {
                                  "kind": "DoubleDotRef",
                                  "packageName": "CASE_Model_Transformations",
                                  "name": "GET_IDX_BY_NAME"
                                },
                                "args": [
                                  {
                                    "kind": "NamedElmExpr",
                                    "name": "src"
                                  }
                                ]
                              },
                              {
                                "kind": "CallExpr",
                                "function": {
                                  "kind": "DoubleDotRef",
                                  "packageName": "CASE_Model_Transformations",
                                  "name": "CREATE_RECORD"
                                },
                                "args": [
                                  {
                                    "kind": "NamedElmExpr",
                                    "name": "src"
                                  },
                                  {
                                    "kind": "NamedElmExpr",
                                    "name": "trusted"
                                  },
                                  {
                                    "kind": "NamedElmExpr",
                                    "name": "timeout"
                                  }
                                ]
                              }
                            ]
                          },
                          "op": "=",
                          "right": {
                            "kind": "NamedElmExpr",
                            "name": "NULL_CACHE"
                          }
                        },
                        "op": "not"
                      },
                      "else": {
                        "kind": "IfThenElseExpr",
                        "if": {
                          "kind": "BinaryExpr",
                          "left": {
                            "kind": "NamedElmExpr",
                            "name": "free_idx"
                          },
                          "op": ">",
                          "right": {
                            "kind": "IntLitExpr",
                            "value": "0"
                          }
                        },
                        "then": {
                          "kind": "UnaryExpr",
                          "operand": {
                            "kind": "BinaryExpr",
                            "left": {
                              "kind": "CallExpr",
                              "function": {
                                "kind": "DoubleDotRef",
                                "packageName": "CASE_Model_Transformations",
                                "name": "WRITE_CACHE"
                              },
                              "args": [
                                {
                                  "kind": "NamedElmExpr",
                                  "name": "free_idx"
                                },
                                {
                                  "kind": "CallExpr",
                                  "function": {
                                    "kind": "DoubleDotRef",
                                    "packageName": "CASE_Model_Transformations",
                                    "name": "CREATE_RECORD"
                                  },
                                  "args": [
                                    {
                                      "kind": "NamedElmExpr",
                                      "name": "src"
                                    },
                                    {
                                      "kind": "NamedElmExpr",
                                      "name": "trusted"
                                    },
                                    {
                                      "kind": "NamedElmExpr",
                                      "name": "timeout"
                                    }
                                  ]
                                }
                              ]
                            },
                            "op": "=",
                            "right": {
                              "kind": "NamedElmExpr",
                              "name": "NULL_CACHE"
                            }
                          },
                          "op": "not"
                        },
                        "else": {
                          "kind": "BoolLitExpr",
                          "value": "false"
                        }
                      }
                    }
                  }
                ]
              },
              {
                "kind": "NodeDef",
                "name": "GET_FREE_IDX",
                "args": [
                  {
                    "name": "max",
                    "type": {
                      "kind": "PrimType",
                      "primType": "int"
                    }
                  }
                ],
                "returns": [
                  {
                    "name": "idx",
                    "type": {
                      "kind": "PrimType",
                      "primType": "int"
                    }
                  }
                ],
                "body": [
                  {
                    "kind": "NodeEq",
                    "left": [
                      {
                        "name": "c",
                        "type": {
                          "kind": "DoubleDotRef",
                          "name": "CASE_AttestationCache.Impl"
                        }
                      }
                    ],
                    "expr": {
                      "kind": "CallExpr",
                      "function": {
                        "kind": "DoubleDotRef",
                        "packageName": "CASE_Model_Transformations",
                        "name": "CACHE"
                      },
                      "args": [
                        {
                          "kind": "NamedElmExpr",
                          "name": "NULL_CACHE"
                        }
                      ]
                    }
                  },
                  {
                    "kind": "NodeEq",
                    "left": [
                      {
                        "name": "idx",
                        "type": {
                          "kind": "PrimType",
                          "primType": "int"
                        }
                      }
                    ],
                    "expr": {
                      "kind": "IfThenElseExpr",
                      "if": {
                        "kind": "BinaryExpr",
                        "left": {
                          "kind": "BinaryExpr",
                          "left": {
                            "kind": "Selection",
                            "target": {
                              "kind": "NamedElmExpr",
                              "name": "c"
                            },
                            "field": "src1"
                          },
                          "op": "=",
                          "right": {
                            "kind": "NamedElmExpr",
                            "name": "NULL_RECORD"
                          }
                        },
                        "op": "and",
                        "right": {
                          "kind": "BinaryExpr",
                          "left": {
                            "kind": "NamedElmExpr",
                            "name": "max"
                          },
                          "op": ">=",
                          "right": {
                            "kind": "IntLitExpr",
                            "value": "1"
                          }
                        }
                      },
                      "then": {
                        "kind": "IntLitExpr",
                        "value": "1"
                      },
                      "else": {
                        "kind": "IfThenElseExpr",
                        "if": {
                          "kind": "BinaryExpr",
                          "left": {
                            "kind": "BinaryExpr",
                            "left": {
                              "kind": "Selection",
                              "target": {
                                "kind": "NamedElmExpr",
                                "name": "c"
                              },
                              "field": "src2"
                            },
                            "op": "=",
                            "right": {
                              "kind": "NamedElmExpr",
                              "name": "NULL_RECORD"
                            }
                          },
                          "op": "and",
                          "right": {
                            "kind": "BinaryExpr",
                            "left": {
                              "kind": "NamedElmExpr",
                              "name": "max"
                            },
                            "op": ">=",
                            "right": {
                              "kind": "IntLitExpr",
                              "value": "2"
                            }
                          }
                        },
                        "then": {
                          "kind": "IntLitExpr",
                          "value": "2"
                        },
                        "else": {
                          "kind": "IfThenElseExpr",
                          "if": {
                            "kind": "BinaryExpr",
                            "left": {
                              "kind": "BinaryExpr",
                              "left": {
                                "kind": "Selection",
                                "target": {
                                  "kind": "NamedElmExpr",
                                  "name": "c"
                                },
                                "field": "src3"
                              },
                              "op": "=",
                              "right": {
                                "kind": "NamedElmExpr",
                                "name": "NULL_RECORD"
                              }
                            },
                            "op": "and",
                            "right": {
                              "kind": "BinaryExpr",
                              "left": {
                                "kind": "NamedElmExpr",
                                "name": "max"
                              },
                              "op": ">=",
                              "right": {
                                "kind": "IntLitExpr",
                                "value": "3"
                              }
                            }
                          },
                          "then": {
                            "kind": "IntLitExpr",
                            "value": "3"
                          },
                          "else": {
                            "kind": "IfThenElseExpr",
                            "if": {
                              "kind": "BinaryExpr",
                              "left": {
                                "kind": "BinaryExpr",
                                "left": {
                                  "kind": "Selection",
                                  "target": {
                                    "kind": "NamedElmExpr",
                                    "name": "c"
                                  },
                                  "field": "src4"
                                },
                                "op": "=",
                                "right": {
                                  "kind": "NamedElmExpr",
                                  "name": "NULL_RECORD"
                                }
                              },
                              "op": "and",
                              "right": {
                                "kind": "BinaryExpr",
                                "left": {
                                  "kind": "NamedElmExpr",
                                  "name": "max"
                                },
                                "op": ">=",
                                "right": {
                                  "kind": "IntLitExpr",
                                  "value": "4"
                                }
                              }
                            },
                            "then": {
                              "kind": "IntLitExpr",
                              "value": "4"
                            },
                            "else": {
                              "kind": "IfThenElseExpr",
                              "if": {
                                "kind": "BinaryExpr",
                                "left": {
                                  "kind": "BinaryExpr",
                                  "left": {
                                    "kind": "Selection",
                                    "target": {
                                      "kind": "NamedElmExpr",
                                      "name": "c"
                                    },
                                    "field": "src5"
                                  },
                                  "op": "=",
                                  "right": {
                                    "kind": "NamedElmExpr",
                                    "name": "NULL_RECORD"
                                  }
                                },
                                "op": "and",
                                "right": {
                                  "kind": "BinaryExpr",
                                  "left": {
                                    "kind": "NamedElmExpr",
                                    "name": "max"
                                  },
                                  "op": ">=",
                                  "right": {
                                    "kind": "IntLitExpr",
                                    "value": "5"
                                  }
                                }
                              },
                              "then": {
                                "kind": "IntLitExpr",
                                "value": "5"
                              },
                              "else": {
                                "kind": "IfThenElseExpr",
                                "if": {
                                  "kind": "BinaryExpr",
                                  "left": {
                                    "kind": "BinaryExpr",
                                    "left": {
                                      "kind": "Selection",
                                      "target": {
                                        "kind": "NamedElmExpr",
                                        "name": "c"
                                      },
                                      "field": "src6"
                                    },
                                    "op": "=",
                                    "right": {
                                      "kind": "NamedElmExpr",
                                      "name": "NULL_RECORD"
                                    }
                                  },
                                  "op": "and",
                                  "right": {
                                    "kind": "BinaryExpr",
                                    "left": {
                                      "kind": "NamedElmExpr",
                                      "name": "max"
                                    },
                                    "op": ">=",
                                    "right": {
                                      "kind": "IntLitExpr",
                                      "value": "6"
                                    }
                                  }
                                },
                                "then": {
                                  "kind": "IntLitExpr",
                                  "value": "6"
                                },
                                "else": {
                                  "kind": "IntLitExpr",
                                  "value": "0"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              },
              {
                "kind": "NodeDef",
                "name": "GET_RECORD_BY_IDX",
                "args": [
                  {
                    "name": "idx",
                    "type": {
                      "kind": "PrimType",
                      "primType": "int"
                    }
                  }
                ],
                "returns": [
                  {
                    "name": "record",
                    "type": {
                      "kind": "DoubleDotRef",
                      "name": "CASE_AttestationCacheRecord.Impl"
                    }
                  }
                ],
                "body": [
                  {
                    "kind": "NodeEq",
                    "left": [
                      {
                        "name": "c",
                        "type": {
                          "kind": "DoubleDotRef",
                          "name": "CASE_AttestationCache.Impl"
                        }
                      }
                    ],
                    "expr": {
                      "kind": "CallExpr",
                      "function": {
                        "kind": "DoubleDotRef",
                        "packageName": "CASE_Model_Transformations",
                        "name": "CACHE"
                      },
                      "args": [
                        {
                          "kind": "NamedElmExpr",
                          "name": "NULL_CACHE"
                        }
                      ]
                    }
                  },
                  {
                    "kind": "NodeEq",
                    "left": [
                      {
                        "name": "record",
                        "type": {
                          "kind": "DoubleDotRef",
                          "name": "CASE_AttestationCacheRecord.Impl"
                        }
                      }
                    ],
                    "expr": {
                      "kind": "IfThenElseExpr",
                      "if": {
                        "kind": "BinaryExpr",
                        "left": {
                          "kind": "NamedElmExpr",
                          "name": "idx"
                        },
                        "op": "=",
                        "right": {
                          "kind": "IntLitExpr",
                          "value": "1"
                        }
                      },
                      "then": {
                        "kind": "Selection",
                        "target": {
                          "kind": "NamedElmExpr",
                          "name": "c"
                        },
                        "field": "src1"
                      },
                      "else": {
                        "kind": "IfThenElseExpr",
                        "if": {
                          "kind": "BinaryExpr",
                          "left": {
                            "kind": "NamedElmExpr",
                            "name": "idx"
                          },
                          "op": "=",
                          "right": {
                            "kind": "IntLitExpr",
                            "value": "2"
                          }
                        },
                        "then": {
                          "kind": "Selection",
                          "target": {
                            "kind": "NamedElmExpr",
                            "name": "c"
                          },
                          "field": "src2"
                        },
                        "else": {
                          "kind": "IfThenElseExpr",
                          "if": {
                            "kind": "BinaryExpr",
                            "left": {
                              "kind": "NamedElmExpr",
                              "name": "idx"
                            },
                            "op": "=",
                            "right": {
                              "kind": "IntLitExpr",
                              "value": "3"
                            }
                          },
                          "then": {
                            "kind": "Selection",
                            "target": {
                              "kind": "NamedElmExpr",
                              "name": "c"
                            },
                            "field": "src3"
                          },
                          "else": {
                            "kind": "IfThenElseExpr",
                            "if": {
                              "kind": "BinaryExpr",
                              "left": {
                                "kind": "NamedElmExpr",
                                "name": "idx"
                              },
                              "op": "=",
                              "right": {
                                "kind": "IntLitExpr",
                                "value": "4"
                              }
                            },
                            "then": {
                              "kind": "Selection",
                              "target": {
                                "kind": "NamedElmExpr",
                                "name": "c"
                              },
                              "field": "src4"
                            },
                            "else": {
                              "kind": "IfThenElseExpr",
                              "if": {
                                "kind": "BinaryExpr",
                                "left": {
                                  "kind": "NamedElmExpr",
                                  "name": "idx"
                                },
                                "op": "=",
                                "right": {
                                  "kind": "IntLitExpr",
                                  "value": "5"
                                }
                              },
                              "then": {
                                "kind": "Selection",
                                "target": {
                                  "kind": "NamedElmExpr",
                                  "name": "c"
                                },
                                "field": "src5"
                              },
                              "else": {
                                "kind": "IfThenElseExpr",
                                "if": {
                                  "kind": "BinaryExpr",
                                  "left": {
                                    "kind": "NamedElmExpr",
                                    "name": "idx"
                                  },
                                  "op": "=",
                                  "right": {
                                    "kind": "IntLitExpr",
                                    "value": "6"
                                  }
                                },
                                "then": {
                                  "kind": "Selection",
                                  "target": {
                                    "kind": "NamedElmExpr",
                                    "name": "c"
                                  },
                                  "field": "src6"
                                },
                                "else": {
                                  "kind": "NamedElmExpr",
                                  "name": "NULL_RECORD"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              },
              {
                "kind": "NodeDef",
                "name": "GET_RECORD_BY_NAME",
                "args": [
                  {
                    "name": "src",
                    "type": {
                      "kind": "PrimType",
                      "primType": "int"
                    }
                  }
                ],
                "returns": [
                  {
                    "name": "record",
                    "type": {
                      "kind": "DoubleDotRef",
                      "name": "CASE_AttestationCacheRecord.Impl"
                    }
                  }
                ],
                "body": [
                  {
                    "kind": "NodeEq",
                    "left": [
                      {
                        "name": "c",
                        "type": {
                          "kind": "DoubleDotRef",
                          "name": "CASE_AttestationCache.Impl"
                        }
                      }
                    ],
                    "expr": {
                      "kind": "CallExpr",
                      "function": {
                        "kind": "DoubleDotRef",
                        "packageName": "CASE_Model_Transformations",
                        "name": "CACHE"
                      },
                      "args": [
                        {
                          "kind": "NamedElmExpr",
                          "name": "NULL_CACHE"
                        }
                      ]
                    }
                  },
                  {
                    "kind": "NodeEq",
                    "left": [
                      {
                        "name": "record",
                        "type": {
                          "kind": "DoubleDotRef",
                          "name": "CASE_AttestationCacheRecord.Impl"
                        }
                      }
                    ],
                    "expr": {
                      "kind": "IfThenElseExpr",
                      "if": {
                        "kind": "BinaryExpr",
                        "left": {
                          "kind": "Selection",
                          "target": {
                            "kind": "Selection",
                            "target": {
                              "kind": "NamedElmExpr",
                              "name": "c"
                            },
                            "field": "src1"
                          },
                          "field": "src"
                        },
                        "op": "=",
                        "right": {
                          "kind": "NamedElmExpr",
                          "name": "src"
                        }
                      },
                      "then": {
                        "kind": "Selection",
                        "target": {
                          "kind": "NamedElmExpr",
                          "name": "c"
                        },
                        "field": "src1"
                      },
                      "else": {
                        "kind": "IfThenElseExpr",
                        "if": {
                          "kind": "BinaryExpr",
                          "left": {
                            "kind": "Selection",
                            "target": {
                              "kind": "Selection",
                              "target": {
                                "kind": "NamedElmExpr",
                                "name": "c"
                              },
                              "field": "src2"
                            },
                            "field": "src"
                          },
                          "op": "=",
                          "right": {
                            "kind": "NamedElmExpr",
                            "name": "src"
                          }
                        },
                        "then": {
                          "kind": "Selection",
                          "target": {
                            "kind": "NamedElmExpr",
                            "name": "c"
                          },
                          "field": "src2"
                        },
                        "else": {
                          "kind": "IfThenElseExpr",
                          "if": {
                            "kind": "BinaryExpr",
                            "left": {
                              "kind": "Selection",
                              "target": {
                                "kind": "Selection",
                                "target": {
                                  "kind": "NamedElmExpr",
                                  "name": "c"
                                },
                                "field": "src3"
                              },
                              "field": "src"
                            },
                            "op": "=",
                            "right": {
                              "kind": "NamedElmExpr",
                              "name": "src"
                            }
                          },
                          "then": {
                            "kind": "Selection",
                            "target": {
                              "kind": "NamedElmExpr",
                              "name": "c"
                            },
                            "field": "src3"
                          },
                          "else": {
                            "kind": "IfThenElseExpr",
                            "if": {
                              "kind": "BinaryExpr",
                              "left": {
                                "kind": "Selection",
                                "target": {
                                  "kind": "Selection",
                                  "target": {
                                    "kind": "NamedElmExpr",
                                    "name": "c"
                                  },
                                  "field": "src4"
                                },
                                "field": "src"
                              },
                              "op": "=",
                              "right": {
                                "kind": "NamedElmExpr",
                                "name": "src"
                              }
                            },
                            "then": {
                              "kind": "Selection",
                              "target": {
                                "kind": "NamedElmExpr",
                                "name": "c"
                              },
                              "field": "src4"
                            },
                            "else": {
                              "kind": "IfThenElseExpr",
                              "if": {
                                "kind": "BinaryExpr",
                                "left": {
                                  "kind": "Selection",
                                  "target": {
                                    "kind": "Selection",
                                    "target": {
                                      "kind": "NamedElmExpr",
                                      "name": "c"
                                    },
                                    "field": "src5"
                                  },
                                  "field": "src"
                                },
                                "op": "=",
                                "right": {
                                  "kind": "NamedElmExpr",
                                  "name": "src"
                                }
                              },
                              "then": {
                                "kind": "Selection",
                                "target": {
                                  "kind": "NamedElmExpr",
                                  "name": "c"
                                },
                                "field": "src5"
                              },
                              "else": {
                                "kind": "IfThenElseExpr",
                                "if": {
                                  "kind": "BinaryExpr",
                                  "left": {
                                    "kind": "Selection",
                                    "target": {
                                      "kind": "Selection",
                                      "target": {
                                        "kind": "NamedElmExpr",
                                        "name": "c"
                                      },
                                      "field": "src6"
                                    },
                                    "field": "src"
                                  },
                                  "op": "=",
                                  "right": {
                                    "kind": "NamedElmExpr",
                                    "name": "src"
                                  }
                                },
                                "then": {
                                  "kind": "Selection",
                                  "target": {
                                    "kind": "NamedElmExpr",
                                    "name": "c"
                                  },
                                  "field": "src6"
                                },
                                "else": {
                                  "kind": "NamedElmExpr",
                                  "name": "NULL_RECORD"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              },
              {
                "kind": "NodeDef",
                "name": "GET_IDX_BY_NAME",
                "args": [
                  {
                    "name": "src",
                    "type": {
                      "kind": "PrimType",
                      "primType": "int"
                    }
                  }
                ],
                "returns": [
                  {
                    "name": "idx",
                    "type": {
                      "kind": "PrimType",
                      "primType": "int"
                    }
                  }
                ],
                "body": [
                  {
                    "kind": "NodeEq",
                    "left": [
                      {
                        "name": "c",
                        "type": {
                          "kind": "DoubleDotRef",
                          "name": "CASE_AttestationCache.Impl"
                        }
                      }
                    ],
                    "expr": {
                      "kind": "CallExpr",
                      "function": {
                        "kind": "DoubleDotRef",
                        "packageName": "CASE_Model_Transformations",
                        "name": "CACHE"
                      },
                      "args": [
                        {
                          "kind": "NamedElmExpr",
                          "name": "NULL_CACHE"
                        }
                      ]
                    }
                  },
                  {
                    "kind": "NodeEq",
                    "left": [
                      {
                        "name": "idx",
                        "type": {
                          "kind": "PrimType",
                          "primType": "int"
                        }
                      }
                    ],
                    "expr": {
                      "kind": "IfThenElseExpr",
                      "if": {
                        "kind": "BinaryExpr",
                        "left": {
                          "kind": "Selection",
                          "target": {
                            "kind": "Selection",
                            "target": {
                              "kind": "NamedElmExpr",
                              "name": "c"
                            },
                            "field": "src1"
                          },
                          "field": "src"
                        },
                        "op": "=",
                        "right": {
                          "kind": "NamedElmExpr",
                          "name": "src"
                        }
                      },
                      "then": {
                        "kind": "IntLitExpr",
                        "value": "1"
                      },
                      "else": {
                        "kind": "IfThenElseExpr",
                        "if": {
                          "kind": "BinaryExpr",
                          "left": {
                            "kind": "Selection",
                            "target": {
                              "kind": "Selection",
                              "target": {
                                "kind": "NamedElmExpr",
                                "name": "c"
                              },
                              "field": "src2"
                            },
                            "field": "src"
                          },
                          "op": "=",
                          "right": {
                            "kind": "NamedElmExpr",
                            "name": "src"
                          }
                        },
                        "then": {
                          "kind": "IntLitExpr",
                          "value": "2"
                        },
                        "else": {
                          "kind": "IfThenElseExpr",
                          "if": {
                            "kind": "BinaryExpr",
                            "left": {
                              "kind": "Selection",
                              "target": {
                                "kind": "Selection",
                                "target": {
                                  "kind": "NamedElmExpr",
                                  "name": "c"
                                },
                                "field": "src3"
                              },
                              "field": "src"
                            },
                            "op": "=",
                            "right": {
                              "kind": "NamedElmExpr",
                              "name": "src"
                            }
                          },
                          "then": {
                            "kind": "IntLitExpr",
                            "value": "3"
                          },
                          "else": {
                            "kind": "IfThenElseExpr",
                            "if": {
                              "kind": "BinaryExpr",
                              "left": {
                                "kind": "Selection",
                                "target": {
                                  "kind": "Selection",
                                  "target": {
                                    "kind": "NamedElmExpr",
                                    "name": "c"
                                  },
                                  "field": "src4"
                                },
                                "field": "src"
                              },
                              "op": "=",
                              "right": {
                                "kind": "NamedElmExpr",
                                "name": "src"
                              }
                            },
                            "then": {
                              "kind": "IntLitExpr",
                              "value": "4"
                            },
                            "else": {
                              "kind": "IfThenElseExpr",
                              "if": {
                                "kind": "BinaryExpr",
                                "left": {
                                  "kind": "Selection",
                                  "target": {
                                    "kind": "Selection",
                                    "target": {
                                      "kind": "NamedElmExpr",
                                      "name": "c"
                                    },
                                    "field": "src5"
                                  },
                                  "field": "src"
                                },
                                "op": "=",
                                "right": {
                                  "kind": "NamedElmExpr",
                                  "name": "src"
                                }
                              },
                              "then": {
                                "kind": "IntLitExpr",
                                "value": "5"
                              },
                              "else": {
                                "kind": "IfThenElseExpr",
                                "if": {
                                  "kind": "BinaryExpr",
                                  "left": {
                                    "kind": "Selection",
                                    "target": {
                                      "kind": "Selection",
                                      "target": {
                                        "kind": "NamedElmExpr",
                                        "name": "c"
                                      },
                                      "field": "src6"
                                    },
                                    "field": "src"
                                  },
                                  "op": "=",
                                  "right": {
                                    "kind": "NamedElmExpr",
                                    "name": "src"
                                  }
                                },
                                "then": {
                                  "kind": "IntLitExpr",
                                  "value": "6"
                                },
                                "else": {
                                  "kind": "IntLitExpr",
                                  "value": "0"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              },
              {
                "kind": "NodeDef",
                "name": "WRITE_CACHE",
                "args": [
                  {
                    "name": "idx",
                    "type": {
                      "kind": "PrimType",
                      "primType": "int"
                    }
                  },
                  {
                    "name": "record",
                    "type": {
                      "kind": "DoubleDotRef",
                      "name": "CASE_AttestationCacheRecord.Impl"
                    }
                  }
                ],
                "returns": [
                  {
                    "name": "new_cache",
                    "type": {
                      "kind": "DoubleDotRef",
                      "name": "CASE_AttestationCache.Impl"
                    }
                  }
                ],
                "body": [
                  {
                    "kind": "NodeEq",
                    "left": [
                      {
                        "name": "new_cache",
                        "type": {
                          "kind": "DoubleDotRef",
                          "name": "CASE_AttestationCache.Impl"
                        }
                      }
                    ],
                    "expr": {
                      "kind": "IfThenElseExpr",
                      "if": {
                        "kind": "BinaryExpr",
                        "left": {
                          "kind": "NamedElmExpr",
                          "name": "idx"
                        },
                        "op": "=",
                        "right": {
                          "kind": "IntLitExpr",
                          "value": "1"
                        }
                      },
                      "then": {
                        "kind": "CallExpr",
                        "function": {
                          "kind": "DoubleDotRef",
                          "packageName": "CASE_Model_Transformations",
                          "name": "CACHE"
                        },
                        "args": [
                          {
                            "kind": "RecordLitExpr",
                            "recordType": {
                              "kind": "DoubleDotRef",
                              "name": "CASE_AttestationCache.Impl"
                            },
                            "value": {
                              "src1": {
                                "kind": "NamedElmExpr",
                                "name": "record"
                              },
                              "src2": {
                                "kind": "CallExpr",
                                "function": {
                                  "kind": "DoubleDotRef",
                                  "packageName": "CASE_Model_Transformations",
                                  "name": "GET_RECORD_BY_IDX"
                                },
                                "args": [
                                  {
                                    "kind": "IntLitExpr",
                                    "value": "2"
                                  }
                                ]
                              },
                              "src3": {
                                "kind": "CallExpr",
                                "function": {
                                  "kind": "DoubleDotRef",
                                  "packageName": "CASE_Model_Transformations",
                                  "name": "GET_RECORD_BY_IDX"
                                },
                                "args": [
                                  {
                                    "kind": "IntLitExpr",
                                    "value": "3"
                                  }
                                ]
                              },
                              "src4": {
                                "kind": "CallExpr",
                                "function": {
                                  "kind": "DoubleDotRef",
                                  "packageName": "CASE_Model_Transformations",
                                  "name": "GET_RECORD_BY_IDX"
                                },
                                "args": [
                                  {
                                    "kind": "IntLitExpr",
                                    "value": "4"
                                  }
                                ]
                              },
                              "src5": {
                                "kind": "CallExpr",
                                "function": {
                                  "kind": "DoubleDotRef",
                                  "packageName": "CASE_Model_Transformations",
                                  "name": "GET_RECORD_BY_IDX"
                                },
                                "args": [
                                  {
                                    "kind": "IntLitExpr",
                                    "value": "5"
                                  }
                                ]
                              },
                              "src6": {
                                "kind": "CallExpr",
                                "function": {
                                  "kind": "DoubleDotRef",
                                  "packageName": "CASE_Model_Transformations",
                                  "name": "GET_RECORD_BY_IDX"
                                },
                                "args": [
                                  {
                                    "kind": "IntLitExpr",
                                    "value": "6"
                                  }
                                ]
                              }
                            }
                          }
                        ]
                      },
                      "else": {
                        "kind": "IfThenElseExpr",
                        "if": {
                          "kind": "BinaryExpr",
                          "left": {
                            "kind": "NamedElmExpr",
                            "name": "idx"
                          },
                          "op": "=",
                          "right": {
                            "kind": "IntLitExpr",
                            "value": "2"
                          }
                        },
                        "then": {
                          "kind": "CallExpr",
                          "function": {
                            "kind": "DoubleDotRef",
                            "packageName": "CASE_Model_Transformations",
                            "name": "CACHE"
                          },
                          "args": [
                            {
                              "kind": "RecordLitExpr",
                              "recordType": {
                                "kind": "DoubleDotRef",
                                "name": "CASE_AttestationCache.Impl"
                              },
                              "value": {
                                "src1": {
                                  "kind": "CallExpr",
                                  "function": {
                                    "kind": "DoubleDotRef",
                                    "packageName": "CASE_Model_Transformations",
                                    "name": "GET_RECORD_BY_IDX"
                                  },
                                  "args": [
                                    {
                                      "kind": "IntLitExpr",
                                      "value": "1"
                                    }
                                  ]
                                },
                                "src2": {
                                  "kind": "NamedElmExpr",
                                  "name": "record"
                                },
                                "src3": {
                                  "kind": "CallExpr",
                                  "function": {
                                    "kind": "DoubleDotRef",
                                    "packageName": "CASE_Model_Transformations",
                                    "name": "GET_RECORD_BY_IDX"
                                  },
                                  "args": [
                                    {
                                      "kind": "IntLitExpr",
                                      "value": "3"
                                    }
                                  ]
                                },
                                "src4": {
                                  "kind": "CallExpr",
                                  "function": {
                                    "kind": "DoubleDotRef",
                                    "packageName": "CASE_Model_Transformations",
                                    "name": "GET_RECORD_BY_IDX"
                                  },
                                  "args": [
                                    {
                                      "kind": "IntLitExpr",
                                      "value": "4"
                                    }
                                  ]
                                },
                                "src5": {
                                  "kind": "CallExpr",
                                  "function": {
                                    "kind": "DoubleDotRef",
                                    "packageName": "CASE_Model_Transformations",
                                    "name": "GET_RECORD_BY_IDX"
                                  },
                                  "args": [
                                    {
                                      "kind": "IntLitExpr",
                                      "value": "5"
                                    }
                                  ]
                                },
                                "src6": {
                                  "kind": "CallExpr",
                                  "function": {
                                    "kind": "DoubleDotRef",
                                    "packageName": "CASE_Model_Transformations",
                                    "name": "GET_RECORD_BY_IDX"
                                  },
                                  "args": [
                                    {
                                      "kind": "IntLitExpr",
                                      "value": "6"
                                    }
                                  ]
                                }
                              }
                            }
                          ]
                        },
                        "else": {
                          "kind": "IfThenElseExpr",
                          "if": {
                            "kind": "BinaryExpr",
                            "left": {
                              "kind": "NamedElmExpr",
                              "name": "idx"
                            },
                            "op": "=",
                            "right": {
                              "kind": "IntLitExpr",
                              "value": "3"
                            }
                          },
                          "then": {
                            "kind": "CallExpr",
                            "function": {
                              "kind": "DoubleDotRef",
                              "packageName": "CASE_Model_Transformations",
                              "name": "CACHE"
                            },
                            "args": [
                              {
                                "kind": "RecordLitExpr",
                                "recordType": {
                                  "kind": "DoubleDotRef",
                                  "name": "CASE_AttestationCache.Impl"
                                },
                                "value": {
                                  "src1": {
                                    "kind": "CallExpr",
                                    "function": {
                                      "kind": "DoubleDotRef",
                                      "packageName": "CASE_Model_Transformations",
                                      "name": "GET_RECORD_BY_IDX"
                                    },
                                    "args": [
                                      {
                                        "kind": "IntLitExpr",
                                        "value": "1"
                                      }
                                    ]
                                  },
                                  "src2": {
                                    "kind": "CallExpr",
                                    "function": {
                                      "kind": "DoubleDotRef",
                                      "packageName": "CASE_Model_Transformations",
                                      "name": "GET_RECORD_BY_IDX"
                                    },
                                    "args": [
                                      {
                                        "kind": "IntLitExpr",
                                        "value": "2"
                                      }
                                    ]
                                  },
                                  "src3": {
                                    "kind": "NamedElmExpr",
                                    "name": "record"
                                  },
                                  "src4": {
                                    "kind": "CallExpr",
                                    "function": {
                                      "kind": "DoubleDotRef",
                                      "packageName": "CASE_Model_Transformations",
                                      "name": "GET_RECORD_BY_IDX"
                                    },
                                    "args": [
                                      {
                                        "kind": "IntLitExpr",
                                        "value": "4"
                                      }
                                    ]
                                  },
                                  "src5": {
                                    "kind": "CallExpr",
                                    "function": {
                                      "kind": "DoubleDotRef",
                                      "packageName": "CASE_Model_Transformations",
                                      "name": "GET_RECORD_BY_IDX"
                                    },
                                    "args": [
                                      {
                                        "kind": "IntLitExpr",
                                        "value": "5"
                                      }
                                    ]
                                  },
                                  "src6": {
                                    "kind": "CallExpr",
                                    "function": {
                                      "kind": "DoubleDotRef",
                                      "packageName": "CASE_Model_Transformations",
                                      "name": "GET_RECORD_BY_IDX"
                                    },
                                    "args": [
                                      {
                                        "kind": "IntLitExpr",
                                        "value": "6"
                                      }
                                    ]
                                  }
                                }
                              }
                            ]
                          },
                          "else": {
                            "kind": "IfThenElseExpr",
                            "if": {
                              "kind": "BinaryExpr",
                              "left": {
                                "kind": "NamedElmExpr",
                                "name": "idx"
                              },
                              "op": "=",
                              "right": {
                                "kind": "IntLitExpr",
                                "value": "4"
                              }
                            },
                            "then": {
                              "kind": "CallExpr",
                              "function": {
                                "kind": "DoubleDotRef",
                                "packageName": "CASE_Model_Transformations",
                                "name": "CACHE"
                              },
                              "args": [
                                {
                                  "kind": "RecordLitExpr",
                                  "recordType": {
                                    "kind": "DoubleDotRef",
                                    "name": "CASE_AttestationCache.Impl"
                                  },
                                  "value": {
                                    "src1": {
                                      "kind": "CallExpr",
                                      "function": {
                                        "kind": "DoubleDotRef",
                                        "packageName": "CASE_Model_Transformations",
                                        "name": "GET_RECORD_BY_IDX"
                                      },
                                      "args": [
                                        {
                                          "kind": "IntLitExpr",
                                          "value": "1"
                                        }
                                      ]
                                    },
                                    "src2": {
                                      "kind": "CallExpr",
                                      "function": {
                                        "kind": "DoubleDotRef",
                                        "packageName": "CASE_Model_Transformations",
                                        "name": "GET_RECORD_BY_IDX"
                                      },
                                      "args": [
                                        {
                                          "kind": "IntLitExpr",
                                          "value": "2"
                                        }
                                      ]
                                    },
                                    "src3": {
                                      "kind": "CallExpr",
                                      "function": {
                                        "kind": "DoubleDotRef",
                                        "packageName": "CASE_Model_Transformations",
                                        "name": "GET_RECORD_BY_IDX"
                                      },
                                      "args": [
                                        {
                                          "kind": "IntLitExpr",
                                          "value": "3"
                                        }
                                      ]
                                    },
                                    "src4": {
                                      "kind": "NamedElmExpr",
                                      "name": "record"
                                    },
                                    "src5": {
                                      "kind": "CallExpr",
                                      "function": {
                                        "kind": "DoubleDotRef",
                                        "packageName": "CASE_Model_Transformations",
                                        "name": "GET_RECORD_BY_IDX"
                                      },
                                      "args": [
                                        {
                                          "kind": "IntLitExpr",
                                          "value": "5"
                                        }
                                      ]
                                    },
                                    "src6": {
                                      "kind": "CallExpr",
                                      "function": {
                                        "kind": "DoubleDotRef",
                                        "packageName": "CASE_Model_Transformations",
                                        "name": "GET_RECORD_BY_IDX"
                                      },
                                      "args": [
                                        {
                                          "kind": "IntLitExpr",
                                          "value": "6"
                                        }
                                      ]
                                    }
                                  }
                                }
                              ]
                            },
                            "else": {
                              "kind": "IfThenElseExpr",
                              "if": {
                                "kind": "BinaryExpr",
                                "left": {
                                  "kind": "NamedElmExpr",
                                  "name": "idx"
                                },
                                "op": "=",
                                "right": {
                                  "kind": "IntLitExpr",
                                  "value": "5"
                                }
                              },
                              "then": {
                                "kind": "CallExpr",
                                "function": {
                                  "kind": "DoubleDotRef",
                                  "packageName": "CASE_Model_Transformations",
                                  "name": "CACHE"
                                },
                                "args": [
                                  {
                                    "kind": "RecordLitExpr",
                                    "recordType": {
                                      "kind": "DoubleDotRef",
                                      "name": "CASE_AttestationCache.Impl"
                                    },
                                    "value": {
                                      "src1": {
                                        "kind": "CallExpr",
                                        "function": {
                                          "kind": "DoubleDotRef",
                                          "packageName": "CASE_Model_Transformations",
                                          "name": "GET_RECORD_BY_IDX"
                                        },
                                        "args": [
                                          {
                                            "kind": "IntLitExpr",
                                            "value": "1"
                                          }
                                        ]
                                      },
                                      "src2": {
                                        "kind": "CallExpr",
                                        "function": {
                                          "kind": "DoubleDotRef",
                                          "packageName": "CASE_Model_Transformations",
                                          "name": "GET_RECORD_BY_IDX"
                                        },
                                        "args": [
                                          {
                                            "kind": "IntLitExpr",
                                            "value": "2"
                                          }
                                        ]
                                      },
                                      "src3": {
                                        "kind": "CallExpr",
                                        "function": {
                                          "kind": "DoubleDotRef",
                                          "packageName": "CASE_Model_Transformations",
                                          "name": "GET_RECORD_BY_IDX"
                                        },
                                        "args": [
                                          {
                                            "kind": "IntLitExpr",
                                            "value": "3"
                                          }
                                        ]
                                      },
                                      "src4": {
                                        "kind": "CallExpr",
                                        "function": {
                                          "kind": "DoubleDotRef",
                                          "packageName": "CASE_Model_Transformations",
                                          "name": "GET_RECORD_BY_IDX"
                                        },
                                        "args": [
                                          {
                                            "kind": "IntLitExpr",
                                            "value": "4"
                                          }
                                        ]
                                      },
                                      "src5": {
                                        "kind": "NamedElmExpr",
                                        "name": "record"
                                      },
                                      "src6": {
                                        "kind": "CallExpr",
                                        "function": {
                                          "kind": "DoubleDotRef",
                                          "packageName": "CASE_Model_Transformations",
                                          "name": "GET_RECORD_BY_IDX"
                                        },
                                        "args": [
                                          {
                                            "kind": "IntLitExpr",
                                            "value": "6"
                                          }
                                        ]
                                      }
                                    }
                                  }
                                ]
                              },
                              "else": {
                                "kind": "IfThenElseExpr",
                                "if": {
                                  "kind": "BinaryExpr",
                                  "left": {
                                    "kind": "NamedElmExpr",
                                    "name": "idx"
                                  },
                                  "op": "=",
                                  "right": {
                                    "kind": "IntLitExpr",
                                    "value": "6"
                                  }
                                },
                                "then": {
                                  "kind": "CallExpr",
                                  "function": {
                                    "kind": "DoubleDotRef",
                                    "packageName": "CASE_Model_Transformations",
                                    "name": "CACHE"
                                  },
                                  "args": [
                                    {
                                      "kind": "RecordLitExpr",
                                      "recordType": {
                                        "kind": "DoubleDotRef",
                                        "name": "CASE_AttestationCache.Impl"
                                      },
                                      "value": {
                                        "src1": {
                                          "kind": "CallExpr",
                                          "function": {
                                            "kind": "DoubleDotRef",
                                            "packageName": "CASE_Model_Transformations",
                                            "name": "GET_RECORD_BY_IDX"
                                          },
                                          "args": [
                                            {
                                              "kind": "IntLitExpr",
                                              "value": "1"
                                            }
                                          ]
                                        },
                                        "src2": {
                                          "kind": "CallExpr",
                                          "function": {
                                            "kind": "DoubleDotRef",
                                            "packageName": "CASE_Model_Transformations",
                                            "name": "GET_RECORD_BY_IDX"
                                          },
                                          "args": [
                                            {
                                              "kind": "IntLitExpr",
                                              "value": "2"
                                            }
                                          ]
                                        },
                                        "src3": {
                                          "kind": "CallExpr",
                                          "function": {
                                            "kind": "DoubleDotRef",
                                            "packageName": "CASE_Model_Transformations",
                                            "name": "GET_RECORD_BY_IDX"
                                          },
                                          "args": [
                                            {
                                              "kind": "IntLitExpr",
                                              "value": "3"
                                            }
                                          ]
                                        },
                                        "src4": {
                                          "kind": "CallExpr",
                                          "function": {
                                            "kind": "DoubleDotRef",
                                            "packageName": "CASE_Model_Transformations",
                                            "name": "GET_RECORD_BY_IDX"
                                          },
                                          "args": [
                                            {
                                              "kind": "IntLitExpr",
                                              "value": "4"
                                            }
                                          ]
                                        },
                                        "src5": {
                                          "kind": "CallExpr",
                                          "function": {
                                            "kind": "DoubleDotRef",
                                            "packageName": "CASE_Model_Transformations",
                                            "name": "GET_RECORD_BY_IDX"
                                          },
                                          "args": [
                                            {
                                              "kind": "IntLitExpr",
                                              "value": "5"
                                            }
                                          ]
                                        },
                                        "src6": {
                                          "kind": "NamedElmExpr",
                                          "name": "record"
                                        }
                                      }
                                    }
                                  ]
                                },
                                "else": {
                                  "kind": "NamedElmExpr",
                                  "name": "NULL_CACHE"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              }
            ]
          }
        },
        {
          "name": "Resolute",
          "kind": "AnnexLibrary",
          "sourceText": "{**\n\t\t\n\t\t---------------------------\n\t\t-- MODEL TRANSFORMATIONS --\n\t\t---------------------------\n\t\t\n\t\t-- Top-level claim for proper insertion of a filter\n\t\tadd_filter(comp_context : component, filter : component, conn : connection, msg_type : data) <=\n\t\t\t** \\\"Filter \\\" filter \\\" is properly added to component \\\" comp_context **\n\t\t\tfilter_exists(filter, comp_context, conn) and filter_not_bypassed(filter, comp_context, msg_type) and filter_implemented(filter)\n\t\t\t\n\t\t-- Top-level claim for proper insertion of attestation manager\n\t\tadd_attestation_manager(comm_driver : component, attestation_manager : component) <=\n\t\t\t** \\\"Attestation Manager added for communications driver \\\" comm_driver **\n\t\t\tattestation_manager_exists(comm_driver, attestation_manager) and attestation_manager_not_bypassed(comm_driver, attestation_manager)\t\t\t\n\t\t\n\t\t-- Top-level claim for proper insertion of an isolator\n\t\tadd_isolator(isolated_components : {component}, isolator : component) <=\n\t\t\t** isolated_components \\\" isolated in VM \\\" isolator **\n\t\t\tisolator_bound_to_processor(isolator) and components_bound_to_vm(isolated_components, isolator) and subcomponents_not_bound_to_other_processors(isolated_components, isolator)\n\t\t\n\t\t-- Top-level claim for proper insertion of a monitor\n\t\tadd_monitor(comp_context : component, monitor : component) <=\n\t\t\t** \\\"Monitor \\\" monitor \\\" inserted on \\\" comp_context **\n\t\t\ttrue\n\t\t\n\t\t-- Top-level claim for proper insertion of a switch\n\t\tadd_switch(comp_context : component) <=\n\t\t\t** \\\"Switch inserted after \\\" comp_context **\n\t\t\ttrue\n\t\n\t\t\t\n\t\t--------------------------\n\t\t-- PROJECT-LEVEL CLAIMS --\n\t\t--------------------------\n\t\t\n\t\taadl_linter() <=\n\t\t\t** \\\"Static model analysis was performed\\\" **\n\t\t\tanalysis(\\\"ToolCheck\\\", \\\"Resolint\\\")\n\t\t\n\t\tlegacy_component_verification(c : component) <=\n\t\t\t** \\\"Implementation of component \\\" c \\\" was verified\\\" **\n\t\t\tanalysis(\\\"ToolCheck\\\", \\\"Ivaldi\\\")\n\t\t\n\t\t----------------\n\t\t-- SUB CLAIMS --\n\t\t----------------\n\t\n\t\t-- This connects to evidence that AGREE was previously run on the current version of the design.\n\t\tagree_prop_checked(c : component, property_id : string) <=\n\t\t\t** \\\"AGREE properties passed\\\" **\n\t\t\tAgreeLib.hasAgreeProperty(c, property_id) and analysis(\\\"AgreeCheck\\\")\t\n\t\t\n\t\t-- Check to see if there is a filter immediately before \n\t\t-- the component on the communication pathway.\n\t\tfilter_exists(filter : component, comp_context : component, conn : connection) <=\n\t\t\t** \\\"A CASE_Filter \\\" filter \\\" is connected to component \\\" comp_context \\\" by connection \\\" conn **\n\t\t\tlet conns : {connection} = {c for (c : connections(comp_context)) | destination_component(c) = comp_context and source_component(c) = filter};\n\t\t\tis_filter(filter) and exists(c : conns) . c = conn\n\t\n\t\t-- Make sure there is no communication pathway that avoids the filter\n\t\tfilter_not_bypassed(filter : component, comp_context : component, msg_type : data) <=\n\t\t\t** \\\"Filter \\\" filter \\\" cannot be bypassed\\\" **\n\t\t\tlet filter_srcs : {component} = get_filter_sources(comp_context, filter, msg_type); \n\t\t\tlet non_filter_srcs : {component} = get_non_filter_sources(comp_context, filter, msg_type); \n\t\t\tlength(intersect(filter_srcs, non_filter_srcs)) = 0\n\t\t\n\t\tget_non_filter_sources(target : component, filter : component, msg_type : data) : {component} = \n\t\t\tlet srcs : {component} = {c for (conn : connections (target)) (c : source_component(conn)) | has_type(conn) and type(conn) = msg_type and not (name(source_component(conn)) = name (filter))}; \n\t\t\trecursive_backwards_reach(srcs)\n\t\t\n\t\tget_filter_sources(target : component, filter : component, msg_type : data) : {component} = \n\t\t\tlet srcs : {component} = {c for (conn : connections(target)) (c : source_component(conn)) | has_type(conn) and type(conn) = msg_type and name(source_component(conn)) = name(filter)};\n\t\t\tprev_reach(srcs)\n\t\t\n\t\trecursive_backwards_reach(curr : {component}) : {component} = \n\t\t\tlet prev : {component} = union(curr, prev_reach(curr)); \n\t\t\tif prev = curr then \n\t\t\t\tcurr\n\t\t\telse \n\t\t\t\trecursive_backwards_reach(prev)\n\t\t\n\t\tprev_reach(curr : {component}) : {component} = \n\t\t\t{y for (x : curr) (y : backwards_reachable_components(x))}\n\t\t\n\t\tbackwards_reachable_components(comp : component) : {component} = \n\t\t\t{c for (conn : connections (comp)) (c : backwards_reachable_components_via_connection(comp, conn))}\n\t\t\n\t\tbackwards_reachable_components_via_connection(comp : component, conn : connection) : {component} = \n\t\t\tif is_port_connection(conn) then \n\t\t\t\tif destination_component(conn) = comp then \n\t\t\t\t\t{source_component(conn)} \n\t\t\t\telse \n\t\t\t\t\t{} \n\t\t\telse \n\t\t\t\t{}\n\t\n\t    -- This provides evidence that the filter was correctly generated for the appropriate os\n\t    -- and that the proof was emitted and checked.\n\t    filter_implemented(filter : component) <=\n\t\t    ** \\\"Filter property implemented\\\" **\n\t\t   implementation_language_assurance(filter) and filter_proof_checked()\n\t\t       \n\t\t-- Checks if the specified component is a filter\n\t\tis_filter(c : component) : bool =\n\t\t\thas_property(c, CASE_Properties::COMP_TYPE) and property(c, CASE_Properties::COMP_TYPE) = \\\"FILTER\\\"\n\t\t\t\n\t\t-- Checks that a proof has been generated showing the filter regular expression\n\t\t-- matches the AGREE contract\n\t\tfilter_proof_checked() <=\n\t\t\t** \\\"Filter proof checked\\\" **\n\t\t\tanalysis(\\\"ToolCheck\\\", \\\"SPLAT\\\")\n\t\t\t\t\t\t\n\t\t-- Evidence that an attestation manager component exists for a given communication driver\n\t\tattestation_manager_exists(comm_driver : component, attestation_manager : component) <=\n\t\t\t** \\\"An attestation manager on \\\" comm_driver \\\" exists\\\" **\n\t\t\t-- check that the attestation manager only has attestation request/response connections to the comm driver\n\t\t\tis_comm_driver(comm_driver) and is_attestation_manager(attestation_manager) and\n\t\t\tforall (conn : connections(attestation_manager)) . \n\t\t\t\t\t(has_type(conn) and name(type(conn)) = \\\"CASE_AttestationRequestMsg.Impl\\\") => destination_component(conn) = comm_driver and\n\t\t\t\t\t(has_type(conn) and name(type(conn)) = \\\"CASE_AttestationResponseMsg.Impl\\\") => source_component(conn) = comm_driver\n\t\t\t\n\t\t-- Evidence that communication from the comm driver cannot bypass attestation manager\n\t\tattestation_manager_not_bypassed(comm_driver : component, attestation_manager : component) <=\n\t\t\t** \\\"Attestation Manager cannot be bypassed\\\" **\n\t\t\t-- all outgoing connections from the comm driver to components inside the \n\t\t\t-- parent of the comm driver connect to the attestation manager\n\t\t\tlet out_conns : {connection} = {conn for (conn : connections(comm_driver)) | source_component(conn) = comm_driver and not (destination_component(conn) = parent(comm_driver))};\n\t\t\tforall(conn : out_conns) . destination_component(conn) = attestation_manager\t\t\n\t\t\t\n\t\t-- This should connect to some evidence that the attestation manager was correctly generated\n\t    -- and that the proof was emitted and checked.\n\t    -- However, this funcionality has not yet been implemented\n\t    attestation_manager_prop_checked() <=\n\t\t    ** \\\"Attestation Manager property implemented by CakeML\\\" **\n\t\t    forall (c : component). is_attestation_manager(c)\n\t\t       => has_property(c, CASE_Properties::COMP_IMPL) and property(c, CASE_Properties::COMP_IMPL) = \\\"CAKEML\\\"\n\t\t       and attestation_manager_proof_checked()\n\t\t       \n\t\t-- Checks that a proof has been generated showing the attestation manager has been implemented correctly\n\t\tattestation_manager_proof_checked() : bool =\n\t\ttrue\n--\t\t\tanalysis(\\\"ToolCheck\\\", \\\"SPLAT\\\")\n\t\t\t\n\t\t-- Checks if the specified component is an attestation manager\n\t\tis_attestation_manager(c : component) : bool =\n\t\t\thas_property(c, CASE_Properties::COMP_TYPE) and property(c, CASE_Properties::COMP_TYPE) = \\\"ATTESTATION\\\"\n\t\n\t\t-- Checks if the specified component is a communications driver\n\t\tis_comm_driver(c : component) : bool =\n\t\t\thas_property(c, CASE_Properties::COMP_TYPE) and property(c, CASE_Properties::COMP_TYPE) = \\\"COMM_DRIVER\\\"\n\t\n\t\t-- Checks if the specified virtual processor is a CASE Isolator and is bound to a processor\n\t\tisolator_bound_to_processor(isolator : component) <=\n\t\t\t** isolator \\\" is bound to a processor\\\" **\n\t\t\tis_isolator(isolator) and exists(p : processor) . is_bound_to(isolator, p)\n\t\t\t\n\t\t-- Checks if specified component is a CASE isolator\n\t\tis_isolator(c : component) : bool =\n\t\t\thas_property(c, CASE_Properties::COMP_TYPE) and property(c, CASE_Properties::COMP_TYPE) = \\\"ISOLATOR\\\"\n\t\t\n\t\t-- Checks that bindings exist between specified isolated components and virtual processor\n\t\tcomponents_bound_to_vm(isolated_components : {component}, isolator : component) <=\n\t\t\t** \\\"Isolated components are bound to virtual processor \\\" isolator **\n\t\t\tforall (c : isolated_components) . check_vm_binding(c, isolator)\n\t\t\t\n\t\t-- Checks that the specified component is bound to the specified virtual processor\n\t\tcheck_vm_binding(c : component, vm : component) <=\n\t\t\t** \\\"Component \\\" c \\\" is bound to virtual processor \\\" vm **\n\t\t\tis_bound_to(c, vm)\n\t\t\n\t\t-- Checks that subcomponents of specified isolated components are not bound to processors other than the \n\t\t-- specified VM\n\t\tsubcomponents_not_bound_to_other_processors(isolated_components : {component}, isolator : component) <=\n\t\t\t** \\\"Subcomponents are not bound to other processors\\\" **\n\t\t\tlet subs : {component} = get_subcomponents(next_subcomponent(isolated_components));\n\t\t\tforall (s : subs) . not exists (i : component) . (is_bound_to(s, i) and not (i = isolator))\n\t\t\t\n\t\t-- Get set of descendants\n\t\tget_subcomponents(curr : {component}) : {component} =\n\t\t\tlet next : {component} = union(curr, next_subcomponent(curr));\n\t\t\tif next = curr then\n\t\t\t\tcurr\n\t\t\telse\n\t\t\t\tget_subcomponents(next)\n\t\t\t\n\t\tnext_subcomponent(curr : {component}) : {component} =\n\t\t\t{y for (x : curr) (y : subcomponents(x))}\n\t\t\t\n\t\timplementation_language_assurance(comp : component) <=\n\t\t\t** comp \\\" implementation is appropriate for OS\\\" **\n\t\t\tis_seL4_component(comp) => (has_property(comp, CASE_Properties::COMP_IMPL) and property(comp, CASE_Properties::COMP_IMPL) = \\\"CakeML\\\")\n\t\t\t\n\t\t-- checks that a component will run on seL4 by checking that the processors it is bound to have the seL4 OS property\n\t\tis_seL4_component(comp : component) : bool =\n\t\t\tlet proc : {component} = {c for (c : component) | (is_processor(c) or is_virtual_processor(c)) and is_bound_to(comp, c)};\n\t\t\t(size(proc) > 0) and forall (p : proc) . (has_property(p, CASE_Properties::OS) and property(p, CASE_Properties::OS) = \\\"seL4\\\")\n\t\t\n\t\t\n\t**}"
        }
      ]
    }
  },
  {
    "name": "Timing_Properties",
    "kind": "PropertySet",
    "properties": [
      {
        "name": "Timing_Properties::Activate_Deadline",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "AadlInteger"
        },
        "appliesTo": [
          "thread"
        ]
      },
      {
        "name": "Timing_Properties::Activate_Execution_Time",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "RangeType",
          "numberType": {
            "kind": "AadlInteger"
          }
        },
        "appliesTo": [
          "thread"
        ]
      },
      {
        "name": "Timing_Properties::Compute_Deadline",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "AadlInteger"
        },
        "appliesTo": [
          "thread",
          "device",
          "subprogram",
          "subprogram access",
          "event port",
          "event data port"
        ]
      },
      {
        "name": "Timing_Properties::Compute_Execution_Time",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "RangeType",
          "numberType": {
            "kind": "AadlInteger"
          }
        },
        "appliesTo": [
          "thread",
          "device",
          "subprogram",
          "event port",
          "event data port"
        ]
      },
      {
        "name": "Timing_Properties::Client_Subprogram_Execution_Time",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "RangeType",
          "numberType": {
            "kind": "AadlInteger"
          }
        },
        "appliesTo": [
          "subprogram"
        ]
      },
      {
        "name": "Timing_Properties::Deactivate_Deadline",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "AadlInteger"
        },
        "appliesTo": [
          "thread"
        ]
      },
      {
        "name": "Timing_Properties::Deactivate_Execution_Time",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "RangeType",
          "numberType": {
            "kind": "AadlInteger"
          }
        },
        "appliesTo": [
          "thread"
        ]
      },
      {
        "name": "Timing_Properties::Deadline",
        "kind": "Property",
        "inherit": true,
        "propertyType": {
          "kind": "AadlInteger"
        },
        "appliesTo": [
          "thread",
          "thread group",
          "process",
          "system",
          "device",
          "virtual processor"
        ]
      },
      {
        "name": "Timing_Properties::First_Dispatch_Time",
        "kind": "Property",
        "inherit": true,
        "propertyType": {
          "kind": "AadlInteger"
        },
        "appliesTo": [
          "thread",
          "thread group"
        ]
      },
      {
        "name": "Timing_Properties::Dispatch_Jitter",
        "kind": "Property",
        "inherit": true,
        "propertyType": {
          "kind": "AadlInteger"
        },
        "appliesTo": [
          "thread",
          "thread group"
        ]
      },
      {
        "name": "Timing_Properties::Dispatch_Offset",
        "kind": "Property",
        "inherit": true,
        "propertyType": {
          "kind": "AadlInteger"
        },
        "appliesTo": [
          "thread"
        ]
      },
      {
        "name": "Timing_Properties::Execution_Time",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "AadlInteger"
        },
        "appliesTo": [
          "virtual processor"
        ]
      },
      {
        "name": "Timing_Properties::Finalize_Deadline",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "AadlInteger"
        },
        "appliesTo": [
          "thread"
        ]
      },
      {
        "name": "Timing_Properties::Finalize_Execution_Time",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "RangeType",
          "numberType": {
            "kind": "AadlInteger"
          }
        },
        "appliesTo": [
          "thread"
        ]
      },
      {
        "name": "Timing_Properties::Initialize_Deadline",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "AadlInteger"
        },
        "appliesTo": [
          "thread"
        ]
      },
      {
        "name": "Timing_Properties::Initialize_Execution_Time",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "RangeType",
          "numberType": {
            "kind": "AadlInteger"
          }
        },
        "appliesTo": [
          "thread"
        ]
      },
      {
        "name": "Timing_Properties::Load_Deadline",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "AadlInteger"
        },
        "appliesTo": [
          "process",
          "system"
        ]
      },
      {
        "name": "Timing_Properties::Load_Time",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "RangeType",
          "numberType": {
            "kind": "AadlInteger"
          }
        },
        "appliesTo": [
          "process",
          "system"
        ]
      },
      {
        "name": "Timing_Properties::Processor_Capacity",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "AadlReal"
        },
        "appliesTo": [
          "processor",
          "virtual processor",
          "system"
        ]
      },
      {
        "name": "Timing_Properties::Period",
        "kind": "Property",
        "inherit": true,
        "propertyType": {
          "kind": "AadlInteger"
        },
        "appliesTo": [
          "thread",
          "thread group",
          "process",
          "system",
          "device",
          "virtual processor",
          "virtual bus",
          "bus"
        ]
      },
      {
        "name": "Timing_Properties::Recover_Deadline",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "AadlInteger"
        },
        "appliesTo": [
          "thread"
        ]
      },
      {
        "name": "Timing_Properties::Recover_Execution_Time",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "RangeType",
          "numberType": {
            "kind": "AadlInteger"
          }
        },
        "appliesTo": [
          "thread"
        ]
      },
      {
        "name": "Timing_Properties::Reference_Time",
        "kind": "Property",
        "inherit": true,
        "propertyType": {
          "kind": "ReferenceType",
          "references": [
            "device",
            "processor",
            "bus",
            "system",
            "abstract"
          ]
        },
        "appliesTo": [
          "device",
          "processor",
          "bus",
          "system",
          "memory",
          "virtual bus",
          "virtual processor"
        ]
      },
      {
        "name": "Timing_Properties::Startup_Deadline",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "AadlInteger"
        },
        "appliesTo": [
          "processor",
          "virtual processor",
          "process",
          "system"
        ]
      },
      {
        "name": "Timing_Properties::Startup_Execution_Time",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "RangeType",
          "numberType": {
            "kind": "AadlInteger"
          }
        },
        "appliesTo": [
          "virtual processor",
          "processor",
          "process",
          "system"
        ]
      },
      {
        "name": "Timing_Properties::Clock_Jitter",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "AadlInteger"
        },
        "appliesTo": [
          "processor",
          "device",
          "system"
        ]
      },
      {
        "name": "Timing_Properties::Clock_Period",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "AadlInteger"
        },
        "appliesTo": [
          "processor",
          "device",
          "system"
        ]
      },
      {
        "name": "Timing_Properties::Clock_Period_Range",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "RangeType",
          "numberType": {
            "kind": "AadlInteger"
          }
        },
        "appliesTo": [
          "processor",
          "device",
          "system"
        ]
      },
      {
        "name": "Timing_Properties::Process_Swap_Execution_Time",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "RangeType",
          "numberType": {
            "kind": "AadlInteger"
          }
        },
        "appliesTo": [
          "processor",
          "virtual processor",
          "system"
        ]
      },
      {
        "name": "Timing_Properties::Reference_Processor",
        "kind": "Property",
        "inherit": true,
        "propertyType": {
          "kind": "ClassifierType",
          "classifiers": [
            "processor"
          ]
        },
        "appliesTo": [
          "subprogram",
          "subprogram group",
          "thread",
          "thread group",
          "process",
          "device",
          "system"
        ]
      },
      {
        "name": "Timing_Properties::Scheduler_Quantum",
        "kind": "Property",
        "inherit": true,
        "propertyType": {
          "kind": "AadlInteger"
        },
        "appliesTo": [
          "processor"
        ]
      },
      {
        "name": "Timing_Properties::Thread_Swap_Execution_Time",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "RangeType",
          "numberType": {
            "kind": "AadlInteger"
          }
        },
        "appliesTo": [
          "processor",
          "system",
          "virtual processor"
        ]
      },
      {
        "name": "Timing_Properties::Frame_Period",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "AadlInteger"
        },
        "appliesTo": [
          "processor",
          "virtual processor"
        ]
      },
      {
        "name": "Timing_Properties::Slot_Time",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "AadlInteger"
        },
        "appliesTo": [
          "processor",
          "virtual processor"
        ]
      }
    ]
  },
  {
    "name": "Programming_Properties",
    "kind": "PropertySet",
    "properties": [
      {
        "name": "Programming_Properties::Activate_Entrypoint",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "ClassifierType",
          "classifiers": [
            "subprogram classifier"
          ]
        },
        "appliesTo": [
          "thread",
          "device",
          "processor",
          "virtual processor"
        ]
      },
      {
        "name": "Programming_Properties::Activate_Entrypoint_Call_Sequence",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "ReferenceType",
          "references": [
            "subprogram call sequence"
          ]
        },
        "appliesTo": [
          "thread",
          "device"
        ]
      },
      {
        "name": "Programming_Properties::Activate_Entrypoint_Source_Text",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "AadlString"
        },
        "appliesTo": [
          "thread",
          "device",
          "virtual processor",
          "processor"
        ]
      },
      {
        "name": "Programming_Properties::Compute_Entrypoint",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "ClassifierType",
          "classifiers": [
            "subprogram classifier"
          ]
        },
        "appliesTo": [
          "thread",
          "device",
          "subprogram access",
          "event port",
          "event data port"
        ]
      },
      {
        "name": "Programming_Properties::Compute_Entrypoint_Call_Sequence",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "ReferenceType",
          "references": [
            "subprogram call sequence"
          ]
        },
        "appliesTo": [
          "thread",
          "device",
          "subprogram access",
          "event port",
          "event data port"
        ]
      },
      {
        "name": "Programming_Properties::Compute_Entrypoint_Source_Text",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "AadlString"
        },
        "appliesTo": [
          "thread",
          "device",
          "subprogram access",
          "event port",
          "event data port"
        ]
      },
      {
        "name": "Programming_Properties::Deactivate_Entrypoint",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "ClassifierType",
          "classifiers": [
            "subprogram classifier"
          ]
        },
        "appliesTo": [
          "thread",
          "device"
        ]
      },
      {
        "name": "Programming_Properties::Deactivate_Entrypoint_Call_Sequence",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "ReferenceType",
          "references": [
            "subprogram call sequence"
          ]
        },
        "appliesTo": [
          "thread",
          "device"
        ]
      },
      {
        "name": "Programming_Properties::Deactivate_Entrypoint_Source_Text",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "AadlString"
        },
        "appliesTo": [
          "thread"
        ]
      },
      {
        "name": "Programming_Properties::Finalize_Entrypoint",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "ClassifierType",
          "classifiers": [
            "subprogram classifier"
          ]
        },
        "appliesTo": [
          "thread",
          "device"
        ]
      },
      {
        "name": "Programming_Properties::Finalize_Entrypoint_Call_Sequence",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "ReferenceType",
          "references": [
            "subprogram call sequence"
          ]
        },
        "appliesTo": [
          "thread",
          "device"
        ]
      },
      {
        "name": "Programming_Properties::Finalize_Entrypoint_Source_Text",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "AadlString"
        },
        "appliesTo": [
          "thread",
          "device"
        ]
      },
      {
        "name": "Programming_Properties::Initialize_Entrypoint",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "ClassifierType",
          "classifiers": [
            "subprogram classifier"
          ]
        },
        "appliesTo": [
          "thread",
          "device"
        ]
      },
      {
        "name": "Programming_Properties::Initialize_Entrypoint_Call_Sequence",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "ReferenceType",
          "references": [
            "subprogram call sequence"
          ]
        },
        "appliesTo": [
          "thread",
          "device"
        ]
      },
      {
        "name": "Programming_Properties::Initialize_Entrypoint_Source_Text",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "AadlString"
        },
        "appliesTo": [
          "thread",
          "device"
        ]
      },
      {
        "name": "Programming_Properties::Recover_Entrypoint",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "ClassifierType",
          "classifiers": [
            "subprogram classifier"
          ]
        },
        "appliesTo": [
          "thread",
          "device"
        ]
      },
      {
        "name": "Programming_Properties::Recover_Entrypoint_Call_Sequence",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "ReferenceType",
          "references": [
            "subprogram call sequence"
          ]
        },
        "appliesTo": [
          "thread",
          "device"
        ]
      },
      {
        "name": "Programming_Properties::Recover_Entrypoint_Source_Text",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "AadlString"
        },
        "appliesTo": [
          "thread",
          "device"
        ]
      },
      {
        "name": "Programming_Properties::Source_Language",
        "kind": "Property",
        "inherit": true,
        "propertyType": {
          "kind": "ListType",
          "propertyType": "AADL_Project::Supported_Source_Languages"
        },
        "appliesTo": [
          "subprogram",
          "data",
          "thread",
          "thread group",
          "process",
          "system",
          "bus",
          "device",
          "processor",
          "virtual processor",
          "virtual bus"
        ]
      },
      {
        "name": "Programming_Properties::Source_Name",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "AadlString"
        },
        "appliesTo": [
          "data",
          "port",
          "subprogram",
          "parameter",
          "virtual bus",
          "virtual processor"
        ]
      },
      {
        "name": "Programming_Properties::Source_Text",
        "kind": "Property",
        "inherit": true,
        "propertyType": {
          "kind": "ListType",
          "propertyType": {
            "kind": "AadlString"
          }
        },
        "appliesTo": [
          "data",
          "port",
          "subprogram",
          "thread",
          "thread group",
          "process",
          "system",
          "virtual bus",
          "virtual processor",
          "memory",
          "bus",
          "device",
          "processor",
          "parameter",
          "feature group",
          "aadl package"
        ]
      },
      {
        "name": "Programming_Properties::Supported_Source_Language",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "ListType",
          "propertyType": "AADL_Project::Supported_Source_Languages"
        },
        "appliesTo": [
          "processor",
          "virtual processor",
          "system"
        ]
      },
      {
        "name": "Programming_Properties::Type_Source_Name",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "AadlString"
        },
        "appliesTo": [
          "data",
          "port",
          "subprogram"
        ]
      },
      {
        "name": "Programming_Properties::Hardware_Description_Source_Text",
        "kind": "Property",
        "inherit": true,
        "propertyType": {
          "kind": "ListType",
          "propertyType": {
            "kind": "AadlString"
          }
        },
        "appliesTo": [
          "memory",
          "bus",
          "device",
          "processor",
          "system"
        ]
      },
      {
        "name": "Programming_Properties::Hardware_Source_Language",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "EnumerationType",
          "values": [
            "VHDL"
          ]
        },
        "appliesTo": [
          "memory",
          "bus",
          "device",
          "processor",
          "system"
        ]
      },
      {
        "name": "Programming_Properties::Device_Driver",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "ClassifierType",
          "classifiers": [
            "abstract implementation"
          ]
        },
        "appliesTo": [
          "device"
        ]
      }
    ]
  },
  {
    "name": "Thread_Properties",
    "kind": "PropertySet",
    "properties": [
      {
        "name": "Thread_Properties::Dispatch_Protocol",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "EnumerationType",
          "values": [
            "Periodic",
            "Sporadic",
            "Aperiodic",
            "Timed",
            "Hybrid",
            "Background"
          ]
        },
        "appliesTo": [
          "thread",
          "device",
          "virtual processor"
        ]
      },
      {
        "name": "Thread_Properties::Dispatch_Trigger",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "ListType",
          "propertyType": {
            "kind": "ReferenceType",
            "references": [
              "port"
            ]
          }
        },
        "appliesTo": [
          "device",
          "thread"
        ]
      },
      {
        "name": "Thread_Properties::Dispatch_Able",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "AadlBoolean"
        },
        "appliesTo": [
          "thread"
        ]
      },
      {
        "name": "Thread_Properties::POSIX_Scheduling_Policy",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "EnumerationType",
          "values": [
            "SCHED_FIFO",
            "SCHED_RR",
            "SCHED_OTHERS"
          ]
        },
        "appliesTo": [
          "thread",
          "thread group"
        ]
      },
      {
        "name": "Thread_Properties::Priority",
        "kind": "Property",
        "inherit": true,
        "propertyType": {
          "kind": "AadlInteger"
        },
        "appliesTo": [
          "thread",
          "thread group",
          "process",
          "system",
          "device",
          "data",
          "data access"
        ]
      },
      {
        "name": "Thread_Properties::Criticality",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "AadlInteger"
        },
        "appliesTo": [
          "thread",
          "thread group"
        ]
      },
      {
        "name": "Thread_Properties::Time_Slot",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "ListType",
          "propertyType": {
            "kind": "AadlInteger"
          }
        },
        "appliesTo": [
          "thread",
          "thread group",
          "process",
          "virtual processor",
          "system"
        ]
      },
      {
        "name": "Thread_Properties::Concurrency_Control_Protocol",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "EnumerationType",
          "values": [
            "None_Specified",
            "Interrupt_Masking",
            "Maximum_Priority",
            "Priority_Inheritance",
            "Priority_Ceiling",
            "Spin_Lock",
            "Semaphore",
            "Protected_Access"
          ]
        },
        "appliesTo": [
          "data",
          "data access"
        ]
      },
      {
        "name": "Thread_Properties::Urgency",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "AadlInteger"
        },
        "appliesTo": [
          "port",
          "subprogram"
        ]
      },
      {
        "name": "Thread_Properties::Dequeue_Protocol",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "EnumerationType",
          "values": [
            "OneItem",
            "MultipleItems",
            "AllItems"
          ]
        },
        "appliesTo": [
          "event port",
          "event data port"
        ]
      },
      {
        "name": "Thread_Properties::Dequeued_Items",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "AadlInteger"
        },
        "appliesTo": [
          "event port",
          "event data port"
        ]
      },
      {
        "name": "Thread_Properties::Mode_Transition_Response",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "EnumerationType",
          "values": [
            "emergency",
            "planned"
          ]
        },
        "appliesTo": [
          "mode transition"
        ]
      },
      {
        "name": "Thread_Properties::Resumption_Policy",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "EnumerationType",
          "values": [
            "restart",
            "resume"
          ]
        },
        "appliesTo": [
          "thread",
          "thread group",
          "process",
          "system",
          "device",
          "processor",
          "memory",
          "bus",
          "system",
          "virtual bus",
          "virtual processor",
          "subprogram"
        ]
      },
      {
        "name": "Thread_Properties::Active_Thread_Handling_Protocol",
        "kind": "Property",
        "inherit": true,
        "propertyType": {
          "kind": "EnumerationType",
          "values": [
            "abort"
          ]
        },
        "appliesTo": [
          "thread",
          "thread group",
          "process",
          "system"
        ]
      },
      {
        "name": "Thread_Properties::Active_Thread_Queue_Handling_Protocol",
        "kind": "Property",
        "inherit": true,
        "propertyType": {
          "kind": "EnumerationType",
          "values": [
            "flush",
            "hold"
          ]
        },
        "appliesTo": [
          "thread",
          "thread group",
          "process",
          "system"
        ]
      },
      {
        "name": "Thread_Properties::Deactivation_Policy",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "EnumerationType",
          "values": [
            "inactive",
            "unload"
          ]
        },
        "appliesTo": [
          "thread",
          "process",
          "virtual processor",
          "processor"
        ]
      },
      {
        "name": "Thread_Properties::Runtime_Protection",
        "kind": "Property",
        "inherit": true,
        "propertyType": {
          "kind": "AadlBoolean"
        },
        "appliesTo": [
          "process",
          "system",
          "virtual processor"
        ]
      },
      {
        "name": "Thread_Properties::Subprogram_Call_Type",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "EnumerationType",
          "values": [
            "Synchronous",
            "SemiSynchronous"
          ]
        },
        "appliesTo": [
          "subprogram"
        ]
      },
      {
        "name": "Thread_Properties::Synchronized_Component",
        "kind": "Property",
        "inherit": true,
        "propertyType": {
          "kind": "AadlBoolean"
        },
        "appliesTo": [
          "thread",
          "thread group",
          "process",
          "system"
        ]
      }
    ]
  },
  {
    "name": "AADL_Project",
    "kind": "PropertySet",
    "propertyConstants": [
      {
        "name": "AADL_Project::Supported_Classifier_Equivalence_Matches",
        "kind": "PropertyConstant",
        "propertyType": {
          "kind": "ListType",
          "propertyType": {
            "kind": "ListType",
            "propertyType": {
              "kind": "ClassifierType",
              "classifiers": [
                "data",
                "bus",
                "subprogram",
                "subprogram group",
                "feature group"
              ]
            }
          }
        },
        "value": []
      },
      {
        "name": "AADL_Project::Supported_Classifier_Subset_Matches",
        "kind": "PropertyConstant",
        "propertyType": {
          "kind": "ListType",
          "propertyType": {
            "kind": "ListType",
            "propertyType": {
              "kind": "ClassifierType",
              "classifiers": [
                "data",
                "bus",
                "subprogram",
                "subprogram group"
              ]
            }
          }
        },
        "value": []
      },
      {
        "name": "AADL_Project::Supported_Type_Conversions",
        "kind": "PropertyConstant",
        "propertyType": {
          "kind": "ListType",
          "propertyType": {
            "kind": "ListType",
            "propertyType": {
              "kind": "ClassifierType",
              "classifiers": [
                "data",
                "bus",
                "subprogram",
                "subprogram group"
              ]
            }
          }
        },
        "value": []
      },
      {
        "name": "AADL_Project::Supported_Classifier_Complement_Matches",
        "kind": "PropertyConstant",
        "propertyType": {
          "kind": "ListType",
          "propertyType": {
            "kind": "ListType",
            "propertyType": {
              "kind": "ClassifierType",
              "classifiers": [
                "feature group"
              ]
            }
          }
        },
        "value": []
      },
      {
        "name": "AADL_Project::Max_Aadlinteger",
        "kind": "PropertyConstant",
        "propertyType": {
          "kind": "AadlInteger"
        },
        "value": 4294967296
      },
      {
        "name": "AADL_Project::Max_Target_Integer",
        "kind": "PropertyConstant",
        "propertyType": {
          "kind": "AadlInteger"
        },
        "value": 4294967296
      },
      {
        "name": "AADL_Project::Max_Base_Address",
        "kind": "PropertyConstant",
        "propertyType": {
          "kind": "AadlInteger"
        },
        "value": 4294967296
      },
      {
        "name": "AADL_Project::Max_Memory_Size",
        "kind": "PropertyConstant",
        "propertyType": {
          "kind": "AadlInteger"
        },
        "value": 4294967296
      },
      {
        "name": "AADL_Project::Max_Queue_Size",
        "kind": "PropertyConstant",
        "propertyType": {
          "kind": "AadlInteger"
        },
        "value": 512
      },
      {
        "name": "AADL_Project::Max_Thread_Limit",
        "kind": "PropertyConstant",
        "propertyType": {
          "kind": "AadlInteger"
        },
        "value": 32
      },
      {
        "name": "AADL_Project::Max_Time",
        "kind": "PropertyConstant",
        "propertyType": {
          "kind": "AadlInteger"
        },
        "value": 1000
      },
      {
        "name": "AADL_Project::Max_Urgency",
        "kind": "PropertyConstant",
        "propertyType": {
          "kind": "AadlInteger"
        },
        "value": 12
      },
      {
        "name": "AADL_Project::Max_Byte_Count",
        "kind": "PropertyConstant",
        "propertyType": {
          "kind": "AadlInteger"
        },
        "value": 4294967296
      },
      {
        "name": "AADL_Project::Max_Word_Space",
        "kind": "PropertyConstant",
        "propertyType": {
          "kind": "AadlInteger"
        },
        "value": 64
      },
      {
        "name": "AADL_Project::Max_Volume",
        "kind": "PropertyConstant",
        "propertyType": {
          "kind": "AadlInteger"
        },
        "value": 1000
      }
    ],
    "propertyTypes": [
      {
        "name": "AADL_Project::Supported_Active_Thread_Handling_Protocols",
        "kind": "PropertyType",
        "type": {
          "kind": "EnumerationType",
          "values": [
            "abort"
          ]
        }
      },
      {
        "name": "AADL_Project::Supported_Connection_Patterns",
        "kind": "PropertyType",
        "type": {
          "kind": "EnumerationType",
          "values": [
            "One_To_One",
            "All_To_All",
            "One_To_All",
            "All_To_One",
            "Next",
            "Previous",
            "Cyclic_Next",
            "Cyclic_Previous",
            "Odd_To_Odd",
            "Even_To_Even",
            "Next_Next",
            "Cyclic_Next_Next",
            "Previous_Previous",
            "Cyclic_Previous_Previous"
          ]
        }
      },
      {
        "name": "AADL_Project::Supported_Concurrency_Control_Protocols",
        "kind": "PropertyType",
        "type": {
          "kind": "EnumerationType",
          "values": [
            "None_Specified",
            "Interrupt_Masking",
            "Maximum_Priority",
            "Priority_Inheritance",
            "Priority_Ceiling",
            "Spin_Lock",
            "Semaphore",
            "Protected_Access"
          ]
        }
      },
      {
        "name": "AADL_Project::Supported_Dispatch_Protocols",
        "kind": "PropertyType",
        "type": {
          "kind": "EnumerationType",
          "values": [
            "Periodic",
            "Sporadic",
            "Aperiodic",
            "Timed",
            "Hybrid",
            "Background"
          ]
        }
      },
      {
        "name": "AADL_Project::Supported_Queue_Processing_Protocols",
        "kind": "PropertyType",
        "type": {
          "kind": "EnumerationType",
          "values": [
            "Fifo"
          ]
        }
      },
      {
        "name": "AADL_Project::Supported_Hardware_Source_Languages",
        "kind": "PropertyType",
        "type": {
          "kind": "EnumerationType",
          "values": [
            "VHDL"
          ]
        }
      },
      {
        "name": "AADL_Project::Supported_Connection_QoS",
        "kind": "PropertyType",
        "type": {
          "kind": "EnumerationType",
          "values": [
            "GuaranteedDelivery",
            "OrderedDelivery",
            "SecureDelivery"
          ]
        }
      },
      {
        "name": "AADL_Project::Supported_Scheduling_Protocols",
        "kind": "PropertyType",
        "type": {
          "kind": "EnumerationType",
          "values": [
            "Static",
            "Round_Robin_Protocol",
            "POSIX_1003_HIGHEST_PRIORITY_FIRST_PROTOCOL",
            "FixedTimeline",
            "Cooperative",
            "RMS",
            "DMS",
            "EDF",
            "SporadicServer",
            "SlackServer",
            "ARINC653"
          ]
        }
      },
      {
        "name": "AADL_Project::Supported_Source_Languages",
        "kind": "PropertyType",
        "type": {
          "kind": "EnumerationType",
          "values": [
            "Ada95",
            "Ada2005",
            "C",
            "Java",
            "Simulink_6_5",
            "SCADE"
          ]
        }
      },
      {
        "name": "AADL_Project::Supported_Distributions",
        "kind": "PropertyType",
        "type": {
          "kind": "EnumerationType",
          "values": [
            "Fixed",
            "Poisson"
          ]
        }
      },
      {
        "name": "AADL_Project::Supported_Classifier_Substitutions",
        "kind": "PropertyType",
        "type": {
          "kind": "EnumerationType",
          "values": [
            "Classifier_Match",
            "Type_Extension",
            "Signature_Match"
          ]
        }
      },
      {
        "name": "AADL_Project::Time",
        "kind": "PropertyType",
        "type": {
          "kind": "AadlInteger"
        }
      },
      {
        "name": "AADL_Project::Time_Range",
        "kind": "PropertyType",
        "type": {
          "kind": "RangeType",
          "numberType": {
            "kind": "AadlInteger"
          }
        }
      },
      {
        "name": "AADL_Project::Size",
        "kind": "PropertyType",
        "type": {
          "kind": "AadlInteger"
        }
      },
      {
        "name": "AADL_Project::Size_Range",
        "kind": "PropertyType",
        "type": {
          "kind": "RangeType",
          "numberType": {
            "kind": "AadlInteger"
          }
        }
      },
      {
        "name": "AADL_Project::Size_Units",
        "kind": "PropertyType",
        "type": {
          "kind": "EnumerationType",
          "values": [
            "bits",
            "Bytes",
            "KByte",
            "MByte",
            "GByte",
            "TByte"
          ]
        }
      },
      {
        "name": "AADL_Project::Time_Units",
        "kind": "PropertyType",
        "type": {
          "kind": "EnumerationType",
          "values": [
            "ps",
            "ns",
            "us",
            "ms",
            "sec",
            "min",
            "hr"
          ]
        }
      },
      {
        "name": "AADL_Project::Data_Rate_Units",
        "kind": "PropertyType",
        "type": {
          "kind": "EnumerationType",
          "values": [
            "bitsps",
            "Bytesps",
            "KBytesps",
            "MBytesps",
            "GBytesps"
          ]
        }
      },
      {
        "name": "AADL_Project::Data_Volume_Units",
        "kind": "PropertyType",
        "type": {
          "kind": "EnumerationType",
          "values": [
            "bitsps",
            "Bytesps",
            "KBytesps",
            "MBytesps",
            "GBytesps"
          ]
        }
      },
      {
        "name": "AADL_Project::Data_Volume",
        "kind": "PropertyType",
        "type": {
          "kind": "AadlInteger"
        }
      },
      {
        "name": "AADL_Project::Processor_Speed_Units",
        "kind": "PropertyType",
        "type": {
          "kind": "EnumerationType",
          "values": [
            "KIPS",
            "MIPS",
            "GIPS"
          ]
        }
      }
    ]
  },
  {
    "name": "Communication_Properties",
    "kind": "PropertySet",
    "properties": [
      {
        "name": "Communication_Properties::Fan_Out_Policy",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "EnumerationType",
          "values": [
            "Broadcast",
            "RoundRobin",
            "Selective",
            "OnDemand"
          ]
        },
        "appliesTo": [
          "feature"
        ]
      },
      {
        "name": "Communication_Properties::Connection_Pattern",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "ListType",
          "propertyType": {
            "kind": "ListType",
            "propertyType": "AADL_Project::Supported_Connection_Patterns"
          }
        },
        "appliesTo": [
          "connection"
        ]
      },
      {
        "name": "Communication_Properties::Connection_Set",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "ListType",
          "propertyType": "Communication_Properties::Connection_Pair"
        },
        "appliesTo": [
          "connection"
        ]
      },
      {
        "name": "Communication_Properties::Overflow_Handling_Protocol",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "EnumerationType",
          "values": [
            "DropOldest",
            "DropNewest",
            "Error"
          ]
        },
        "appliesTo": [
          "event port",
          "event data port",
          "subprogram access"
        ]
      },
      {
        "name": "Communication_Properties::Queue_Processing_Protocol",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "EnumerationType",
          "values": [
            "Fifo"
          ]
        },
        "appliesTo": [
          "event port",
          "event data port",
          "subprogram access"
        ]
      },
      {
        "name": "Communication_Properties::Queue_Size",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "AadlInteger"
        },
        "appliesTo": [
          "event port",
          "event data port",
          "subprogram access"
        ]
      },
      {
        "name": "Communication_Properties::Required_Connection",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "AadlBoolean"
        },
        "appliesTo": [
          "feature"
        ]
      },
      {
        "name": "Communication_Properties::Timing",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "EnumerationType",
          "values": [
            "sampled",
            "immediate",
            "delayed"
          ]
        },
        "appliesTo": [
          "port connection"
        ]
      },
      {
        "name": "Communication_Properties::Transmission_Type",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "EnumerationType",
          "values": [
            "push",
            "pull"
          ]
        },
        "appliesTo": [
          "feature",
          "connection",
          "bus",
          "virtual bus"
        ]
      },
      {
        "name": "Communication_Properties::Input_Rate",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "RecordType",
          "fields": [
            {
              "name": "Value_Range",
              "propertyType": {
                "kind": "RangeType",
                "numberType": {
                  "kind": "AadlReal"
                }
              }
            },
            {
              "name": "Rate_Unit",
              "propertyType": {
                "kind": "EnumerationType",
                "values": [
                  "PerSecond",
                  "PerDispatch"
                ]
              }
            },
            {
              "name": "Rate_Distribution",
              "propertyType": {
                "kind": "AADL_Project::Supported_Distributions"
              }
            }
          ]
        },
        "appliesTo": [
          "feature"
        ]
      },
      {
        "name": "Communication_Properties::Input_Time",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "ListType",
          "propertyType": "Communication_Properties::IO_Time_Spec"
        },
        "appliesTo": [
          "feature"
        ]
      },
      {
        "name": "Communication_Properties::Output_Rate",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "RecordType",
          "fields": [
            {
              "name": "Value_Range",
              "propertyType": {
                "kind": "RangeType",
                "numberType": {
                  "kind": "AadlReal"
                }
              }
            },
            {
              "name": "Rate_Unit",
              "propertyType": {
                "kind": "EnumerationType",
                "values": [
                  "PerSecond",
                  "PerDispatch"
                ]
              }
            },
            {
              "name": "Rate_Distribution",
              "propertyType": {
                "kind": "AADL_Project::Supported_Distributions"
              }
            }
          ]
        },
        "appliesTo": [
          "feature"
        ]
      },
      {
        "name": "Communication_Properties::Output_Time",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "ListType",
          "propertyType": "Communication_Properties::IO_Time_Spec"
        },
        "appliesTo": [
          "feature"
        ]
      },
      {
        "name": "Communication_Properties::Subprogram_Call_Rate",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "RecordType",
          "fields": [
            {
              "name": "Value_Range",
              "propertyType": {
                "kind": "RangeType",
                "numberType": {
                  "kind": "AadlReal"
                }
              }
            },
            {
              "name": "Rate_Unit",
              "propertyType": {
                "kind": "EnumerationType",
                "values": [
                  "PerSecond",
                  "PerDispatch"
                ]
              }
            },
            {
              "name": "Rate_Distribution",
              "propertyType": {
                "kind": "AADL_Project::Supported_Distributions"
              }
            }
          ]
        },
        "appliesTo": [
          "subprogram access"
        ]
      },
      {
        "name": "Communication_Properties::Transmission_Time",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "RecordType",
          "fields": [
            {
              "name": "Fixed",
              "propertyType": {
                "kind": "AADL_Project::Time_Range"
              }
            },
            {
              "name": "PerByte",
              "propertyType": {
                "kind": "AADL_Project::Time_Range"
              }
            }
          ]
        },
        "appliesTo": [
          "bus",
          "system",
          "device",
          "processor",
          "memory",
          "virtual bus",
          "virtual processor"
        ]
      },
      {
        "name": "Communication_Properties::Actual_Latency",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "RangeType",
          "numberType": {
            "kind": "AadlInteger"
          }
        },
        "appliesTo": [
          "flow",
          "connection",
          "virtual bus",
          "bus",
          "processor",
          "virtual processor",
          "device",
          "system",
          "feature",
          "memory"
        ]
      },
      {
        "name": "Communication_Properties::Latency",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "RangeType",
          "numberType": {
            "kind": "AadlInteger"
          }
        },
        "appliesTo": [
          "flow",
          "connection",
          "virtual bus",
          "bus",
          "processor",
          "virtual processor",
          "device",
          "system",
          "feature",
          "memory"
        ]
      },
      {
        "name": "Communication_Properties::Data_Rate",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "AadlInteger"
        },
        "appliesTo": [
          "feature",
          "connection",
          "bus",
          "virtual bus",
          "system",
          "processor",
          "virtual processor",
          "memory",
          "device"
        ]
      }
    ],
    "propertyTypes": [
      {
        "name": "Communication_Properties::Connection_Pair",
        "kind": "PropertyType",
        "type": {
          "kind": "RecordType",
          "fields": [
            {
              "name": "src",
              "propertyType": {
                "kind": "ListType",
                "propertyType": {
                  "kind": "AadlInteger"
                }
              }
            },
            {
              "name": "dst",
              "propertyType": {
                "kind": "ListType",
                "propertyType": {
                  "kind": "AadlInteger"
                }
              }
            }
          ]
        }
      },
      {
        "name": "Communication_Properties::IO_Time_Spec",
        "kind": "PropertyType",
        "type": {
          "kind": "RecordType",
          "fields": [
            {
              "name": "Offset",
              "propertyType": {
                "kind": "AADL_Project::Time_Range"
              }
            },
            {
              "name": "Time",
              "propertyType": {
                "kind": "Communication_Properties::IO_Reference_Time"
              }
            }
          ]
        }
      },
      {
        "name": "Communication_Properties::IO_Reference_Time",
        "kind": "PropertyType",
        "type": {
          "kind": "EnumerationType",
          "values": [
            "Dispatch",
            "Start",
            "Completion",
            "Deadline",
            "NoIO",
            "Dynamic"
          ]
        }
      },
      {
        "name": "Communication_Properties::Rate_Spec",
        "kind": "PropertyType",
        "type": {
          "kind": "RecordType",
          "fields": [
            {
              "name": "Value_Range",
              "propertyType": {
                "kind": "RangeType",
                "numberType": {
                  "kind": "AadlReal"
                }
              }
            },
            {
              "name": "Rate_Unit",
              "propertyType": {
                "kind": "EnumerationType",
                "values": [
                  "PerSecond",
                  "PerDispatch"
                ]
              }
            },
            {
              "name": "Rate_Distribution",
              "propertyType": {
                "kind": "AADL_Project::Supported_Distributions"
              }
            }
          ]
        }
      }
    ]
  },
  {
    "name": "Memory_Properties",
    "kind": "PropertySet",
    "properties": [
      {
        "name": "Memory_Properties::Access_Right",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "EnumerationType",
          "values": [
            "read_only",
            "write_only",
            "read_write",
            "by_method"
          ]
        },
        "appliesTo": [
          "data",
          "bus",
          "data access",
          "bus access"
        ]
      },
      {
        "name": "Memory_Properties::Access_Time",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "RecordType",
          "fields": [
            {
              "name": "First",
              "propertyType": {
                "kind": "Communication_Properties::IO_Time_Spec"
              }
            },
            {
              "name": "Last",
              "propertyType": {
                "kind": "Communication_Properties::IO_Time_Spec"
              }
            }
          ]
        },
        "appliesTo": [
          "data access",
          "data"
        ]
      },
      {
        "name": "Memory_Properties::Allowed_Message_Size",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "RangeType",
          "numberType": {
            "kind": "AadlInteger"
          }
        },
        "appliesTo": [
          "bus"
        ]
      },
      {
        "name": "Memory_Properties::Assign_Time",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "RecordType",
          "fields": [
            {
              "name": "Fixed",
              "propertyType": {
                "kind": "AADL_Project::Time_Range"
              }
            },
            {
              "name": "PerByte",
              "propertyType": {
                "kind": "AADL_Project::Time_Range"
              }
            }
          ]
        },
        "appliesTo": [
          "processor"
        ]
      },
      {
        "name": "Memory_Properties::Base_Address",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "AadlInteger"
        },
        "appliesTo": [
          "memory",
          "data",
          "data access",
          "port"
        ]
      },
      {
        "name": "Memory_Properties::Device_Register_Address",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "AadlInteger"
        },
        "appliesTo": [
          "port",
          "feature group"
        ]
      },
      {
        "name": "Memory_Properties::Read_Time",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "RecordType",
          "fields": [
            {
              "name": "Fixed",
              "propertyType": {
                "kind": "AADL_Project::Time_Range"
              }
            },
            {
              "name": "PerByte",
              "propertyType": {
                "kind": "AADL_Project::Time_Range"
              }
            }
          ]
        },
        "appliesTo": [
          "memory"
        ]
      },
      {
        "name": "Memory_Properties::Code_Size",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "AadlInteger"
        },
        "appliesTo": [
          "data",
          "thread",
          "thread group",
          "process",
          "system",
          "subprogram",
          "processor",
          "virtual processor",
          "virtual bus",
          "device"
        ]
      },
      {
        "name": "Memory_Properties::Data_Size",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "AadlInteger"
        },
        "appliesTo": [
          "data",
          "feature",
          "subprogram",
          "thread",
          "thread group",
          "process",
          "system",
          "processor",
          "virtual processor",
          "virtual bus",
          "bus",
          "device"
        ]
      },
      {
        "name": "Memory_Properties::Heap_Size",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "AadlInteger"
        },
        "appliesTo": [
          "thread",
          "subprogram",
          "thread group",
          "process",
          "system",
          "processor",
          "virtual processor",
          "device"
        ]
      },
      {
        "name": "Memory_Properties::Stack_Size",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "AadlInteger"
        },
        "appliesTo": [
          "thread",
          "subprogram",
          "processor",
          "virtual processor",
          "device"
        ]
      },
      {
        "name": "Memory_Properties::Source_Code_Size",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "AadlInteger"
        },
        "appliesTo": [
          "data",
          "thread",
          "thread group",
          "process",
          "system",
          "subprogram",
          "processor",
          "virtual processor",
          "device"
        ]
      },
      {
        "name": "Memory_Properties::Source_Data_Size",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "AadlInteger"
        },
        "appliesTo": [
          "data",
          "feature",
          "subprogram",
          "thread",
          "thread group",
          "process",
          "system",
          "processor",
          "virtual processor",
          "device"
        ]
      },
      {
        "name": "Memory_Properties::Source_Heap_Size",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "AadlInteger"
        },
        "appliesTo": [
          "thread",
          "subprogram"
        ]
      },
      {
        "name": "Memory_Properties::Source_Stack_Size",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "AadlInteger"
        },
        "appliesTo": [
          "thread",
          "subprogram",
          "processor",
          "virtual processor",
          "device"
        ]
      },
      {
        "name": "Memory_Properties::Byte_Count",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "AadlInteger"
        },
        "appliesTo": [
          "memory"
        ]
      },
      {
        "name": "Memory_Properties::Memory_Size",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "AadlInteger"
        },
        "appliesTo": [
          "memory",
          "system",
          "processor",
          "virtual processor"
        ]
      },
      {
        "name": "Memory_Properties::Word_Size",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "AadlInteger"
        },
        "appliesTo": [
          "memory"
        ]
      },
      {
        "name": "Memory_Properties::Word_Space",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "AadlInteger"
        },
        "appliesTo": [
          "memory"
        ]
      },
      {
        "name": "Memory_Properties::Write_Time",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "RecordType",
          "fields": [
            {
              "name": "Fixed",
              "propertyType": {
                "kind": "AADL_Project::Time_Range"
              }
            },
            {
              "name": "PerByte",
              "propertyType": {
                "kind": "AADL_Project::Time_Range"
              }
            }
          ]
        },
        "appliesTo": [
          "memory"
        ]
      }
    ],
    "propertyTypes": [
      {
        "name": "Memory_Properties::Access_Rights",
        "kind": "PropertyType",
        "type": {
          "kind": "EnumerationType",
          "values": [
            "read_only",
            "write_only",
            "read_write",
            "by_method"
          ]
        }
      }
    ]
  },
  {
    "name": "Deployment_Properties",
    "kind": "PropertySet",
    "properties": [
      {
        "name": "Deployment_Properties::Allowed_Processor_Binding_Class",
        "kind": "Property",
        "inherit": true,
        "propertyType": {
          "kind": "ListType",
          "propertyType": {
            "kind": "ClassifierType",
            "classifiers": [
              "processor",
              "virtual processor",
              "system",
              "device"
            ]
          }
        },
        "appliesTo": [
          "thread",
          "thread group",
          "process",
          "system",
          "virtual processor",
          "device"
        ]
      },
      {
        "name": "Deployment_Properties::Allowed_Processor_Binding",
        "kind": "Property",
        "inherit": true,
        "propertyType": {
          "kind": "ListType",
          "propertyType": {
            "kind": "ReferenceType",
            "references": [
              "processor",
              "virtual processor",
              "system",
              "device"
            ]
          }
        },
        "appliesTo": [
          "thread",
          "thread group",
          "process",
          "system",
          "virtual processor",
          "device"
        ]
      },
      {
        "name": "Deployment_Properties::Actual_Processor_Binding",
        "kind": "Property",
        "inherit": true,
        "propertyType": {
          "kind": "ListType",
          "propertyType": {
            "kind": "ReferenceType",
            "references": [
              "processor",
              "virtual processor",
              "system",
              "device"
            ]
          }
        },
        "appliesTo": [
          "thread",
          "thread group",
          "process",
          "system",
          "virtual processor",
          "device"
        ]
      },
      {
        "name": "Deployment_Properties::Allowed_Memory_Binding_Class",
        "kind": "Property",
        "inherit": true,
        "propertyType": {
          "kind": "ListType",
          "propertyType": {
            "kind": "ClassifierType",
            "classifiers": [
              "memory",
              "system",
              "processor",
              "virtual processor"
            ]
          }
        },
        "appliesTo": [
          "thread",
          "thread group",
          "process",
          "system",
          "device",
          "data",
          "data port",
          "event data port",
          "subprogram",
          "subprogram group",
          "processor",
          "virtual processor"
        ]
      },
      {
        "name": "Deployment_Properties::Allowed_Memory_Binding",
        "kind": "Property",
        "inherit": true,
        "propertyType": {
          "kind": "ListType",
          "propertyType": {
            "kind": "ReferenceType",
            "references": [
              "memory",
              "system",
              "processor",
              "virtual processor"
            ]
          }
        },
        "appliesTo": [
          "memory",
          "thread",
          "thread group",
          "process",
          "system",
          "device",
          "data",
          "data port",
          "event data port",
          "subprogram",
          "subprogram group",
          "processor",
          "virtual processor"
        ]
      },
      {
        "name": "Deployment_Properties::Actual_Memory_Binding",
        "kind": "Property",
        "inherit": true,
        "propertyType": {
          "kind": "ListType",
          "propertyType": {
            "kind": "ReferenceType",
            "references": [
              "memory",
              "system",
              "processor",
              "virtual processor"
            ]
          }
        },
        "appliesTo": [
          "memory",
          "thread",
          "thread group",
          "process",
          "system",
          "processor",
          "virtual processor",
          "device",
          "data",
          "data port",
          "event data port",
          "subprogram",
          "subprogram group"
        ]
      },
      {
        "name": "Deployment_Properties::Allowed_Connection_Binding_Class",
        "kind": "Property",
        "inherit": true,
        "propertyType": {
          "kind": "ListType",
          "propertyType": {
            "kind": "ClassifierType",
            "classifiers": [
              "processor",
              "virtual processor",
              "bus",
              "virtual bus",
              "device",
              "memory",
              "system"
            ]
          }
        },
        "appliesTo": [
          "feature",
          "connection",
          "thread",
          "thread group",
          "process",
          "system",
          "virtual bus"
        ]
      },
      {
        "name": "Deployment_Properties::Allowed_Connection_Binding",
        "kind": "Property",
        "inherit": true,
        "propertyType": {
          "kind": "ListType",
          "propertyType": {
            "kind": "ReferenceType",
            "references": [
              "processor",
              "virtual processor",
              "bus",
              "virtual bus",
              "device",
              "memory",
              "system"
            ]
          }
        },
        "appliesTo": [
          "feature",
          "connection",
          "thread",
          "thread group",
          "process",
          "system",
          "virtual bus"
        ]
      },
      {
        "name": "Deployment_Properties::Actual_Connection_Binding",
        "kind": "Property",
        "inherit": true,
        "propertyType": {
          "kind": "ListType",
          "propertyType": {
            "kind": "ReferenceType",
            "references": [
              "processor",
              "virtual processor",
              "bus",
              "virtual bus",
              "device",
              "memory",
              "system"
            ]
          }
        },
        "appliesTo": [
          "feature",
          "connection",
          "thread",
          "thread group",
          "process",
          "system",
          "virtual bus"
        ]
      },
      {
        "name": "Deployment_Properties::Actual_Function_Binding",
        "kind": "Property",
        "inherit": true,
        "propertyType": {
          "kind": "ListType",
          "propertyType": {
            "kind": "ReferenceType",
            "references": [
              "processor",
              "virtual processor",
              "bus",
              "virtual bus",
              "device",
              "memory",
              "system",
              "process",
              "thread",
              "feature",
              "abstract"
            ]
          }
        },
        "appliesTo": [
          "subprogram",
          "thread",
          "thread group",
          "process",
          "system",
          "abstract",
          "feature"
        ]
      },
      {
        "name": "Deployment_Properties::Allowed_Subprogram_Call",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "ListType",
          "propertyType": {
            "kind": "ReferenceType",
            "references": [
              "subprogram"
            ]
          }
        },
        "appliesTo": [
          "subprogram access"
        ]
      },
      {
        "name": "Deployment_Properties::Actual_Subprogram_Call",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "ReferenceType",
          "references": [
            "subprogram"
          ]
        },
        "appliesTo": [
          "subprogram access"
        ]
      },
      {
        "name": "Deployment_Properties::Allowed_Subprogram_Call_Binding",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "ListType",
          "propertyType": {
            "kind": "ReferenceType",
            "references": [
              "bus",
              "processor",
              "device"
            ]
          }
        },
        "appliesTo": [
          "subprogram",
          "thread",
          "thread group",
          "process",
          "system"
        ]
      },
      {
        "name": "Deployment_Properties::Actual_Subprogram_Call_Binding",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "ListType",
          "propertyType": {
            "kind": "ReferenceType",
            "references": [
              "bus",
              "processor",
              "memory",
              "device"
            ]
          }
        },
        "appliesTo": [
          "subprogram"
        ]
      },
      {
        "name": "Deployment_Properties::Provided_Virtual_Bus_Class",
        "kind": "Property",
        "inherit": true,
        "propertyType": {
          "kind": "ListType",
          "propertyType": {
            "kind": "ClassifierType",
            "classifiers": [
              "virtual bus"
            ]
          }
        },
        "appliesTo": [
          "bus",
          "virtual bus",
          "processor",
          "virtual processor",
          "device",
          "memory",
          "system"
        ]
      },
      {
        "name": "Deployment_Properties::Required_Virtual_Bus_Class",
        "kind": "Property",
        "inherit": true,
        "propertyType": {
          "kind": "ListType",
          "propertyType": {
            "kind": "ClassifierType",
            "classifiers": [
              "virtual bus"
            ]
          }
        },
        "appliesTo": [
          "virtual bus",
          "connection",
          "port",
          "thread",
          "thread group",
          "process",
          "system",
          "device"
        ]
      },
      {
        "name": "Deployment_Properties::Provided_Connection_Quality_Of_Service",
        "kind": "Property",
        "inherit": true,
        "propertyType": {
          "kind": "ListType",
          "propertyType": "AADL_Project::Supported_Connection_QoS"
        },
        "appliesTo": [
          "bus",
          "virtual bus",
          "processor",
          "virtual processor",
          "system",
          "device",
          "memory"
        ]
      },
      {
        "name": "Deployment_Properties::Required_Connection_Quality_Of_Service",
        "kind": "Property",
        "inherit": true,
        "propertyType": {
          "kind": "ListType",
          "propertyType": "AADL_Project::Supported_Connection_QoS"
        },
        "appliesTo": [
          "port",
          "connection",
          "virtual bus",
          "thread",
          "thread group",
          "process",
          "system",
          "device"
        ]
      },
      {
        "name": "Deployment_Properties::Not_Collocated",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "RecordType",
          "fields": [
            {
              "name": "Targets",
              "propertyType": {
                "kind": "ListType",
                "propertyType": {
                  "kind": "ReferenceType",
                  "references": [
                    "data",
                    "thread",
                    "process",
                    "system",
                    "connection"
                  ]
                }
              }
            },
            {
              "name": "Location",
              "propertyType": {
                "kind": "ClassifierType",
                "classifiers": [
                  "processor",
                  "memory",
                  "bus",
                  "system"
                ]
              }
            }
          ]
        },
        "appliesTo": [
          "process",
          "system"
        ]
      },
      {
        "name": "Deployment_Properties::Collocated",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "RecordType",
          "fields": [
            {
              "name": "Targets",
              "propertyType": {
                "kind": "ListType",
                "propertyType": {
                  "kind": "ReferenceType",
                  "references": [
                    "data",
                    "thread",
                    "process",
                    "system",
                    "connection"
                  ]
                }
              }
            },
            {
              "name": "Location",
              "propertyType": {
                "kind": "ClassifierType",
                "classifiers": [
                  "processor",
                  "memory",
                  "bus",
                  "system"
                ]
              }
            }
          ]
        },
        "appliesTo": [
          "process",
          "system"
        ]
      },
      {
        "name": "Deployment_Properties::Allowed_Connection_Type",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "ListType",
          "propertyType": {
            "kind": "EnumerationType",
            "values": [
              "Sampled_Data_Connection",
              "Immediate_Data_Connection",
              "Delayed_Data_Connection",
              "Port_Connection",
              "Data_Access_Connection",
              "Subprogram_Access_Connection"
            ]
          }
        },
        "appliesTo": [
          "bus",
          "device"
        ]
      },
      {
        "name": "Deployment_Properties::Allowed_Dispatch_Protocol",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "ListType",
          "propertyType": "AADL_Project::Supported_Dispatch_Protocols"
        },
        "appliesTo": [
          "processor",
          "virtual processor"
        ]
      },
      {
        "name": "Deployment_Properties::Allowed_Period",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "ListType",
          "propertyType": "AADL_Project::Time_Range"
        },
        "appliesTo": [
          "processor",
          "system",
          "virtual processor"
        ]
      },
      {
        "name": "Deployment_Properties::Allowed_Physical_Access_Class",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "ListType",
          "propertyType": {
            "kind": "ClassifierType",
            "classifiers": [
              "device",
              "processor",
              "memory",
              "bus"
            ]
          }
        },
        "appliesTo": [
          "bus"
        ]
      },
      {
        "name": "Deployment_Properties::Allowed_Physical_Access",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "ListType",
          "propertyType": {
            "kind": "ReferenceType",
            "references": [
              "device",
              "processor",
              "memory",
              "bus"
            ]
          }
        },
        "appliesTo": [
          "bus"
        ]
      },
      {
        "name": "Deployment_Properties::Memory_Protocol",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "EnumerationType",
          "values": [
            "execute_only",
            "read_only",
            "write_only",
            "read_write"
          ]
        },
        "appliesTo": [
          "memory"
        ]
      },
      {
        "name": "Deployment_Properties::Runtime_Protection_Support",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "AadlBoolean"
        },
        "appliesTo": [
          "processor",
          "virtual processor"
        ]
      },
      {
        "name": "Deployment_Properties::Scheduling_Protocol",
        "kind": "Property",
        "inherit": true,
        "propertyType": {
          "kind": "ListType",
          "propertyType": "AADL_Project::Supported_Scheduling_Protocols"
        },
        "appliesTo": [
          "virtual processor",
          "processor",
          "system"
        ]
      },
      {
        "name": "Deployment_Properties::Preemptive_Scheduler",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "AadlBoolean"
        },
        "appliesTo": [
          "processor"
        ]
      },
      {
        "name": "Deployment_Properties::Thread_Limit",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "AadlInteger"
        },
        "appliesTo": [
          "processor",
          "virtual processor"
        ]
      },
      {
        "name": "Deployment_Properties::Priority_Map",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "ListType",
          "propertyType": "Deployment_Properties::Priority_Mapping"
        },
        "appliesTo": [
          "processor"
        ]
      },
      {
        "name": "Deployment_Properties::Priority_Range",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "RangeType",
          "numberType": {
            "kind": "AadlInteger"
          }
        },
        "appliesTo": [
          "processor",
          "virtual processor"
        ]
      }
    ],
    "propertyTypes": [
      {
        "name": "Deployment_Properties::Priority_Mapping",
        "kind": "PropertyType",
        "type": {
          "kind": "RecordType",
          "fields": [
            {
              "name": "Aadl_Priority",
              "propertyType": {
                "kind": "AadlInteger"
              }
            },
            {
              "name": "RTOS_Priority",
              "propertyType": {
                "kind": "AadlInteger"
              }
            }
          ]
        }
      }
    ]
  },
  {
    "name": "Modeling_Properties",
    "kind": "PropertySet",
    "properties": [
      {
        "name": "Modeling_Properties::Acceptable_Array_Size",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "ListType",
          "propertyType": "Modeling_Properties::Array_Size_Range"
        },
        "appliesTo": [
          "subcomponent",
          "feature"
        ]
      },
      {
        "name": "Modeling_Properties::Classifier_Matching_Rule",
        "kind": "Property",
        "inherit": true,
        "propertyType": {
          "kind": "EnumerationType",
          "values": [
            "Classifier_Match",
            "Equivalence",
            "Subset",
            "Conversion"
          ]
        },
        "appliesTo": [
          "connection",
          "component implementation"
        ]
      },
      {
        "name": "Modeling_Properties::Classifier_Substitution_Rule",
        "kind": "Property",
        "inherit": true,
        "propertyType": {
          "kind": "EnumerationType",
          "values": [
            "Classifier_Match",
            "Type_Extension",
            "Signature_Match"
          ]
        },
        "appliesTo": [
          "classifier",
          "subcomponent",
          "feature"
        ]
      },
      {
        "name": "Modeling_Properties::Implemented_As",
        "kind": "Property",
        "inherit": false,
        "propertyType": {
          "kind": "ClassifierType",
          "classifiers": [
            "system implementation",
            "abstract implementation"
          ]
        },
        "appliesTo": [
          "memory",
          "bus",
          "virtual bus",
          "device",
          "virtual processor",
          "processor",
          "system"
        ]
      },
      {
        "name": "Modeling_Properties::Prototype_Substitution_Rule",
        "kind": "Property",
        "inherit": true,
        "propertyType": {
          "kind": "EnumerationType",
          "values": [
            "Classifier_Match",
            "Type_Extension",
            "Signature_Match"
          ]
        },
        "appliesTo": [
          "prototype",
          "classifier"
        ]
      }
    ],
    "propertyTypes": [
      {
        "name": "Modeling_Properties::Array_Size_Range",
        "kind": "PropertyType",
        "type": {
          "kind": "RangeType",
          "numberType": {
            "kind": "AadlInteger"
          }
        }
      }
    ]
  }
]