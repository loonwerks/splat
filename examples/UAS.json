{
  "project": "Phase-2-UAV-Experimental-Platform-Transformed",
  "implementation": "UAS::UAS.Impl",
  "date": 1601660563471,
  "hash": "F��C\u00147��\u0019�\nO�39�",
  "modelUnits": [
    {
      "name": "UAS",
      "kind": "AadlPackage",
      "public": {
        "with": [
          "GS",
          "UAV",
          "UAS_Buses"
        ],
        "components": [
          {
            "name": "UAS::UAS",
            "localName": "UAS",
            "kind": "ComponentType",
            "category": "system"
          },
          {
            "packageName": "UAS",
            "name": "UAS::UAS.Impl",
            "localName": "UAS.Impl",
            "kind": "ComponentImplementation",
            "category": "system",
            "subcomponents": [
              {
                "name": "RFA",
                "kind": "Subcomponent",
                "category": "bus",
                "classifier": "UAS_Buses::RF_Bus.Impl"
              },
              {
                "name": "GND",
                "kind": "Subcomponent",
                "category": "system",
                "classifier": "GS::GroundStation.Impl"
              },
              {
                "name": "UAV",
                "kind": "Subcomponent",
                "category": "system",
                "classifier": "UAV::UAV.Impl"
              }
            ],
            "connections": [
              {
                "name": "bac1",
                "kind": "busAccess",
                "source": "RFA",
                "destination": "GND.RFA",
                "bidirectional": true
              },
              {
                "name": "bac2",
                "kind": "busAccess",
                "source": "RFA",
                "destination": "UAV.RFA",
                "bidirectional": true
              },
              {
                "name": "c1",
                "kind": "PortConnection",
                "source": "GND.radio_send",
                "destination": "UAV.radio_recv",
                "bidirectional": false
              },
              {
                "name": "c2",
                "kind": "PortConnection",
                "source": "UAV.radio_send",
                "destination": "GND.radio_recv",
                "bidirectional": false
              }
            ],
            "properties": [
              {
                "name": "Deployment_Properties::Actual_Connection_Binding",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "ListValue",
                  "value": [
                    {
                      "kind": "ReferenceValue",
                      "value": "RFA"
                    }
                  ]
                },
                "appliesTo": [
                  "c1",
                  "c2"
                ]
              }
            ],
            "annexes": [
              {
                "name": "resolute",
                "kind": "AnnexSubclause",
                "sourceText": "{**\n\t\t\tcheck CASE_Tools\n\t\t**}"
              }
            ]
          }
        ]
      }
    },
    {
      "name": "GS",
      "kind": "AadlPackage",
      "public": {
        "with": [
          "UAS_Buses",
          "GS_SW_Pkg",
          "CASE_Model_Transformations"
        ],
        "components": [
          {
            "name": "GS::Radio",
            "localName": "Radio",
            "kind": "ComponentType",
            "category": "device",
            "features": [
              {
                "name": "recv_data_in",
                "kind": "EventDataPort",
                "classifier": null,
                "direction": "in"
              },
              {
                "name": "recv_data_out",
                "kind": "EventDataPort",
                "classifier": "CASE_Model_Transformations::CASE_RF_Msg.Impl",
                "direction": "out"
              },
              {
                "name": "send_data_in",
                "kind": "EventDataPort",
                "classifier": "CASE_Model_Transformations::CASE_RF_Msg.Impl",
                "direction": "in"
              },
              {
                "name": "send_data_out",
                "kind": "EventDataPort",
                "classifier": null,
                "direction": "out"
              },
              {
                "name": "GSA",
                "kind": "BusAccess",
                "accessType": "requires",
                "bus": "GS::GS_Bus.Impl"
              },
              {
                "name": "RFA",
                "kind": "BusAccess",
                "accessType": "requires",
                "bus": "UAS_Buses::RF_Bus.Impl"
              }
            ]
          },
          {
            "packageName": "GS",
            "name": "GS::Radio.Impl",
            "localName": "Radio.Impl",
            "kind": "ComponentImplementation",
            "category": "device"
          },
          {
            "name": "GS::GS_Proc",
            "localName": "GS_Proc",
            "kind": "ComponentType",
            "category": "processor",
            "features": [
              {
                "name": "GSA",
                "kind": "BusAccess",
                "accessType": "requires",
                "bus": "GS::GS_Bus.Impl"
              }
            ]
          },
          {
            "packageName": "GS",
            "name": "GS::GS_Proc.Impl",
            "localName": "GS_Proc.Impl",
            "kind": "ComponentImplementation",
            "category": "processor"
          },
          {
            "name": "GS::GS_Mem",
            "localName": "GS_Mem",
            "kind": "ComponentType",
            "category": "memory",
            "features": [
              {
                "name": "GSA",
                "kind": "BusAccess",
                "accessType": "requires",
                "bus": "GS::GS_Bus.Impl"
              }
            ]
          },
          {
            "packageName": "GS",
            "name": "GS::GS_Mem.Impl",
            "localName": "GS_Mem.Impl",
            "kind": "ComponentImplementation",
            "category": "memory"
          },
          {
            "name": "GS::GS_Bus",
            "localName": "GS_Bus",
            "kind": "ComponentType",
            "category": "bus"
          },
          {
            "packageName": "GS",
            "name": "GS::GS_Bus.Impl",
            "localName": "GS_Bus.Impl",
            "kind": "ComponentImplementation",
            "category": "bus"
          },
          {
            "name": "GS::GroundStation",
            "localName": "GroundStation",
            "kind": "ComponentType",
            "category": "system",
            "features": [
              {
                "name": "RFA",
                "kind": "BusAccess",
                "accessType": "requires",
                "bus": "UAS_Buses::RF_Bus.Impl"
              },
              {
                "name": "radio_recv",
                "kind": "EventDataPort",
                "classifier": null,
                "direction": "in"
              },
              {
                "name": "radio_send",
                "kind": "EventDataPort",
                "classifier": null,
                "direction": "out"
              }
            ]
          },
          {
            "packageName": "GS",
            "name": "GS::GroundStation.Impl",
            "localName": "GroundStation.Impl",
            "kind": "ComponentImplementation",
            "category": "system",
            "subcomponents": [
              {
                "name": "BUS_HW",
                "kind": "Subcomponent",
                "category": "bus",
                "classifier": "GS::GS_Bus.Impl"
              },
              {
                "name": "RADIO_HW",
                "kind": "Subcomponent",
                "category": "device",
                "classifier": "GS::Radio.Impl"
              },
              {
                "name": "MEM_HW",
                "kind": "Subcomponent",
                "category": "memory",
                "classifier": "GS::GS_Mem.Impl"
              },
              {
                "name": "PROC_SW",
                "kind": "Subcomponent",
                "category": "process",
                "classifier": "GS_SW_Pkg::GS_SW.Impl"
              },
              {
                "name": "PROC_HW",
                "kind": "Subcomponent",
                "category": "processor",
                "classifier": "GS::GS_Proc.Impl"
              }
            ],
            "connections": [
              {
                "name": "bac1",
                "kind": "busAccess",
                "source": "RADIO_HW.GSA",
                "destination": "BUS_HW",
                "bidirectional": true
              },
              {
                "name": "bac3",
                "kind": "busAccess",
                "source": "PROC_HW.GSA",
                "destination": "BUS_HW",
                "bidirectional": true
              },
              {
                "name": "bac4",
                "kind": "busAccess",
                "source": "MEM_HW.GSA",
                "destination": "BUS_HW",
                "bidirectional": true
              },
              {
                "name": "bac6",
                "kind": "busAccess",
                "source": "RADIO_HW.RFA",
                "destination": "RFA",
                "bidirectional": true
              },
              {
                "name": "c1",
                "kind": "PortConnection",
                "source": "PROC_SW.send_data",
                "destination": "RADIO_HW.send_data_in",
                "bidirectional": false
              },
              {
                "name": "c2",
                "kind": "PortConnection",
                "source": "RADIO_HW.send_data_out",
                "destination": "radio_send",
                "bidirectional": false
              },
              {
                "name": "c3",
                "kind": "PortConnection",
                "source": "radio_recv",
                "destination": "RADIO_HW.recv_data_in",
                "bidirectional": false
              },
              {
                "name": "c4",
                "kind": "PortConnection",
                "source": "RADIO_HW.recv_data_out",
                "destination": "PROC_SW.recv_data",
                "bidirectional": false
              }
            ],
            "properties": [
              {
                "name": "Deployment_Properties::Actual_Processor_Binding",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "ListValue",
                  "value": [
                    {
                      "kind": "ReferenceValue",
                      "value": "PROC_HW"
                    }
                  ]
                },
                "appliesTo": [
                  "PROC_SW"
                ]
              },
              {
                "name": "Deployment_Properties::Actual_Memory_Binding",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "ListValue",
                  "value": [
                    {
                      "kind": "ReferenceValue",
                      "value": "MEM_HW"
                    }
                  ]
                },
                "appliesTo": [
                  "PROC_SW"
                ]
              },
              {
                "name": "Deployment_Properties::Actual_Connection_Binding",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "ListValue",
                  "value": [
                    {
                      "kind": "ReferenceValue",
                      "value": "BUS_HW"
                    }
                  ]
                },
                "appliesTo": [
                  "c1",
                  "c4"
                ]
              }
            ]
          }
        ]
      }
    },
    {
      "name": "UAS_Buses",
      "kind": "AadlPackage",
      "public": {
        "with": [
          "CASE_Properties"
        ],
        "components": [
          {
            "name": "UAS_Buses::RF_Bus",
            "localName": "RF_Bus",
            "kind": "ComponentType",
            "category": "bus"
          },
          {
            "packageName": "UAS_Buses",
            "name": "UAS_Buses::RF_Bus.Impl",
            "localName": "RF_Bus.Impl",
            "kind": "ComponentImplementation",
            "category": "bus"
          },
          {
            "name": "UAS_Buses::Serial_Bus",
            "localName": "Serial_Bus",
            "kind": "ComponentType",
            "category": "bus",
            "properties": [
              {
                "name": "CASE_Properties::Comm_Modality",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "EnumerationLiteral",
                  "value": "SERIAL"
                }
              }
            ]
          },
          {
            "packageName": "UAS_Buses",
            "name": "UAS_Buses::Serial_Bus.Impl",
            "localName": "Serial_Bus.Impl",
            "kind": "ComponentImplementation",
            "category": "bus"
          },
          {
            "name": "UAS_Buses::Wifi_Bus",
            "localName": "Wifi_Bus",
            "kind": "ComponentType",
            "category": "bus",
            "properties": [
              {
                "name": "CASE_Properties::Comm_Modality",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "EnumerationLiteral",
                  "value": "WIFI"
                }
              }
            ]
          },
          {
            "packageName": "UAS_Buses",
            "name": "UAS_Buses::Wifi_Bus.Impl",
            "localName": "Wifi_Bus.Impl",
            "kind": "ComponentImplementation",
            "category": "bus"
          }
        ]
      }
    },
    {
      "name": "CASE_Properties",
      "kind": "PropertySet",
      "properties": [
        {
          "name": "CASE_Properties::Component_Type",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "EnumerationType",
            "values": [
              "FILTER",
              "ATTESTATION",
              "MONITOR",
              "VIRTUAL_MACHINE",
              "COMM_DRIVER",
              "SEL4",
              "SWITCH"
            ]
          },
          "appliesTo": [
            "system",
            "process",
            "thread",
            "thread group",
            "device",
            "abstract",
            "processor",
            "virtual processor"
          ]
        },
        {
          "name": "CASE_Properties::Component_Impl",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlString"
          },
          "appliesTo": [
            "system",
            "process",
            "thread",
            "thread group",
            "abstract"
          ]
        },
        {
          "name": "CASE_Properties::Component_Spec",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "ListType",
            "propertyType": {
              "kind": "AadlString"
            }
          },
          "appliesTo": [
            "system",
            "process",
            "thread",
            "abstract"
          ]
        },
        {
          "name": "CASE_Properties::Cache_Timeout",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "system",
            "process",
            "thread",
            "thread group",
            "device",
            "abstract"
          ]
        },
        {
          "name": "CASE_Properties::Cache_Size",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "system",
            "process",
            "thread",
            "thread group",
            "device",
            "abstract"
          ]
        },
        {
          "name": "CASE_Properties::Comm_Modality",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "EnumerationType",
            "values": [
              "RF",
              "WIFI",
              "WIRED_ETHERNET",
              "SERIAL",
              "BT",
              "NFC"
            ]
          },
          "appliesTo": [
            "bus"
          ]
        },
        {
          "name": "CASE_Properties::OS",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlString"
          },
          "appliesTo": [
            "processor",
            "virtual processor"
          ]
        },
        {
          "name": "CASE_Properties::Monitor_Latched",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlBoolean"
          },
          "appliesTo": [
            "system",
            "process",
            "thread",
            "thread group",
            "device",
            "abstract"
          ]
        },
        {
          "name": "CASE_Properties::Trust_Level",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "feature",
            "connection",
            "classifier",
            "subcomponent"
          ]
        },
        {
          "name": "CASE_Properties::Control_Level",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "feature",
            "connection",
            "classifier",
            "subcomponent"
          ]
        },
        {
          "name": "CASE_Properties::Data_Classification",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "EnumerationType",
            "values": [
              "TOP_SECRET",
              "SECRET",
              "CONFIDENTIAL",
              "FOUO",
              "TIME_SENSITIVE"
            ]
          },
          "appliesTo": [
            "feature",
            "connection",
            "subcomponent",
            "classifier"
          ]
        }
      ]
    },
    {
      "name": "GS_SW_Pkg",
      "kind": "AadlPackage",
      "public": {
        "with": [
          "CASE_Properties",
          "CASE_Model_Transformations",
          "CMASI",
          "SendMessagesService_Pkg"
        ],
        "components": [
          {
            "name": "GS_SW_Pkg::GSRadioDriver",
            "localName": "GSRadioDriver",
            "kind": "ComponentType",
            "category": "thread",
            "features": [
              {
                "name": "recv_data",
                "kind": "EventDataPort",
                "classifier": "CASE_Model_Transformations::CASE_RF_Msg.Impl",
                "direction": "in"
              },
              {
                "name": "send_data",
                "kind": "EventDataPort",
                "classifier": "CASE_Model_Transformations::CASE_RF_Msg.Impl",
                "direction": "out"
              },
              {
                "name": "AutomationRequest",
                "kind": "EventDataPort",
                "classifier": "CMASI::AutomationRequest.i",
                "direction": "in"
              },
              {
                "name": "OperatingRegion",
                "kind": "EventDataPort",
                "classifier": "CMASI::OperatingRegion.i",
                "direction": "in"
              },
              {
                "name": "LineSearchTask",
                "kind": "EventDataPort",
                "classifier": "CMASI::LineSearchTask.i",
                "direction": "in"
              }
            ],
            "properties": [
              {
                "name": "Thread_Properties::Dispatch_Protocol",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "EnumerationLiteral",
                  "value": "Sporadic"
                }
              },
              {
                "name": "CASE_Properties::Component_Type",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "EnumerationLiteral",
                  "value": "COMM_DRIVER"
                }
              }
            ]
          },
          {
            "packageName": "GS_SW_Pkg",
            "name": "GS_SW_Pkg::GSRadioDriver.i",
            "localName": "GSRadioDriver.i",
            "kind": "ComponentImplementation",
            "category": "thread"
          },
          {
            "name": "GS_SW_Pkg::GS_SW",
            "localName": "GS_SW",
            "kind": "ComponentType",
            "category": "process",
            "features": [
              {
                "name": "recv_data",
                "kind": "EventDataPort",
                "classifier": "CASE_Model_Transformations::CASE_RF_Msg.Impl",
                "direction": "in"
              },
              {
                "name": "send_data",
                "kind": "EventDataPort",
                "classifier": "CASE_Model_Transformations::CASE_RF_Msg.Impl",
                "direction": "out"
              }
            ]
          },
          {
            "packageName": "GS_SW_Pkg",
            "name": "GS_SW_Pkg::GS_SW.Impl",
            "localName": "GS_SW.Impl",
            "kind": "ComponentImplementation",
            "category": "process",
            "subcomponents": [
              {
                "name": "RadioDriver",
                "kind": "Subcomponent",
                "category": "thread",
                "classifier": "GS_SW_Pkg::GSRadioDriver.i"
              },
              {
                "name": "SendMessagesServiceGS",
                "kind": "Subcomponent",
                "category": "thread",
                "classifier": "SendMessagesService_Pkg::SendMessagesServiceGS"
              }
            ],
            "connections": [
              {
                "name": "c_GS_2_RD",
                "kind": "PortConnection",
                "source": "recv_data",
                "destination": "RadioDriver.recv_data",
                "bidirectional": false
              },
              {
                "name": "c_RD_2_GS",
                "kind": "PortConnection",
                "source": "RadioDriver.send_data",
                "destination": "send_data",
                "bidirectional": false
              },
              {
                "name": "c_SMS_2_RD_01",
                "kind": "PortConnection",
                "source": "SendMessagesServiceGS.OperatingRegion",
                "destination": "RadioDriver.OperatingRegion",
                "bidirectional": false
              },
              {
                "name": "c_SMS_2_RD_02",
                "kind": "PortConnection",
                "source": "SendMessagesServiceGS.LineSearchTask",
                "destination": "RadioDriver.LineSearchTask",
                "bidirectional": false
              },
              {
                "name": "c_SMS_2_RD_03",
                "kind": "PortConnection",
                "source": "SendMessagesServiceGS.AutomationRequest",
                "destination": "RadioDriver.AutomationRequest",
                "bidirectional": false
              }
            ]
          }
        ]
      }
    },
    {
      "name": "CASE_Model_Transformations",
      "kind": "AadlPackage",
      "public": {
        "with": [
          "Base_Types",
          "CASE_Properties",
          "CM_Property_Set",
          "HAMR"
        ],
        "components": [
          {
            "name": "CASE_Model_Transformations::CASE_MsgHeader",
            "localName": "CASE_MsgHeader",
            "kind": "ComponentType",
            "category": "data"
          },
          {
            "packageName": "CASE_Model_Transformations",
            "name": "CASE_Model_Transformations::CASE_MsgHeader.Impl",
            "localName": "CASE_MsgHeader.Impl",
            "kind": "ComponentImplementation",
            "category": "data",
            "subcomponents": [
              {
                "name": "src",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::Integer_32"
              },
              {
                "name": "dst",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::Integer_32"
              },
              {
                "name": "trusted",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::Boolean"
              },
              {
                "name": "HMAC",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::Boolean"
              }
            ]
          },
          {
            "name": "CASE_Model_Transformations::CASE_RF_Msg",
            "localName": "CASE_RF_Msg",
            "kind": "ComponentType",
            "category": "data"
          },
          {
            "packageName": "CASE_Model_Transformations",
            "name": "CASE_Model_Transformations::CASE_RF_Msg.Impl",
            "localName": "CASE_RF_Msg.Impl",
            "kind": "ComponentImplementation",
            "category": "data",
            "subcomponents": [
              {
                "name": "header",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "CASE_Model_Transformations::CASE_MsgHeader.Impl"
              },
              {
                "name": "payload",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": null
              }
            ]
          },
          {
            "name": "CASE_Model_Transformations::CASE_UART_Msg",
            "localName": "CASE_UART_Msg",
            "kind": "ComponentType",
            "category": "data"
          },
          {
            "packageName": "CASE_Model_Transformations",
            "name": "CASE_Model_Transformations::CASE_UART_Msg.Impl",
            "localName": "CASE_UART_Msg.Impl",
            "kind": "ComponentImplementation",
            "category": "data",
            "subcomponents": [
              {
                "name": "crc",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::Boolean"
              },
              {
                "name": "message",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::String"
              }
            ]
          },
          {
            "name": "CASE_Model_Transformations::CASE_WIFI_Msg",
            "localName": "CASE_WIFI_Msg",
            "kind": "ComponentType",
            "category": "data"
          },
          {
            "packageName": "CASE_Model_Transformations",
            "name": "CASE_Model_Transformations::CASE_WIFI_Msg.Impl",
            "localName": "CASE_WIFI_Msg.Impl",
            "kind": "ComponentImplementation",
            "category": "data",
            "subcomponents": [
              {
                "name": "crc",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::Boolean"
              },
              {
                "name": "message",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::String"
              }
            ]
          },
          {
            "name": "CASE_Model_Transformations::CASE_AttestationRequestMsg",
            "localName": "CASE_AttestationRequestMsg",
            "kind": "ComponentType",
            "category": "data"
          },
          {
            "packageName": "CASE_Model_Transformations",
            "name": "CASE_Model_Transformations::CASE_AttestationRequestMsg.Impl",
            "localName": "CASE_AttestationRequestMsg.Impl",
            "kind": "ComponentImplementation",
            "category": "data",
            "subcomponents": [
              {
                "name": "header",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "CASE_Model_Transformations::CASE_MsgHeader.Impl"
              }
            ],
            "properties": [
              {
                "name": "HAMR::Bit_Codec_Max_Size",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "PropertyConstant",
                  "value": "CASE_Attestation_Bit_Codec_Max_Size"
                }
              }
            ]
          },
          {
            "name": "CASE_Model_Transformations::CASE_AttestationResponseMsg",
            "localName": "CASE_AttestationResponseMsg",
            "kind": "ComponentType",
            "category": "data"
          },
          {
            "packageName": "CASE_Model_Transformations",
            "name": "CASE_Model_Transformations::CASE_AttestationResponseMsg.Impl",
            "localName": "CASE_AttestationResponseMsg.Impl",
            "kind": "ComponentImplementation",
            "category": "data",
            "subcomponents": [
              {
                "name": "header",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "CASE_Model_Transformations::CASE_MsgHeader.Impl"
              },
              {
                "name": "status",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::Boolean"
              }
            ],
            "properties": [
              {
                "name": "HAMR::Bit_Codec_Max_Size",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "PropertyConstant",
                  "value": "CASE_Attestation_Bit_Codec_Max_Size"
                }
              }
            ]
          },
          {
            "name": "CASE_Model_Transformations::CASE_AttestationCacheRecord",
            "localName": "CASE_AttestationCacheRecord",
            "kind": "ComponentType",
            "category": "data"
          },
          {
            "packageName": "CASE_Model_Transformations",
            "name": "CASE_Model_Transformations::CASE_AttestationCacheRecord.Impl",
            "localName": "CASE_AttestationCacheRecord.Impl",
            "kind": "ComponentImplementation",
            "category": "data",
            "subcomponents": [
              {
                "name": "src",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::Integer_32"
              },
              {
                "name": "trusted",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::Integer_32"
              },
              {
                "name": "timeout",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::Integer_32"
              }
            ]
          },
          {
            "name": "CASE_Model_Transformations::CASE_AttestationCache",
            "localName": "CASE_AttestationCache",
            "kind": "ComponentType",
            "category": "data"
          },
          {
            "packageName": "CASE_Model_Transformations",
            "name": "CASE_Model_Transformations::CASE_AttestationCache.Impl",
            "localName": "CASE_AttestationCache.Impl",
            "kind": "ComponentImplementation",
            "category": "data",
            "subcomponents": [
              {
                "name": "src1",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "CASE_Model_Transformations::CASE_AttestationCacheRecord.Impl"
              },
              {
                "name": "src2",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "CASE_Model_Transformations::CASE_AttestationCacheRecord.Impl"
              },
              {
                "name": "src3",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "CASE_Model_Transformations::CASE_AttestationCacheRecord.Impl"
              },
              {
                "name": "src4",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "CASE_Model_Transformations::CASE_AttestationCacheRecord.Impl"
              },
              {
                "name": "src5",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "CASE_Model_Transformations::CASE_AttestationCacheRecord.Impl"
              },
              {
                "name": "src6",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "CASE_Model_Transformations::CASE_AttestationCacheRecord.Impl"
              }
            ]
          }
        ],
        "annexes": [
          {
            "name": "Agree",
            "kind": "AnnexLibrary",
            "parsedAnnexLibrary": {
              "statements": [
                {
                  "kind": "ConstStatement",
                  "name": "NULL_ID",
                  "type": {
                    "kind": "PrimType",
                    "primType": "int"
                  },
                  "expr": {
                    "kind": "IntLitExpr",
                    "value": "0"
                  }
                },
                {
                  "kind": "ConstStatement",
                  "name": "NULL_HEADER",
                  "type": {
                    "kind": "DoubleDotRef",
                    "name": "CASE_Model_Transformations::CASE_MsgHeader.Impl"
                  },
                  "expr": {
                    "kind": "RecordLitExpr",
                    "recordType": {
                      "kind": "DoubleDotRef",
                      "name": "CASE_Model_Transformations::CASE_MsgHeader.Impl"
                    },
                    "value": {
                      "src": {
                        "kind": "NamedElmExpr",
                        "name": "NULL_ID"
                      },
                      "dst": {
                        "kind": "NamedElmExpr",
                        "name": "NULL_ID"
                      },
                      "trusted": {
                        "kind": "BoolLitExpr",
                        "value": "false"
                      },
                      "HMAC": {
                        "kind": "BoolLitExpr",
                        "value": "false"
                      }
                    }
                  }
                },
                {
                  "kind": "FnDef",
                  "packageName": "CASE_Model_Transformations",
                  "name": "NULL_MESSAGE",
                  "args": [
                    {
                      "name": "header",
                      "type": {
                        "kind": "DoubleDotRef",
                        "name": "CASE_Model_Transformations::CASE_MsgHeader.Impl"
                      }
                    }
                  ],
                  "type": {
                    "kind": "PrimType",
                    "primType": "bool"
                  },
                  "expr": {
                    "kind": "BinaryExpr",
                    "left": {
                      "kind": "NamedElmExpr",
                      "name": "header"
                    },
                    "op": "=",
                    "right": {
                      "kind": "NamedElmExpr",
                      "name": "NULL_HEADER"
                    }
                  }
                },
                {
                  "kind": "ConstStatement",
                  "name": "NULL_MSG_TYPE",
                  "type": {
                    "kind": "PrimType",
                    "primType": "int"
                  },
                  "expr": {
                    "kind": "IntLitExpr",
                    "value": "0"
                  }
                },
                {
                  "kind": "ConstStatement",
                  "name": "AM_REQUEST_MSG_TYPE",
                  "type": {
                    "kind": "PrimType",
                    "primType": "int"
                  },
                  "expr": {
                    "kind": "IntLitExpr",
                    "value": "1"
                  }
                },
                {
                  "kind": "ConstStatement",
                  "name": "AM_RESPONSE_MSG_TYPE",
                  "type": {
                    "kind": "PrimType",
                    "primType": "int"
                  },
                  "expr": {
                    "kind": "IntLitExpr",
                    "value": "2"
                  }
                },
                {
                  "kind": "ConstStatement",
                  "name": "FREE_MSG_TYPE",
                  "type": {
                    "kind": "PrimType",
                    "primType": "int"
                  },
                  "expr": {
                    "kind": "IntLitExpr",
                    "value": "3"
                  }
                },
                {
                  "kind": "ConstStatement",
                  "name": "NULL_AM_REQUEST_MESSAGE",
                  "type": {
                    "kind": "DoubleDotRef",
                    "name": "CASE_Model_Transformations::CASE_AttestationRequestMsg.Impl"
                  },
                  "expr": {
                    "kind": "RecordLitExpr",
                    "recordType": {
                      "kind": "DoubleDotRef",
                      "name": "CASE_Model_Transformations::CASE_AttestationRequestMsg.Impl"
                    },
                    "value": {
                      "header": {
                        "kind": "NamedElmExpr",
                        "name": "NULL_HEADER"
                      }
                    }
                  }
                },
                {
                  "kind": "ConstStatement",
                  "name": "NULL_CACHE",
                  "type": {
                    "kind": "DoubleDotRef",
                    "name": "CASE_Model_Transformations::CASE_AttestationCache.Impl"
                  },
                  "expr": {
                    "kind": "RecordLitExpr",
                    "recordType": {
                      "kind": "DoubleDotRef",
                      "name": "CASE_Model_Transformations::CASE_AttestationCache.Impl"
                    },
                    "value": {
                      "src1": {
                        "kind": "NamedElmExpr",
                        "name": "NULL_RECORD"
                      },
                      "src2": {
                        "kind": "NamedElmExpr",
                        "name": "NULL_RECORD"
                      },
                      "src3": {
                        "kind": "NamedElmExpr",
                        "name": "NULL_RECORD"
                      },
                      "src4": {
                        "kind": "NamedElmExpr",
                        "name": "NULL_RECORD"
                      },
                      "src5": {
                        "kind": "NamedElmExpr",
                        "name": "NULL_RECORD"
                      },
                      "src6": {
                        "kind": "NamedElmExpr",
                        "name": "NULL_RECORD"
                      }
                    }
                  }
                },
                {
                  "kind": "ConstStatement",
                  "name": "NULL_RECORD",
                  "type": {
                    "kind": "DoubleDotRef",
                    "name": "CASE_Model_Transformations::CASE_AttestationCacheRecord.Impl"
                  },
                  "expr": {
                    "kind": "RecordLitExpr",
                    "recordType": {
                      "kind": "DoubleDotRef",
                      "name": "CASE_Model_Transformations::CASE_AttestationCacheRecord.Impl"
                    },
                    "value": {
                      "src": {
                        "kind": "NamedElmExpr",
                        "name": "NULL_ID"
                      },
                      "trusted": {
                        "kind": "NamedElmExpr",
                        "name": "AM_FAIL"
                      },
                      "timeout": {
                        "kind": "IntLitExpr",
                        "value": "0"
                      }
                    }
                  }
                },
                {
                  "kind": "NodeDef",
                  "name": "CACHE",
                  "args": [
                    {
                      "name": "new_cache",
                      "type": {
                        "kind": "DoubleDotRef",
                        "name": "CASE_Model_Transformations::CASE_AttestationCache.Impl"
                      }
                    }
                  ],
                  "returns": [
                    {
                      "name": "cache",
                      "type": {
                        "kind": "DoubleDotRef",
                        "name": "CASE_Model_Transformations::CASE_AttestationCache.Impl"
                      }
                    }
                  ],
                  "body": [
                    {
                      "kind": "NodeEq",
                      "left": [
                        {
                          "name": "cache",
                          "type": {
                            "kind": "DoubleDotRef",
                            "name": "CASE_Model_Transformations::CASE_AttestationCache.Impl"
                          }
                        }
                      ],
                      "expr": {
                        "kind": "IfThenElseExpr",
                        "if": {
                          "kind": "BinaryExpr",
                          "left": {
                            "kind": "NamedElmExpr",
                            "name": "new_cache"
                          },
                          "op": "=",
                          "right": {
                            "kind": "NamedElmExpr",
                            "name": "NULL_CACHE"
                          }
                        },
                        "then": {
                          "kind": "BinaryExpr",
                          "left": {
                            "kind": "NamedElmExpr",
                            "name": "NULL_CACHE"
                          },
                          "op": "->",
                          "right": {
                            "kind": "PreExpr",
                            "expr": {
                              "kind": "NamedElmExpr",
                              "name": "cache"
                            }
                          }
                        },
                        "else": {
                          "kind": "NamedElmExpr",
                          "name": "new_cache"
                        }
                      }
                    }
                  ]
                },
                {
                  "kind": "FnDef",
                  "packageName": "CASE_Model_Transformations",
                  "name": "TRUSTED",
                  "args": [
                    {
                      "name": "src",
                      "type": {
                        "kind": "DoubleDotRef",
                        "name": "Base_Types::Integer_32"
                      }
                    }
                  ],
                  "type": {
                    "kind": "PrimType",
                    "primType": "bool"
                  },
                  "expr": {
                    "kind": "BinaryExpr",
                    "left": {
                      "kind": "BinaryExpr",
                      "left": {
                        "kind": "CallExpr",
                        "function": {
                          "kind": "DoubleDotRef",
                          "packageName": "CASE_Model_Transformations",
                          "name": "IN_CACHE"
                        },
                        "args": [
                          {
                            "kind": "NamedElmExpr",
                            "name": "src"
                          }
                        ]
                      },
                      "op": "and",
                      "right": {
                        "kind": "CallExpr",
                        "function": {
                          "kind": "DoubleDotRef",
                          "packageName": "CASE_Model_Transformations",
                          "name": "PASS_ATTESTATION"
                        },
                        "args": [
                          {
                            "kind": "NamedElmExpr",
                            "name": "src"
                          }
                        ]
                      }
                    },
                    "op": "and",
                    "right": {
                      "kind": "UnaryExpr",
                      "operand": {
                        "kind": "CallExpr",
                        "function": {
                          "kind": "DoubleDotRef",
                          "packageName": "CASE_Model_Transformations",
                          "name": "IS_STALE"
                        },
                        "args": [
                          {
                            "kind": "NamedElmExpr",
                            "name": "src"
                          }
                        ]
                      },
                      "op": "not"
                    }
                  }
                },
                {
                  "kind": "ConstStatement",
                  "name": "AM_FAIL",
                  "type": {
                    "kind": "PrimType",
                    "primType": "int"
                  },
                  "expr": {
                    "kind": "IntLitExpr",
                    "value": "0"
                  }
                },
                {
                  "kind": "ConstStatement",
                  "name": "AM_PASS",
                  "type": {
                    "kind": "PrimType",
                    "primType": "int"
                  },
                  "expr": {
                    "kind": "IntLitExpr",
                    "value": "1"
                  }
                },
                {
                  "kind": "ConstStatement",
                  "name": "AM_REQUESTING",
                  "type": {
                    "kind": "PrimType",
                    "primType": "int"
                  },
                  "expr": {
                    "kind": "IntLitExpr",
                    "value": "2"
                  }
                },
                {
                  "kind": "NodeDef",
                  "name": "IN_CACHE",
                  "args": [
                    {
                      "name": "src",
                      "type": {
                        "kind": "PrimType",
                        "primType": "int"
                      }
                    }
                  ],
                  "returns": [
                    {
                      "name": "result",
                      "type": {
                        "kind": "PrimType",
                        "primType": "bool"
                      }
                    }
                  ],
                  "body": [
                    {
                      "kind": "NodeEq",
                      "left": [
                        {
                          "name": "result",
                          "type": {
                            "kind": "PrimType",
                            "primType": "bool"
                          }
                        }
                      ],
                      "expr": {
                        "kind": "UnaryExpr",
                        "operand": {
                          "kind": "BinaryExpr",
                          "left": {
                            "kind": "CallExpr",
                            "function": {
                              "kind": "DoubleDotRef",
                              "packageName": "CASE_Model_Transformations",
                              "name": "GET_RECORD_BY_NAME"
                            },
                            "args": [
                              {
                                "kind": "NamedElmExpr",
                                "name": "src"
                              }
                            ]
                          },
                          "op": "=",
                          "right": {
                            "kind": "NamedElmExpr",
                            "name": "NULL_RECORD"
                          }
                        },
                        "op": "not"
                      }
                    }
                  ]
                },
                {
                  "kind": "NodeDef",
                  "name": "GET_STATUS",
                  "args": [
                    {
                      "name": "src",
                      "type": {
                        "kind": "PrimType",
                        "primType": "int"
                      }
                    }
                  ],
                  "returns": [
                    {
                      "name": "result",
                      "type": {
                        "kind": "PrimType",
                        "primType": "int"
                      }
                    }
                  ],
                  "body": [
                    {
                      "kind": "NodeEq",
                      "left": [
                        {
                          "name": "record",
                          "type": {
                            "kind": "DoubleDotRef",
                            "name": "CASE_Model_Transformations::CASE_AttestationCacheRecord.Impl"
                          }
                        }
                      ],
                      "expr": {
                        "kind": "CallExpr",
                        "function": {
                          "kind": "DoubleDotRef",
                          "packageName": "CASE_Model_Transformations",
                          "name": "GET_RECORD_BY_NAME"
                        },
                        "args": [
                          {
                            "kind": "NamedElmExpr",
                            "name": "src"
                          }
                        ]
                      }
                    },
                    {
                      "kind": "NodeEq",
                      "left": [
                        {
                          "name": "result",
                          "type": {
                            "kind": "PrimType",
                            "primType": "int"
                          }
                        }
                      ],
                      "expr": {
                        "kind": "SelectionExpr",
                        "target": {
                          "kind": "NamedElmExpr",
                          "name": "record"
                        },
                        "field": "trusted"
                      }
                    }
                  ]
                },
                {
                  "kind": "NodeDef",
                  "name": "PASS_ATTESTATION",
                  "args": [
                    {
                      "name": "src",
                      "type": {
                        "kind": "PrimType",
                        "primType": "int"
                      }
                    }
                  ],
                  "returns": [
                    {
                      "name": "result",
                      "type": {
                        "kind": "PrimType",
                        "primType": "bool"
                      }
                    }
                  ],
                  "body": [
                    {
                      "kind": "NodeEq",
                      "left": [
                        {
                          "name": "record",
                          "type": {
                            "kind": "DoubleDotRef",
                            "name": "CASE_Model_Transformations::CASE_AttestationCacheRecord.Impl"
                          }
                        }
                      ],
                      "expr": {
                        "kind": "CallExpr",
                        "function": {
                          "kind": "DoubleDotRef",
                          "packageName": "CASE_Model_Transformations",
                          "name": "GET_RECORD_BY_NAME"
                        },
                        "args": [
                          {
                            "kind": "NamedElmExpr",
                            "name": "src"
                          }
                        ]
                      }
                    },
                    {
                      "kind": "NodeEq",
                      "left": [
                        {
                          "name": "result",
                          "type": {
                            "kind": "PrimType",
                            "primType": "bool"
                          }
                        }
                      ],
                      "expr": {
                        "kind": "BinaryExpr",
                        "left": {
                          "kind": "SelectionExpr",
                          "target": {
                            "kind": "NamedElmExpr",
                            "name": "record"
                          },
                          "field": "trusted"
                        },
                        "op": "=",
                        "right": {
                          "kind": "NamedElmExpr",
                          "name": "AM_PASS"
                        }
                      }
                    }
                  ]
                },
                {
                  "kind": "NodeDef",
                  "name": "IS_STALE",
                  "args": [
                    {
                      "name": "src",
                      "type": {
                        "kind": "PrimType",
                        "primType": "int"
                      }
                    }
                  ],
                  "returns": [
                    {
                      "name": "result",
                      "type": {
                        "kind": "PrimType",
                        "primType": "bool"
                      }
                    }
                  ],
                  "body": [
                    {
                      "kind": "NodeEq",
                      "left": [
                        {
                          "name": "record",
                          "type": {
                            "kind": "DoubleDotRef",
                            "name": "CASE_Model_Transformations::CASE_AttestationCacheRecord.Impl"
                          }
                        }
                      ],
                      "expr": {
                        "kind": "CallExpr",
                        "function": {
                          "kind": "DoubleDotRef",
                          "packageName": "CASE_Model_Transformations",
                          "name": "GET_RECORD_BY_NAME"
                        },
                        "args": [
                          {
                            "kind": "NamedElmExpr",
                            "name": "src"
                          }
                        ]
                      }
                    },
                    {
                      "kind": "NodeEq",
                      "left": [
                        {
                          "name": "result",
                          "type": {
                            "kind": "PrimType",
                            "primType": "bool"
                          }
                        }
                      ],
                      "expr": {
                        "kind": "BoolLitExpr",
                        "value": "false"
                      }
                    }
                  ]
                },
                {
                  "kind": "NodeDef",
                  "name": "CREATE_RECORD",
                  "args": [
                    {
                      "name": "new_src",
                      "type": {
                        "kind": "PrimType",
                        "primType": "int"
                      }
                    },
                    {
                      "name": "new_trusted",
                      "type": {
                        "kind": "PrimType",
                        "primType": "int"
                      }
                    },
                    {
                      "name": "new_timeout",
                      "type": {
                        "kind": "PrimType",
                        "primType": "int"
                      }
                    }
                  ],
                  "returns": [
                    {
                      "name": "new_record",
                      "type": {
                        "kind": "DoubleDotRef",
                        "name": "CASE_Model_Transformations::CASE_AttestationCacheRecord.Impl"
                      }
                    }
                  ],
                  "body": [
                    {
                      "kind": "NodeEq",
                      "left": [
                        {
                          "name": "new_record",
                          "type": {
                            "kind": "DoubleDotRef",
                            "name": "CASE_Model_Transformations::CASE_AttestationCacheRecord.Impl"
                          }
                        }
                      ],
                      "expr": {
                        "kind": "RecordLitExpr",
                        "recordType": {
                          "kind": "DoubleDotRef",
                          "name": "CASE_Model_Transformations::CASE_AttestationCacheRecord.Impl"
                        },
                        "value": {
                          "src": {
                            "kind": "NamedElmExpr",
                            "name": "new_src"
                          },
                          "trusted": {
                            "kind": "NamedElmExpr",
                            "name": "new_trusted"
                          },
                          "timeout": {
                            "kind": "NamedElmExpr",
                            "name": "new_timeout"
                          }
                        }
                      }
                    }
                  ]
                },
                {
                  "kind": "NodeDef",
                  "name": "ADD_RECORD",
                  "args": [
                    {
                      "name": "src",
                      "type": {
                        "kind": "PrimType",
                        "primType": "int"
                      }
                    },
                    {
                      "name": "trusted",
                      "type": {
                        "kind": "PrimType",
                        "primType": "int"
                      }
                    },
                    {
                      "name": "timeout",
                      "type": {
                        "kind": "PrimType",
                        "primType": "int"
                      }
                    },
                    {
                      "name": "max_idx",
                      "type": {
                        "kind": "PrimType",
                        "primType": "int"
                      }
                    }
                  ],
                  "returns": [
                    {
                      "name": "success",
                      "type": {
                        "kind": "PrimType",
                        "primType": "bool"
                      }
                    }
                  ],
                  "body": [
                    {
                      "kind": "NodeEq",
                      "left": [
                        {
                          "name": "free_idx",
                          "type": {
                            "kind": "PrimType",
                            "primType": "int"
                          }
                        }
                      ],
                      "expr": {
                        "kind": "CallExpr",
                        "function": {
                          "kind": "DoubleDotRef",
                          "packageName": "CASE_Model_Transformations",
                          "name": "GET_FREE_IDX"
                        },
                        "args": [
                          {
                            "kind": "NamedElmExpr",
                            "name": "max_idx"
                          }
                        ]
                      }
                    },
                    {
                      "kind": "NodeEq",
                      "left": [
                        {
                          "name": "success",
                          "type": {
                            "kind": "PrimType",
                            "primType": "bool"
                          }
                        }
                      ],
                      "expr": {
                        "kind": "IfThenElseExpr",
                        "if": {
                          "kind": "CallExpr",
                          "function": {
                            "kind": "DoubleDotRef",
                            "packageName": "CASE_Model_Transformations",
                            "name": "IN_CACHE"
                          },
                          "args": [
                            {
                              "kind": "NamedElmExpr",
                              "name": "src"
                            }
                          ]
                        },
                        "then": {
                          "kind": "UnaryExpr",
                          "operand": {
                            "kind": "BinaryExpr",
                            "left": {
                              "kind": "CallExpr",
                              "function": {
                                "kind": "DoubleDotRef",
                                "packageName": "CASE_Model_Transformations",
                                "name": "WRITE_CACHE"
                              },
                              "args": [
                                {
                                  "kind": "CallExpr",
                                  "function": {
                                    "kind": "DoubleDotRef",
                                    "packageName": "CASE_Model_Transformations",
                                    "name": "GET_IDX_BY_NAME"
                                  },
                                  "args": [
                                    {
                                      "kind": "NamedElmExpr",
                                      "name": "src"
                                    }
                                  ]
                                },
                                {
                                  "kind": "CallExpr",
                                  "function": {
                                    "kind": "DoubleDotRef",
                                    "packageName": "CASE_Model_Transformations",
                                    "name": "CREATE_RECORD"
                                  },
                                  "args": [
                                    {
                                      "kind": "NamedElmExpr",
                                      "name": "src"
                                    },
                                    {
                                      "kind": "NamedElmExpr",
                                      "name": "trusted"
                                    },
                                    {
                                      "kind": "NamedElmExpr",
                                      "name": "timeout"
                                    }
                                  ]
                                }
                              ]
                            },
                            "op": "=",
                            "right": {
                              "kind": "NamedElmExpr",
                              "name": "NULL_CACHE"
                            }
                          },
                          "op": "not"
                        },
                        "else": {
                          "kind": "IfThenElseExpr",
                          "if": {
                            "kind": "BinaryExpr",
                            "left": {
                              "kind": "NamedElmExpr",
                              "name": "free_idx"
                            },
                            "op": ">",
                            "right": {
                              "kind": "IntLitExpr",
                              "value": "0"
                            }
                          },
                          "then": {
                            "kind": "UnaryExpr",
                            "operand": {
                              "kind": "BinaryExpr",
                              "left": {
                                "kind": "CallExpr",
                                "function": {
                                  "kind": "DoubleDotRef",
                                  "packageName": "CASE_Model_Transformations",
                                  "name": "WRITE_CACHE"
                                },
                                "args": [
                                  {
                                    "kind": "NamedElmExpr",
                                    "name": "free_idx"
                                  },
                                  {
                                    "kind": "CallExpr",
                                    "function": {
                                      "kind": "DoubleDotRef",
                                      "packageName": "CASE_Model_Transformations",
                                      "name": "CREATE_RECORD"
                                    },
                                    "args": [
                                      {
                                        "kind": "NamedElmExpr",
                                        "name": "src"
                                      },
                                      {
                                        "kind": "NamedElmExpr",
                                        "name": "trusted"
                                      },
                                      {
                                        "kind": "NamedElmExpr",
                                        "name": "timeout"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "op": "=",
                              "right": {
                                "kind": "NamedElmExpr",
                                "name": "NULL_CACHE"
                              }
                            },
                            "op": "not"
                          },
                          "else": {
                            "kind": "BoolLitExpr",
                            "value": "false"
                          }
                        }
                      }
                    }
                  ]
                },
                {
                  "kind": "NodeDef",
                  "name": "GET_FREE_IDX",
                  "args": [
                    {
                      "name": "max",
                      "type": {
                        "kind": "PrimType",
                        "primType": "int"
                      }
                    }
                  ],
                  "returns": [
                    {
                      "name": "idx",
                      "type": {
                        "kind": "PrimType",
                        "primType": "int"
                      }
                    }
                  ],
                  "body": [
                    {
                      "kind": "NodeEq",
                      "left": [
                        {
                          "name": "c",
                          "type": {
                            "kind": "DoubleDotRef",
                            "name": "CASE_Model_Transformations::CASE_AttestationCache.Impl"
                          }
                        }
                      ],
                      "expr": {
                        "kind": "CallExpr",
                        "function": {
                          "kind": "DoubleDotRef",
                          "packageName": "CASE_Model_Transformations",
                          "name": "CACHE"
                        },
                        "args": [
                          {
                            "kind": "NamedElmExpr",
                            "name": "NULL_CACHE"
                          }
                        ]
                      }
                    },
                    {
                      "kind": "NodeEq",
                      "left": [
                        {
                          "name": "idx",
                          "type": {
                            "kind": "PrimType",
                            "primType": "int"
                          }
                        }
                      ],
                      "expr": {
                        "kind": "IfThenElseExpr",
                        "if": {
                          "kind": "BinaryExpr",
                          "left": {
                            "kind": "BinaryExpr",
                            "left": {
                              "kind": "SelectionExpr",
                              "target": {
                                "kind": "NamedElmExpr",
                                "name": "c"
                              },
                              "field": "src1"
                            },
                            "op": "=",
                            "right": {
                              "kind": "NamedElmExpr",
                              "name": "NULL_RECORD"
                            }
                          },
                          "op": "and",
                          "right": {
                            "kind": "BinaryExpr",
                            "left": {
                              "kind": "NamedElmExpr",
                              "name": "max"
                            },
                            "op": ">=",
                            "right": {
                              "kind": "IntLitExpr",
                              "value": "1"
                            }
                          }
                        },
                        "then": {
                          "kind": "IntLitExpr",
                          "value": "1"
                        },
                        "else": {
                          "kind": "IfThenElseExpr",
                          "if": {
                            "kind": "BinaryExpr",
                            "left": {
                              "kind": "BinaryExpr",
                              "left": {
                                "kind": "SelectionExpr",
                                "target": {
                                  "kind": "NamedElmExpr",
                                  "name": "c"
                                },
                                "field": "src2"
                              },
                              "op": "=",
                              "right": {
                                "kind": "NamedElmExpr",
                                "name": "NULL_RECORD"
                              }
                            },
                            "op": "and",
                            "right": {
                              "kind": "BinaryExpr",
                              "left": {
                                "kind": "NamedElmExpr",
                                "name": "max"
                              },
                              "op": ">=",
                              "right": {
                                "kind": "IntLitExpr",
                                "value": "2"
                              }
                            }
                          },
                          "then": {
                            "kind": "IntLitExpr",
                            "value": "2"
                          },
                          "else": {
                            "kind": "IfThenElseExpr",
                            "if": {
                              "kind": "BinaryExpr",
                              "left": {
                                "kind": "BinaryExpr",
                                "left": {
                                  "kind": "SelectionExpr",
                                  "target": {
                                    "kind": "NamedElmExpr",
                                    "name": "c"
                                  },
                                  "field": "src3"
                                },
                                "op": "=",
                                "right": {
                                  "kind": "NamedElmExpr",
                                  "name": "NULL_RECORD"
                                }
                              },
                              "op": "and",
                              "right": {
                                "kind": "BinaryExpr",
                                "left": {
                                  "kind": "NamedElmExpr",
                                  "name": "max"
                                },
                                "op": ">=",
                                "right": {
                                  "kind": "IntLitExpr",
                                  "value": "3"
                                }
                              }
                            },
                            "then": {
                              "kind": "IntLitExpr",
                              "value": "3"
                            },
                            "else": {
                              "kind": "IfThenElseExpr",
                              "if": {
                                "kind": "BinaryExpr",
                                "left": {
                                  "kind": "BinaryExpr",
                                  "left": {
                                    "kind": "SelectionExpr",
                                    "target": {
                                      "kind": "NamedElmExpr",
                                      "name": "c"
                                    },
                                    "field": "src4"
                                  },
                                  "op": "=",
                                  "right": {
                                    "kind": "NamedElmExpr",
                                    "name": "NULL_RECORD"
                                  }
                                },
                                "op": "and",
                                "right": {
                                  "kind": "BinaryExpr",
                                  "left": {
                                    "kind": "NamedElmExpr",
                                    "name": "max"
                                  },
                                  "op": ">=",
                                  "right": {
                                    "kind": "IntLitExpr",
                                    "value": "4"
                                  }
                                }
                              },
                              "then": {
                                "kind": "IntLitExpr",
                                "value": "4"
                              },
                              "else": {
                                "kind": "IfThenElseExpr",
                                "if": {
                                  "kind": "BinaryExpr",
                                  "left": {
                                    "kind": "BinaryExpr",
                                    "left": {
                                      "kind": "SelectionExpr",
                                      "target": {
                                        "kind": "NamedElmExpr",
                                        "name": "c"
                                      },
                                      "field": "src5"
                                    },
                                    "op": "=",
                                    "right": {
                                      "kind": "NamedElmExpr",
                                      "name": "NULL_RECORD"
                                    }
                                  },
                                  "op": "and",
                                  "right": {
                                    "kind": "BinaryExpr",
                                    "left": {
                                      "kind": "NamedElmExpr",
                                      "name": "max"
                                    },
                                    "op": ">=",
                                    "right": {
                                      "kind": "IntLitExpr",
                                      "value": "5"
                                    }
                                  }
                                },
                                "then": {
                                  "kind": "IntLitExpr",
                                  "value": "5"
                                },
                                "else": {
                                  "kind": "IfThenElseExpr",
                                  "if": {
                                    "kind": "BinaryExpr",
                                    "left": {
                                      "kind": "BinaryExpr",
                                      "left": {
                                        "kind": "SelectionExpr",
                                        "target": {
                                          "kind": "NamedElmExpr",
                                          "name": "c"
                                        },
                                        "field": "src6"
                                      },
                                      "op": "=",
                                      "right": {
                                        "kind": "NamedElmExpr",
                                        "name": "NULL_RECORD"
                                      }
                                    },
                                    "op": "and",
                                    "right": {
                                      "kind": "BinaryExpr",
                                      "left": {
                                        "kind": "NamedElmExpr",
                                        "name": "max"
                                      },
                                      "op": ">=",
                                      "right": {
                                        "kind": "IntLitExpr",
                                        "value": "6"
                                      }
                                    }
                                  },
                                  "then": {
                                    "kind": "IntLitExpr",
                                    "value": "6"
                                  },
                                  "else": {
                                    "kind": "IntLitExpr",
                                    "value": "0"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                {
                  "kind": "NodeDef",
                  "name": "GET_RECORD_BY_IDX",
                  "args": [
                    {
                      "name": "idx",
                      "type": {
                        "kind": "PrimType",
                        "primType": "int"
                      }
                    }
                  ],
                  "returns": [
                    {
                      "name": "record",
                      "type": {
                        "kind": "DoubleDotRef",
                        "name": "CASE_Model_Transformations::CASE_AttestationCacheRecord.Impl"
                      }
                    }
                  ],
                  "body": [
                    {
                      "kind": "NodeEq",
                      "left": [
                        {
                          "name": "c",
                          "type": {
                            "kind": "DoubleDotRef",
                            "name": "CASE_Model_Transformations::CASE_AttestationCache.Impl"
                          }
                        }
                      ],
                      "expr": {
                        "kind": "CallExpr",
                        "function": {
                          "kind": "DoubleDotRef",
                          "packageName": "CASE_Model_Transformations",
                          "name": "CACHE"
                        },
                        "args": [
                          {
                            "kind": "NamedElmExpr",
                            "name": "NULL_CACHE"
                          }
                        ]
                      }
                    },
                    {
                      "kind": "NodeEq",
                      "left": [
                        {
                          "name": "record",
                          "type": {
                            "kind": "DoubleDotRef",
                            "name": "CASE_Model_Transformations::CASE_AttestationCacheRecord.Impl"
                          }
                        }
                      ],
                      "expr": {
                        "kind": "IfThenElseExpr",
                        "if": {
                          "kind": "BinaryExpr",
                          "left": {
                            "kind": "NamedElmExpr",
                            "name": "idx"
                          },
                          "op": "=",
                          "right": {
                            "kind": "IntLitExpr",
                            "value": "1"
                          }
                        },
                        "then": {
                          "kind": "SelectionExpr",
                          "target": {
                            "kind": "NamedElmExpr",
                            "name": "c"
                          },
                          "field": "src1"
                        },
                        "else": {
                          "kind": "IfThenElseExpr",
                          "if": {
                            "kind": "BinaryExpr",
                            "left": {
                              "kind": "NamedElmExpr",
                              "name": "idx"
                            },
                            "op": "=",
                            "right": {
                              "kind": "IntLitExpr",
                              "value": "2"
                            }
                          },
                          "then": {
                            "kind": "SelectionExpr",
                            "target": {
                              "kind": "NamedElmExpr",
                              "name": "c"
                            },
                            "field": "src2"
                          },
                          "else": {
                            "kind": "IfThenElseExpr",
                            "if": {
                              "kind": "BinaryExpr",
                              "left": {
                                "kind": "NamedElmExpr",
                                "name": "idx"
                              },
                              "op": "=",
                              "right": {
                                "kind": "IntLitExpr",
                                "value": "3"
                              }
                            },
                            "then": {
                              "kind": "SelectionExpr",
                              "target": {
                                "kind": "NamedElmExpr",
                                "name": "c"
                              },
                              "field": "src3"
                            },
                            "else": {
                              "kind": "IfThenElseExpr",
                              "if": {
                                "kind": "BinaryExpr",
                                "left": {
                                  "kind": "NamedElmExpr",
                                  "name": "idx"
                                },
                                "op": "=",
                                "right": {
                                  "kind": "IntLitExpr",
                                  "value": "4"
                                }
                              },
                              "then": {
                                "kind": "SelectionExpr",
                                "target": {
                                  "kind": "NamedElmExpr",
                                  "name": "c"
                                },
                                "field": "src4"
                              },
                              "else": {
                                "kind": "IfThenElseExpr",
                                "if": {
                                  "kind": "BinaryExpr",
                                  "left": {
                                    "kind": "NamedElmExpr",
                                    "name": "idx"
                                  },
                                  "op": "=",
                                  "right": {
                                    "kind": "IntLitExpr",
                                    "value": "5"
                                  }
                                },
                                "then": {
                                  "kind": "SelectionExpr",
                                  "target": {
                                    "kind": "NamedElmExpr",
                                    "name": "c"
                                  },
                                  "field": "src5"
                                },
                                "else": {
                                  "kind": "IfThenElseExpr",
                                  "if": {
                                    "kind": "BinaryExpr",
                                    "left": {
                                      "kind": "NamedElmExpr",
                                      "name": "idx"
                                    },
                                    "op": "=",
                                    "right": {
                                      "kind": "IntLitExpr",
                                      "value": "6"
                                    }
                                  },
                                  "then": {
                                    "kind": "SelectionExpr",
                                    "target": {
                                      "kind": "NamedElmExpr",
                                      "name": "c"
                                    },
                                    "field": "src6"
                                  },
                                  "else": {
                                    "kind": "NamedElmExpr",
                                    "name": "NULL_RECORD"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                {
                  "kind": "NodeDef",
                  "name": "GET_RECORD_BY_NAME",
                  "args": [
                    {
                      "name": "src",
                      "type": {
                        "kind": "PrimType",
                        "primType": "int"
                      }
                    }
                  ],
                  "returns": [
                    {
                      "name": "record",
                      "type": {
                        "kind": "DoubleDotRef",
                        "name": "CASE_Model_Transformations::CASE_AttestationCacheRecord.Impl"
                      }
                    }
                  ],
                  "body": [
                    {
                      "kind": "NodeEq",
                      "left": [
                        {
                          "name": "c",
                          "type": {
                            "kind": "DoubleDotRef",
                            "name": "CASE_Model_Transformations::CASE_AttestationCache.Impl"
                          }
                        }
                      ],
                      "expr": {
                        "kind": "CallExpr",
                        "function": {
                          "kind": "DoubleDotRef",
                          "packageName": "CASE_Model_Transformations",
                          "name": "CACHE"
                        },
                        "args": [
                          {
                            "kind": "NamedElmExpr",
                            "name": "NULL_CACHE"
                          }
                        ]
                      }
                    },
                    {
                      "kind": "NodeEq",
                      "left": [
                        {
                          "name": "record",
                          "type": {
                            "kind": "DoubleDotRef",
                            "name": "CASE_Model_Transformations::CASE_AttestationCacheRecord.Impl"
                          }
                        }
                      ],
                      "expr": {
                        "kind": "IfThenElseExpr",
                        "if": {
                          "kind": "BinaryExpr",
                          "left": {
                            "kind": "SelectionExpr",
                            "target": {
                              "kind": "SelectionExpr",
                              "target": {
                                "kind": "NamedElmExpr",
                                "name": "c"
                              },
                              "field": "src1"
                            },
                            "field": "src"
                          },
                          "op": "=",
                          "right": {
                            "kind": "NamedElmExpr",
                            "name": "src"
                          }
                        },
                        "then": {
                          "kind": "SelectionExpr",
                          "target": {
                            "kind": "NamedElmExpr",
                            "name": "c"
                          },
                          "field": "src1"
                        },
                        "else": {
                          "kind": "IfThenElseExpr",
                          "if": {
                            "kind": "BinaryExpr",
                            "left": {
                              "kind": "SelectionExpr",
                              "target": {
                                "kind": "SelectionExpr",
                                "target": {
                                  "kind": "NamedElmExpr",
                                  "name": "c"
                                },
                                "field": "src2"
                              },
                              "field": "src"
                            },
                            "op": "=",
                            "right": {
                              "kind": "NamedElmExpr",
                              "name": "src"
                            }
                          },
                          "then": {
                            "kind": "SelectionExpr",
                            "target": {
                              "kind": "NamedElmExpr",
                              "name": "c"
                            },
                            "field": "src2"
                          },
                          "else": {
                            "kind": "IfThenElseExpr",
                            "if": {
                              "kind": "BinaryExpr",
                              "left": {
                                "kind": "SelectionExpr",
                                "target": {
                                  "kind": "SelectionExpr",
                                  "target": {
                                    "kind": "NamedElmExpr",
                                    "name": "c"
                                  },
                                  "field": "src3"
                                },
                                "field": "src"
                              },
                              "op": "=",
                              "right": {
                                "kind": "NamedElmExpr",
                                "name": "src"
                              }
                            },
                            "then": {
                              "kind": "SelectionExpr",
                              "target": {
                                "kind": "NamedElmExpr",
                                "name": "c"
                              },
                              "field": "src3"
                            },
                            "else": {
                              "kind": "IfThenElseExpr",
                              "if": {
                                "kind": "BinaryExpr",
                                "left": {
                                  "kind": "SelectionExpr",
                                  "target": {
                                    "kind": "SelectionExpr",
                                    "target": {
                                      "kind": "NamedElmExpr",
                                      "name": "c"
                                    },
                                    "field": "src4"
                                  },
                                  "field": "src"
                                },
                                "op": "=",
                                "right": {
                                  "kind": "NamedElmExpr",
                                  "name": "src"
                                }
                              },
                              "then": {
                                "kind": "SelectionExpr",
                                "target": {
                                  "kind": "NamedElmExpr",
                                  "name": "c"
                                },
                                "field": "src4"
                              },
                              "else": {
                                "kind": "IfThenElseExpr",
                                "if": {
                                  "kind": "BinaryExpr",
                                  "left": {
                                    "kind": "SelectionExpr",
                                    "target": {
                                      "kind": "SelectionExpr",
                                      "target": {
                                        "kind": "NamedElmExpr",
                                        "name": "c"
                                      },
                                      "field": "src5"
                                    },
                                    "field": "src"
                                  },
                                  "op": "=",
                                  "right": {
                                    "kind": "NamedElmExpr",
                                    "name": "src"
                                  }
                                },
                                "then": {
                                  "kind": "SelectionExpr",
                                  "target": {
                                    "kind": "NamedElmExpr",
                                    "name": "c"
                                  },
                                  "field": "src5"
                                },
                                "else": {
                                  "kind": "IfThenElseExpr",
                                  "if": {
                                    "kind": "BinaryExpr",
                                    "left": {
                                      "kind": "SelectionExpr",
                                      "target": {
                                        "kind": "SelectionExpr",
                                        "target": {
                                          "kind": "NamedElmExpr",
                                          "name": "c"
                                        },
                                        "field": "src6"
                                      },
                                      "field": "src"
                                    },
                                    "op": "=",
                                    "right": {
                                      "kind": "NamedElmExpr",
                                      "name": "src"
                                    }
                                  },
                                  "then": {
                                    "kind": "SelectionExpr",
                                    "target": {
                                      "kind": "NamedElmExpr",
                                      "name": "c"
                                    },
                                    "field": "src6"
                                  },
                                  "else": {
                                    "kind": "NamedElmExpr",
                                    "name": "NULL_RECORD"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                {
                  "kind": "NodeDef",
                  "name": "GET_IDX_BY_NAME",
                  "args": [
                    {
                      "name": "src",
                      "type": {
                        "kind": "PrimType",
                        "primType": "int"
                      }
                    }
                  ],
                  "returns": [
                    {
                      "name": "idx",
                      "type": {
                        "kind": "PrimType",
                        "primType": "int"
                      }
                    }
                  ],
                  "body": [
                    {
                      "kind": "NodeEq",
                      "left": [
                        {
                          "name": "c",
                          "type": {
                            "kind": "DoubleDotRef",
                            "name": "CASE_Model_Transformations::CASE_AttestationCache.Impl"
                          }
                        }
                      ],
                      "expr": {
                        "kind": "CallExpr",
                        "function": {
                          "kind": "DoubleDotRef",
                          "packageName": "CASE_Model_Transformations",
                          "name": "CACHE"
                        },
                        "args": [
                          {
                            "kind": "NamedElmExpr",
                            "name": "NULL_CACHE"
                          }
                        ]
                      }
                    },
                    {
                      "kind": "NodeEq",
                      "left": [
                        {
                          "name": "idx",
                          "type": {
                            "kind": "PrimType",
                            "primType": "int"
                          }
                        }
                      ],
                      "expr": {
                        "kind": "IfThenElseExpr",
                        "if": {
                          "kind": "BinaryExpr",
                          "left": {
                            "kind": "SelectionExpr",
                            "target": {
                              "kind": "SelectionExpr",
                              "target": {
                                "kind": "NamedElmExpr",
                                "name": "c"
                              },
                              "field": "src1"
                            },
                            "field": "src"
                          },
                          "op": "=",
                          "right": {
                            "kind": "NamedElmExpr",
                            "name": "src"
                          }
                        },
                        "then": {
                          "kind": "IntLitExpr",
                          "value": "1"
                        },
                        "else": {
                          "kind": "IfThenElseExpr",
                          "if": {
                            "kind": "BinaryExpr",
                            "left": {
                              "kind": "SelectionExpr",
                              "target": {
                                "kind": "SelectionExpr",
                                "target": {
                                  "kind": "NamedElmExpr",
                                  "name": "c"
                                },
                                "field": "src2"
                              },
                              "field": "src"
                            },
                            "op": "=",
                            "right": {
                              "kind": "NamedElmExpr",
                              "name": "src"
                            }
                          },
                          "then": {
                            "kind": "IntLitExpr",
                            "value": "2"
                          },
                          "else": {
                            "kind": "IfThenElseExpr",
                            "if": {
                              "kind": "BinaryExpr",
                              "left": {
                                "kind": "SelectionExpr",
                                "target": {
                                  "kind": "SelectionExpr",
                                  "target": {
                                    "kind": "NamedElmExpr",
                                    "name": "c"
                                  },
                                  "field": "src3"
                                },
                                "field": "src"
                              },
                              "op": "=",
                              "right": {
                                "kind": "NamedElmExpr",
                                "name": "src"
                              }
                            },
                            "then": {
                              "kind": "IntLitExpr",
                              "value": "3"
                            },
                            "else": {
                              "kind": "IfThenElseExpr",
                              "if": {
                                "kind": "BinaryExpr",
                                "left": {
                                  "kind": "SelectionExpr",
                                  "target": {
                                    "kind": "SelectionExpr",
                                    "target": {
                                      "kind": "NamedElmExpr",
                                      "name": "c"
                                    },
                                    "field": "src4"
                                  },
                                  "field": "src"
                                },
                                "op": "=",
                                "right": {
                                  "kind": "NamedElmExpr",
                                  "name": "src"
                                }
                              },
                              "then": {
                                "kind": "IntLitExpr",
                                "value": "4"
                              },
                              "else": {
                                "kind": "IfThenElseExpr",
                                "if": {
                                  "kind": "BinaryExpr",
                                  "left": {
                                    "kind": "SelectionExpr",
                                    "target": {
                                      "kind": "SelectionExpr",
                                      "target": {
                                        "kind": "NamedElmExpr",
                                        "name": "c"
                                      },
                                      "field": "src5"
                                    },
                                    "field": "src"
                                  },
                                  "op": "=",
                                  "right": {
                                    "kind": "NamedElmExpr",
                                    "name": "src"
                                  }
                                },
                                "then": {
                                  "kind": "IntLitExpr",
                                  "value": "5"
                                },
                                "else": {
                                  "kind": "IfThenElseExpr",
                                  "if": {
                                    "kind": "BinaryExpr",
                                    "left": {
                                      "kind": "SelectionExpr",
                                      "target": {
                                        "kind": "SelectionExpr",
                                        "target": {
                                          "kind": "NamedElmExpr",
                                          "name": "c"
                                        },
                                        "field": "src6"
                                      },
                                      "field": "src"
                                    },
                                    "op": "=",
                                    "right": {
                                      "kind": "NamedElmExpr",
                                      "name": "src"
                                    }
                                  },
                                  "then": {
                                    "kind": "IntLitExpr",
                                    "value": "6"
                                  },
                                  "else": {
                                    "kind": "IntLitExpr",
                                    "value": "0"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                {
                  "kind": "NodeDef",
                  "name": "WRITE_CACHE",
                  "args": [
                    {
                      "name": "idx",
                      "type": {
                        "kind": "PrimType",
                        "primType": "int"
                      }
                    },
                    {
                      "name": "record",
                      "type": {
                        "kind": "DoubleDotRef",
                        "name": "CASE_Model_Transformations::CASE_AttestationCacheRecord.Impl"
                      }
                    }
                  ],
                  "returns": [
                    {
                      "name": "new_cache",
                      "type": {
                        "kind": "DoubleDotRef",
                        "name": "CASE_Model_Transformations::CASE_AttestationCache.Impl"
                      }
                    }
                  ],
                  "body": [
                    {
                      "kind": "NodeEq",
                      "left": [
                        {
                          "name": "new_cache",
                          "type": {
                            "kind": "DoubleDotRef",
                            "name": "CASE_Model_Transformations::CASE_AttestationCache.Impl"
                          }
                        }
                      ],
                      "expr": {
                        "kind": "IfThenElseExpr",
                        "if": {
                          "kind": "BinaryExpr",
                          "left": {
                            "kind": "NamedElmExpr",
                            "name": "idx"
                          },
                          "op": "=",
                          "right": {
                            "kind": "IntLitExpr",
                            "value": "1"
                          }
                        },
                        "then": {
                          "kind": "CallExpr",
                          "function": {
                            "kind": "DoubleDotRef",
                            "packageName": "CASE_Model_Transformations",
                            "name": "CACHE"
                          },
                          "args": [
                            {
                              "kind": "RecordLitExpr",
                              "recordType": {
                                "kind": "DoubleDotRef",
                                "name": "CASE_Model_Transformations::CASE_AttestationCache.Impl"
                              },
                              "value": {
                                "src1": {
                                  "kind": "NamedElmExpr",
                                  "name": "record"
                                },
                                "src2": {
                                  "kind": "CallExpr",
                                  "function": {
                                    "kind": "DoubleDotRef",
                                    "packageName": "CASE_Model_Transformations",
                                    "name": "GET_RECORD_BY_IDX"
                                  },
                                  "args": [
                                    {
                                      "kind": "IntLitExpr",
                                      "value": "2"
                                    }
                                  ]
                                },
                                "src3": {
                                  "kind": "CallExpr",
                                  "function": {
                                    "kind": "DoubleDotRef",
                                    "packageName": "CASE_Model_Transformations",
                                    "name": "GET_RECORD_BY_IDX"
                                  },
                                  "args": [
                                    {
                                      "kind": "IntLitExpr",
                                      "value": "3"
                                    }
                                  ]
                                },
                                "src4": {
                                  "kind": "CallExpr",
                                  "function": {
                                    "kind": "DoubleDotRef",
                                    "packageName": "CASE_Model_Transformations",
                                    "name": "GET_RECORD_BY_IDX"
                                  },
                                  "args": [
                                    {
                                      "kind": "IntLitExpr",
                                      "value": "4"
                                    }
                                  ]
                                },
                                "src5": {
                                  "kind": "CallExpr",
                                  "function": {
                                    "kind": "DoubleDotRef",
                                    "packageName": "CASE_Model_Transformations",
                                    "name": "GET_RECORD_BY_IDX"
                                  },
                                  "args": [
                                    {
                                      "kind": "IntLitExpr",
                                      "value": "5"
                                    }
                                  ]
                                },
                                "src6": {
                                  "kind": "CallExpr",
                                  "function": {
                                    "kind": "DoubleDotRef",
                                    "packageName": "CASE_Model_Transformations",
                                    "name": "GET_RECORD_BY_IDX"
                                  },
                                  "args": [
                                    {
                                      "kind": "IntLitExpr",
                                      "value": "6"
                                    }
                                  ]
                                }
                              }
                            }
                          ]
                        },
                        "else": {
                          "kind": "IfThenElseExpr",
                          "if": {
                            "kind": "BinaryExpr",
                            "left": {
                              "kind": "NamedElmExpr",
                              "name": "idx"
                            },
                            "op": "=",
                            "right": {
                              "kind": "IntLitExpr",
                              "value": "2"
                            }
                          },
                          "then": {
                            "kind": "CallExpr",
                            "function": {
                              "kind": "DoubleDotRef",
                              "packageName": "CASE_Model_Transformations",
                              "name": "CACHE"
                            },
                            "args": [
                              {
                                "kind": "RecordLitExpr",
                                "recordType": {
                                  "kind": "DoubleDotRef",
                                  "name": "CASE_Model_Transformations::CASE_AttestationCache.Impl"
                                },
                                "value": {
                                  "src1": {
                                    "kind": "CallExpr",
                                    "function": {
                                      "kind": "DoubleDotRef",
                                      "packageName": "CASE_Model_Transformations",
                                      "name": "GET_RECORD_BY_IDX"
                                    },
                                    "args": [
                                      {
                                        "kind": "IntLitExpr",
                                        "value": "1"
                                      }
                                    ]
                                  },
                                  "src2": {
                                    "kind": "NamedElmExpr",
                                    "name": "record"
                                  },
                                  "src3": {
                                    "kind": "CallExpr",
                                    "function": {
                                      "kind": "DoubleDotRef",
                                      "packageName": "CASE_Model_Transformations",
                                      "name": "GET_RECORD_BY_IDX"
                                    },
                                    "args": [
                                      {
                                        "kind": "IntLitExpr",
                                        "value": "3"
                                      }
                                    ]
                                  },
                                  "src4": {
                                    "kind": "CallExpr",
                                    "function": {
                                      "kind": "DoubleDotRef",
                                      "packageName": "CASE_Model_Transformations",
                                      "name": "GET_RECORD_BY_IDX"
                                    },
                                    "args": [
                                      {
                                        "kind": "IntLitExpr",
                                        "value": "4"
                                      }
                                    ]
                                  },
                                  "src5": {
                                    "kind": "CallExpr",
                                    "function": {
                                      "kind": "DoubleDotRef",
                                      "packageName": "CASE_Model_Transformations",
                                      "name": "GET_RECORD_BY_IDX"
                                    },
                                    "args": [
                                      {
                                        "kind": "IntLitExpr",
                                        "value": "5"
                                      }
                                    ]
                                  },
                                  "src6": {
                                    "kind": "CallExpr",
                                    "function": {
                                      "kind": "DoubleDotRef",
                                      "packageName": "CASE_Model_Transformations",
                                      "name": "GET_RECORD_BY_IDX"
                                    },
                                    "args": [
                                      {
                                        "kind": "IntLitExpr",
                                        "value": "6"
                                      }
                                    ]
                                  }
                                }
                              }
                            ]
                          },
                          "else": {
                            "kind": "IfThenElseExpr",
                            "if": {
                              "kind": "BinaryExpr",
                              "left": {
                                "kind": "NamedElmExpr",
                                "name": "idx"
                              },
                              "op": "=",
                              "right": {
                                "kind": "IntLitExpr",
                                "value": "3"
                              }
                            },
                            "then": {
                              "kind": "CallExpr",
                              "function": {
                                "kind": "DoubleDotRef",
                                "packageName": "CASE_Model_Transformations",
                                "name": "CACHE"
                              },
                              "args": [
                                {
                                  "kind": "RecordLitExpr",
                                  "recordType": {
                                    "kind": "DoubleDotRef",
                                    "name": "CASE_Model_Transformations::CASE_AttestationCache.Impl"
                                  },
                                  "value": {
                                    "src1": {
                                      "kind": "CallExpr",
                                      "function": {
                                        "kind": "DoubleDotRef",
                                        "packageName": "CASE_Model_Transformations",
                                        "name": "GET_RECORD_BY_IDX"
                                      },
                                      "args": [
                                        {
                                          "kind": "IntLitExpr",
                                          "value": "1"
                                        }
                                      ]
                                    },
                                    "src2": {
                                      "kind": "CallExpr",
                                      "function": {
                                        "kind": "DoubleDotRef",
                                        "packageName": "CASE_Model_Transformations",
                                        "name": "GET_RECORD_BY_IDX"
                                      },
                                      "args": [
                                        {
                                          "kind": "IntLitExpr",
                                          "value": "2"
                                        }
                                      ]
                                    },
                                    "src3": {
                                      "kind": "NamedElmExpr",
                                      "name": "record"
                                    },
                                    "src4": {
                                      "kind": "CallExpr",
                                      "function": {
                                        "kind": "DoubleDotRef",
                                        "packageName": "CASE_Model_Transformations",
                                        "name": "GET_RECORD_BY_IDX"
                                      },
                                      "args": [
                                        {
                                          "kind": "IntLitExpr",
                                          "value": "4"
                                        }
                                      ]
                                    },
                                    "src5": {
                                      "kind": "CallExpr",
                                      "function": {
                                        "kind": "DoubleDotRef",
                                        "packageName": "CASE_Model_Transformations",
                                        "name": "GET_RECORD_BY_IDX"
                                      },
                                      "args": [
                                        {
                                          "kind": "IntLitExpr",
                                          "value": "5"
                                        }
                                      ]
                                    },
                                    "src6": {
                                      "kind": "CallExpr",
                                      "function": {
                                        "kind": "DoubleDotRef",
                                        "packageName": "CASE_Model_Transformations",
                                        "name": "GET_RECORD_BY_IDX"
                                      },
                                      "args": [
                                        {
                                          "kind": "IntLitExpr",
                                          "value": "6"
                                        }
                                      ]
                                    }
                                  }
                                }
                              ]
                            },
                            "else": {
                              "kind": "IfThenElseExpr",
                              "if": {
                                "kind": "BinaryExpr",
                                "left": {
                                  "kind": "NamedElmExpr",
                                  "name": "idx"
                                },
                                "op": "=",
                                "right": {
                                  "kind": "IntLitExpr",
                                  "value": "4"
                                }
                              },
                              "then": {
                                "kind": "CallExpr",
                                "function": {
                                  "kind": "DoubleDotRef",
                                  "packageName": "CASE_Model_Transformations",
                                  "name": "CACHE"
                                },
                                "args": [
                                  {
                                    "kind": "RecordLitExpr",
                                    "recordType": {
                                      "kind": "DoubleDotRef",
                                      "name": "CASE_Model_Transformations::CASE_AttestationCache.Impl"
                                    },
                                    "value": {
                                      "src1": {
                                        "kind": "CallExpr",
                                        "function": {
                                          "kind": "DoubleDotRef",
                                          "packageName": "CASE_Model_Transformations",
                                          "name": "GET_RECORD_BY_IDX"
                                        },
                                        "args": [
                                          {
                                            "kind": "IntLitExpr",
                                            "value": "1"
                                          }
                                        ]
                                      },
                                      "src2": {
                                        "kind": "CallExpr",
                                        "function": {
                                          "kind": "DoubleDotRef",
                                          "packageName": "CASE_Model_Transformations",
                                          "name": "GET_RECORD_BY_IDX"
                                        },
                                        "args": [
                                          {
                                            "kind": "IntLitExpr",
                                            "value": "2"
                                          }
                                        ]
                                      },
                                      "src3": {
                                        "kind": "CallExpr",
                                        "function": {
                                          "kind": "DoubleDotRef",
                                          "packageName": "CASE_Model_Transformations",
                                          "name": "GET_RECORD_BY_IDX"
                                        },
                                        "args": [
                                          {
                                            "kind": "IntLitExpr",
                                            "value": "3"
                                          }
                                        ]
                                      },
                                      "src4": {
                                        "kind": "NamedElmExpr",
                                        "name": "record"
                                      },
                                      "src5": {
                                        "kind": "CallExpr",
                                        "function": {
                                          "kind": "DoubleDotRef",
                                          "packageName": "CASE_Model_Transformations",
                                          "name": "GET_RECORD_BY_IDX"
                                        },
                                        "args": [
                                          {
                                            "kind": "IntLitExpr",
                                            "value": "5"
                                          }
                                        ]
                                      },
                                      "src6": {
                                        "kind": "CallExpr",
                                        "function": {
                                          "kind": "DoubleDotRef",
                                          "packageName": "CASE_Model_Transformations",
                                          "name": "GET_RECORD_BY_IDX"
                                        },
                                        "args": [
                                          {
                                            "kind": "IntLitExpr",
                                            "value": "6"
                                          }
                                        ]
                                      }
                                    }
                                  }
                                ]
                              },
                              "else": {
                                "kind": "IfThenElseExpr",
                                "if": {
                                  "kind": "BinaryExpr",
                                  "left": {
                                    "kind": "NamedElmExpr",
                                    "name": "idx"
                                  },
                                  "op": "=",
                                  "right": {
                                    "kind": "IntLitExpr",
                                    "value": "5"
                                  }
                                },
                                "then": {
                                  "kind": "CallExpr",
                                  "function": {
                                    "kind": "DoubleDotRef",
                                    "packageName": "CASE_Model_Transformations",
                                    "name": "CACHE"
                                  },
                                  "args": [
                                    {
                                      "kind": "RecordLitExpr",
                                      "recordType": {
                                        "kind": "DoubleDotRef",
                                        "name": "CASE_Model_Transformations::CASE_AttestationCache.Impl"
                                      },
                                      "value": {
                                        "src1": {
                                          "kind": "CallExpr",
                                          "function": {
                                            "kind": "DoubleDotRef",
                                            "packageName": "CASE_Model_Transformations",
                                            "name": "GET_RECORD_BY_IDX"
                                          },
                                          "args": [
                                            {
                                              "kind": "IntLitExpr",
                                              "value": "1"
                                            }
                                          ]
                                        },
                                        "src2": {
                                          "kind": "CallExpr",
                                          "function": {
                                            "kind": "DoubleDotRef",
                                            "packageName": "CASE_Model_Transformations",
                                            "name": "GET_RECORD_BY_IDX"
                                          },
                                          "args": [
                                            {
                                              "kind": "IntLitExpr",
                                              "value": "2"
                                            }
                                          ]
                                        },
                                        "src3": {
                                          "kind": "CallExpr",
                                          "function": {
                                            "kind": "DoubleDotRef",
                                            "packageName": "CASE_Model_Transformations",
                                            "name": "GET_RECORD_BY_IDX"
                                          },
                                          "args": [
                                            {
                                              "kind": "IntLitExpr",
                                              "value": "3"
                                            }
                                          ]
                                        },
                                        "src4": {
                                          "kind": "CallExpr",
                                          "function": {
                                            "kind": "DoubleDotRef",
                                            "packageName": "CASE_Model_Transformations",
                                            "name": "GET_RECORD_BY_IDX"
                                          },
                                          "args": [
                                            {
                                              "kind": "IntLitExpr",
                                              "value": "4"
                                            }
                                          ]
                                        },
                                        "src5": {
                                          "kind": "NamedElmExpr",
                                          "name": "record"
                                        },
                                        "src6": {
                                          "kind": "CallExpr",
                                          "function": {
                                            "kind": "DoubleDotRef",
                                            "packageName": "CASE_Model_Transformations",
                                            "name": "GET_RECORD_BY_IDX"
                                          },
                                          "args": [
                                            {
                                              "kind": "IntLitExpr",
                                              "value": "6"
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  ]
                                },
                                "else": {
                                  "kind": "IfThenElseExpr",
                                  "if": {
                                    "kind": "BinaryExpr",
                                    "left": {
                                      "kind": "NamedElmExpr",
                                      "name": "idx"
                                    },
                                    "op": "=",
                                    "right": {
                                      "kind": "IntLitExpr",
                                      "value": "6"
                                    }
                                  },
                                  "then": {
                                    "kind": "CallExpr",
                                    "function": {
                                      "kind": "DoubleDotRef",
                                      "packageName": "CASE_Model_Transformations",
                                      "name": "CACHE"
                                    },
                                    "args": [
                                      {
                                        "kind": "RecordLitExpr",
                                        "recordType": {
                                          "kind": "DoubleDotRef",
                                          "name": "CASE_Model_Transformations::CASE_AttestationCache.Impl"
                                        },
                                        "value": {
                                          "src1": {
                                            "kind": "CallExpr",
                                            "function": {
                                              "kind": "DoubleDotRef",
                                              "packageName": "CASE_Model_Transformations",
                                              "name": "GET_RECORD_BY_IDX"
                                            },
                                            "args": [
                                              {
                                                "kind": "IntLitExpr",
                                                "value": "1"
                                              }
                                            ]
                                          },
                                          "src2": {
                                            "kind": "CallExpr",
                                            "function": {
                                              "kind": "DoubleDotRef",
                                              "packageName": "CASE_Model_Transformations",
                                              "name": "GET_RECORD_BY_IDX"
                                            },
                                            "args": [
                                              {
                                                "kind": "IntLitExpr",
                                                "value": "2"
                                              }
                                            ]
                                          },
                                          "src3": {
                                            "kind": "CallExpr",
                                            "function": {
                                              "kind": "DoubleDotRef",
                                              "packageName": "CASE_Model_Transformations",
                                              "name": "GET_RECORD_BY_IDX"
                                            },
                                            "args": [
                                              {
                                                "kind": "IntLitExpr",
                                                "value": "3"
                                              }
                                            ]
                                          },
                                          "src4": {
                                            "kind": "CallExpr",
                                            "function": {
                                              "kind": "DoubleDotRef",
                                              "packageName": "CASE_Model_Transformations",
                                              "name": "GET_RECORD_BY_IDX"
                                            },
                                            "args": [
                                              {
                                                "kind": "IntLitExpr",
                                                "value": "4"
                                              }
                                            ]
                                          },
                                          "src5": {
                                            "kind": "CallExpr",
                                            "function": {
                                              "kind": "DoubleDotRef",
                                              "packageName": "CASE_Model_Transformations",
                                              "name": "GET_RECORD_BY_IDX"
                                            },
                                            "args": [
                                              {
                                                "kind": "IntLitExpr",
                                                "value": "5"
                                              }
                                            ]
                                          },
                                          "src6": {
                                            "kind": "NamedElmExpr",
                                            "name": "record"
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "else": {
                                    "kind": "NamedElmExpr",
                                    "name": "NULL_CACHE"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            },
            "sourceText": "{**\t\n\t\t\n\t\t--------------------\n\t\t-- COMMUNICATIONS --\n\t\t--------------------\n\t\t-- Empty message header\n\t\t-- This indicates that the rest of the message can be ignored\n\t\tconst NULL_ID : int = 0;\n--\t\tconst NULL_HEADER : CASE_MsgHeader.Impl = CASE_MsgHeader.Impl {src = NULL_ID; dst = NULL_ID; msg_type = NULL_MSG_TYPE; HMAC = false};\n\t\tconst NULL_HEADER : CASE_MsgHeader.Impl = CASE_MsgHeader.Impl {src = NULL_ID; dst = NULL_ID; trusted = false; HMAC = false};\n\t\tfun NULL_MESSAGE(header : CASE_MsgHeader.Impl) : bool = (header = NULL_HEADER);\n\t\n\t\t-- CASE message types\n\t\t-- Users will add their own\n\t\tconst NULL_MSG_TYPE : int = 0;\n\t\tconst AM_REQUEST_MSG_TYPE : int = 1;\n\t\tconst AM_RESPONSE_MSG_TYPE : int = 2;\n\t\tconst FREE_MSG_TYPE : int = 3;\n\t\n\t\t---------------------------\n\t\t-- MODEL TRANSFORMATIONS --\n\t\t---------------------------\n\t\t\n\t\t-- Attestation Manager\n\t\t\n\t\tconst NULL_AM_REQUEST_MESSAGE : CASE_AttestationRequestMsg.Impl = CASE_AttestationRequestMsg.Impl {header = NULL_HEADER};\n\t\tconst NULL_CACHE : CASE_AttestationCache.Impl = CASE_AttestationCache.Impl {src1 = NULL_RECORD;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsrc2 = NULL_RECORD;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsrc3 = NULL_RECORD;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsrc4 = NULL_RECORD;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsrc5 = NULL_RECORD;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsrc6 = NULL_RECORD};\n\t\t\n\t\tconst NULL_RECORD : CASE_AttestationCacheRecord.Impl = CASE_AttestationCacheRecord.Impl {src = NULL_ID; trusted = AM_FAIL; timeout = 0};\n\t\t\n\t\t-- This maintains the cache state\n\t\tnode CACHE(new_cache : CASE_AttestationCache.Impl) returns (cache : CASE_AttestationCache.Impl);\n\t\tlet\n\t\t\tcache = \n\t\t\t\tif new_cache = NULL_CACHE then\n\t\t\t\t\tNULL_CACHE -> pre(cache)\n\t\t\t\telse\n\t\t\t\t\tnew_cache;\n\t\ttel;\n\t\t\n\t\tfun TRUSTED(src : Base_Types::Integer_32) : bool = \n\t\t\tIN_CACHE(src) and PASS_ATTESTATION(src) and not IS_STALE(src);\n\n\t\tconst AM_FAIL : int = 0;\n\t\tconst AM_PASS : int = 1;\n\t\tconst AM_REQUESTING : int = 2;\n--\t\tenum AM_STATUS = {FAIL, PASS, REQUESTING};\n\t\t\n\t\t-- Returns whether the specified node is in the cache\n\t\tnode IN_CACHE(src : int) returns (result : bool);\n\t\tlet\n\t\t\tresult = not (GET_RECORD_BY_NAME(src) = NULL_RECORD);\n\t\ttel;\n\t\t\n\t\t-- Returns the attestation status of the specified node\n\t\tnode GET_STATUS(src : int) returns (result : int);\n--\t\tnode GET_STATUS(src : int) returns (result : AM_STATUS);\n\t\tvar record : CASE_AttestationCacheRecord.Impl;\n\t\tlet\n\t\t\trecord = GET_RECORD_BY_NAME(src);\n\t\t\tresult = record.trusted;\n\t\ttel;\n\n\t\t-- Returns whether the specified node has passed attestation\n\t\tnode PASS_ATTESTATION(src : int) returns (result : bool);\n\t\tvar record : CASE_AttestationCacheRecord.Impl;\n\t\tlet\n\t\t\trecord = GET_RECORD_BY_NAME(src);\n\t\t\tresult = (record.trusted = AM_PASS);\n\t\ttel;\n\t\t\n\t\t-- Returns whether the specified node data is old\n\t\t-- For now we are ignoring staleness\n\t\tnode IS_STALE(src : int) returns (result : bool);\n\t\tvar record : CASE_AttestationCacheRecord.Impl;\n\t\tlet\n\t\t\trecord = GET_RECORD_BY_NAME(src);\n\t\t\t-- for now we are ignoring staleness\n\t\t\tresult = false;\n\t\ttel;\n\t\t\n\t\t-- Creates a new record with the specified values\n\t\tnode CREATE_RECORD(new_src : int, new_trusted : int, new_timeout : int) returns (new_record : CASE_AttestationCacheRecord.Impl);\n\t\tlet\n\t\t\tnew_record = CASE_AttestationCacheRecord.Impl {src = new_src; trusted = new_trusted; timeout = new_timeout};\n\t\ttel;\n\t\t\n\t\t-- Adds a record to the cache with the specified value\n\t\t-- Record will only be added if there is free space up to an index specified by max_idx\n\t\tnode ADD_RECORD(src : int, trusted : int, timeout : int, max_idx : int) returns (success : bool);\n\t\tvar free_idx : int;\n\t\tlet\n\t\t\tfree_idx = GET_FREE_IDX(max_idx);\n\t\t\tsuccess = if IN_CACHE(src) then\n\t\t\t\t\t\tnot (WRITE_CACHE(GET_IDX_BY_NAME(src), CREATE_RECORD(src, trusted, timeout)) = NULL_CACHE)\n\t\t\t\t\telse if free_idx > 0 then\n\t\t\t\t\t\tnot (WRITE_CACHE(free_idx, CREATE_RECORD(src, trusted, timeout)) = NULL_CACHE)\n\t\t\t\t\telse\n\t\t\t\t\t\tfalse;\n\t\ttel;\n\t\t\n\t\t-- Gets the index of an available record in the cache\n\t\tnode GET_FREE_IDX(max : int) returns (idx : int);\n\t\tvar c : CASE_AttestationCache.Impl;\n\t\tlet\n\t\t\tc = CACHE(NULL_CACHE);\n\t\t\tidx = if c.src1 = NULL_RECORD and max >= 1 then 1\n\t\t\t\telse if c.src2 = NULL_RECORD and max >= 2 then 2\n\t\t\t\telse if c.src3 = NULL_RECORD and max >= 3 then 3\n\t\t\t\telse if c.src4 = NULL_RECORD and max >= 4 then 4\n\t\t\t\telse if c.src5 = NULL_RECORD and max >= 5 then 5\n\t\t\t\telse if c.src6 = NULL_RECORD and max >= 6 then 6\n\t\t\t\telse 0;\n\t\ttel;\n\t\t\n\t\t-- Returns a record in the cache at the specified index\n\t\tnode GET_RECORD_BY_IDX(idx : int) returns (record : CASE_AttestationCacheRecord.Impl);\n\t\tvar c : CASE_AttestationCache.Impl;\n\t\tlet\n\t\t\tc = CACHE(NULL_CACHE);\n\t\t\trecord = if idx = 1 then c.src1\n\t\t\t\t\telse if idx = 2 then c.src2\n\t\t\t\t\telse if idx = 3 then c.src3\n\t\t\t\t\telse if idx = 4 then c.src4\n\t\t\t\t\telse if idx = 5 then c.src5\n\t\t\t\t\telse if idx = 6 then c.src6\n\t\t\t\t\telse NULL_RECORD;\n\t\ttel;\n\t\t\n\t\t-- Returns a record in the cache with the specified ID\n\t\tnode GET_RECORD_BY_NAME(src : int) returns (record : CASE_AttestationCacheRecord.Impl);\n\t\tvar c : CASE_AttestationCache.Impl;\n\t\tlet\n\t\t\tc = CACHE(NULL_CACHE);\n\t\t\trecord = if c.src1.src = src then c.src1\n\t\t\t\t\telse if c.src2.src = src then c.src2\n\t\t\t\t\telse if c.src3.src = src then c.src3\n\t\t\t\t\telse if c.src4.src = src then c.src4\n\t\t\t\t\telse if c.src5.src = src then c.src5\n\t\t\t\t\telse if c.src6.src = src then c.src6\n\t\t\t\t\telse NULL_RECORD;\n\t\ttel;\n\t\t\n\t\t-- Returns the index of a record in the cache with the specified name\n\t\tnode GET_IDX_BY_NAME(src : int) returns (idx : int);\n\t\tvar c : CASE_AttestationCache.Impl;\n\t\tlet\n\t\t\tc = CACHE(NULL_CACHE);\n\t\t\tidx = if c.src1.src = src then 1\n\t\t\t\t\telse if c.src2.src = src then 2\n\t\t\t\t\telse if c.src3.src = src then 3\n\t\t\t\t\telse if c.src4.src = src then 4\n\t\t\t\t\telse if c.src5.src = src then 5\n\t\t\t\t\telse if c.src6.src = src then 6\n\t\t\t\t\telse 0;\n\t\ttel;\n\n\t\t-- Writes a record to the cache\n\t\tnode WRITE_CACHE(idx : int, record:CASE_AttestationCacheRecord.Impl) returns (new_cache : CASE_AttestationCache.Impl);\n\t\tlet\n\t\t\tnew_cache = if idx = 1 then\n\t\t\t\tCACHE(CASE_AttestationCache.Impl {src1 = record;\n\t\t\t\t\t\t\t\t\t\t\tsrc2 = GET_RECORD_BY_IDX(2);\n\t\t\t\t\t\t\t\t\t\t\tsrc3 = GET_RECORD_BY_IDX(3);\n\t\t\t\t\t\t\t\t\t\t\tsrc4 = GET_RECORD_BY_IDX(4);\n\t\t\t\t\t\t\t\t\t\t\tsrc5 = GET_RECORD_BY_IDX(5);\n\t\t\t\t\t\t\t\t\t\t\tsrc6 = GET_RECORD_BY_IDX(6)})\n\t\t\telse if idx = 2 then\n\t\t\t\tCACHE(CASE_AttestationCache.Impl {src1 = GET_RECORD_BY_IDX(1);\n\t\t\t\t\t\t\t\t\t\t\tsrc2 = record;\n\t\t\t\t\t\t\t\t\t\t\tsrc3 = GET_RECORD_BY_IDX(3);\n\t\t\t\t\t\t\t\t\t\t\tsrc4 = GET_RECORD_BY_IDX(4);\n\t\t\t\t\t\t\t\t\t\t\tsrc5 = GET_RECORD_BY_IDX(5);\n\t\t\t\t\t\t\t\t\t\t\tsrc6 = GET_RECORD_BY_IDX(6)})\n\t\t\telse if idx = 3 then\n\t\t\t\tCACHE(CASE_AttestationCache.Impl {src1 = GET_RECORD_BY_IDX(1);\n\t\t\t\t\t\t\t\t\t\t\tsrc2 = GET_RECORD_BY_IDX(2);\n\t\t\t\t\t\t\t\t\t\t\tsrc3 = record;\n\t\t\t\t\t\t\t\t\t\t\tsrc4 = GET_RECORD_BY_IDX(4);\n\t\t\t\t\t\t\t\t\t\t\tsrc5 = GET_RECORD_BY_IDX(5);\n\t\t\t\t\t\t\t\t\t\t\tsrc6 = GET_RECORD_BY_IDX(6)})\n\t\t\telse if idx = 4 then\n\t\t\t\tCACHE(CASE_AttestationCache.Impl {src1 = GET_RECORD_BY_IDX(1);\n\t\t\t\t\t\t\t\t\t\t\tsrc2 = GET_RECORD_BY_IDX(2);\n\t\t\t\t\t\t\t\t\t\t\tsrc3 = GET_RECORD_BY_IDX(3);\n\t\t\t\t\t\t\t\t\t\t\tsrc4 = record;\n\t\t\t\t\t\t\t\t\t\t\tsrc5 = GET_RECORD_BY_IDX(5);\n\t\t\t\t\t\t\t\t\t\t\tsrc6 = GET_RECORD_BY_IDX(6)})\n\t\t\telse if idx = 5 then\n\t\t\t\tCACHE(CASE_AttestationCache.Impl {src1 = GET_RECORD_BY_IDX(1);\n\t\t\t\t\t\t\t\t\t\t\tsrc2 = GET_RECORD_BY_IDX(2);\n\t\t\t\t\t\t\t\t\t\t\tsrc3 = GET_RECORD_BY_IDX(3);\n\t\t\t\t\t\t\t\t\t\t\tsrc4 = GET_RECORD_BY_IDX(4);\n\t\t\t\t\t\t\t\t\t\t\tsrc5 = record;\n\t\t\t\t\t\t\t\t\t\t\tsrc6 = GET_RECORD_BY_IDX(6)})\n\t\t\telse if idx = 6 then\n\t\t\t\tCACHE(CASE_AttestationCache.Impl {src1 = GET_RECORD_BY_IDX(1);\n\t\t\t\t\t\t\t\t\t\t\tsrc2 = GET_RECORD_BY_IDX(2);\n\t\t\t\t\t\t\t\t\t\t\tsrc3 = GET_RECORD_BY_IDX(3);\n\t\t\t\t\t\t\t\t\t\t\tsrc4 = GET_RECORD_BY_IDX(4);\n\t\t\t\t\t\t\t\t\t\t\tsrc5 = GET_RECORD_BY_IDX(5);\n\t\t\t\t\t\t\t\t\t\t\tsrc6 = record})\n\t\t\telse\n\t\t\t\tNULL_CACHE;\n\t\ttel;\n\t\n\t**}"
          },
          {
            "name": "Resolute",
            "kind": "AnnexLibrary",
            "sourceText": "{**\n\t\t\n\t\t---------------------------\n\t\t-- MODEL TRANSFORMATIONS --\n\t\t---------------------------\n\t\t\n\t\t-- Top-level claim for proper insertion of a filter\n\t\tadd_filter(comp_context : component, filter : component, conn : connection, msg_type : data) <=\n\t\t\t** \\\"Filter \\\" filter \\\" is properly added to component \\\" comp_context **\n\t\t\tfilter_exists(filter, comp_context, conn) and component_not_bypassed(filter, comp_context, msg_type) and component_implemented(filter)\n\t\t\t\n\t\t-- Top-level claim for proper insertion of attestation manager\n\t\tadd_attestation_manager(comm_driver : component, attestation_manager : component) <=\n\t\t\t** \\\"Attestation Manager added for communications driver \\\" comm_driver **\n\t\t\tattestation_manager_exists(comm_driver, attestation_manager) and attestation_manager_not_bypassed(comm_driver, attestation_manager)\tand component_implemented(attestation_manager)\n\t\t\n\t\t-- Top-level claim for proper insertion of virtualization\n\t\tadd_virtualization(bound_components : {component}, non_vm_comps : {component}, virtual_machine : component) <=\n\t\t\t** bound_components \\\" contained in VM \\\" virtual_machine **\n\t\t\tvm_bound_to_processor(virtual_machine) and components_bound_to_vm(bound_components, virtual_machine) and subcomponents_not_bound_to_other_processors(bound_components, non_vm_comps, virtual_machine)\n\t\t\n\t\t-- Top-level claim for proper insertion of a monitor\n\t\tadd_monitor(comp_context : component, monitor : component) <=\n\t\t\t** \\\"Monitor \\\" monitor \\\" is properly added to \\\" comp_context **\n\t\t\tcomponent_exists(monitor, \\\"MONITOR\\\") and alert_connected(monitor) and independent_reset(monitor, comp_context) and component_implemented(monitor)\n\n\t\t-- Top-level claim for proper insertion of a monitor with a gate\n\t\tadd_monitor_gate(comp_context : component, monitor : component, gate_context : component, message_type : data) <=\n\t\t\t** \\\"Monitor \\\" monitor \\\" is properly added to \\\" comp_context **\n\t\t\tcomponent_exists(monitor, \\\"MONITOR\\\") and alert_connected(monitor) and independent_reset(monitor, comp_context) and component_not_bypassed(monitor, gate_context, message_type) and component_implemented(monitor)\n\n\t\t-- Top-level claim for proper insertion of a switch\n\t\tadd_switch(comp_context : component, switch : component, message_type : data) <=\n\t\t\t** \\\"Switch inserted after \\\" comp_context **\n\t\t\tcomponent_exists(switch, \\\"SWITCH\\\") and component_not_bypassed(switch, comp_context, message_type) and component_implemented(switch)\n\t\t\n\t\t\t\n\t\t--------------------------\n\t\t-- PROJECT-LEVEL CLAIMS --\n\t\t--------------------------\n\t\t\n\t\taadl_linter() <=\n\t\t\t** \\\"Static model analysis was performed\\\" **\n\t\t\tanalysis(\\\"ToolCheck\\\", \\\"Resolint\\\")\n\t\t\n\t\tlegacy_component_verification(c : component) <=\n\t\t\t** \\\"Implementation of component \\\" c \\\" was verified\\\" **\n\t\t\tanalysis(\\\"ToolCheck\\\", \\\"Ivaldi\\\")\n\t\t\n\t\t----------------\n\t\t-- SUB CLAIMS --\n\t\t----------------\n\t\n\t\t-- This connects to evidence that AGREE was previously run on the current version of the design.\n\t\tagree_prop_checked(c : component, property_id : string) <=\n\t\t\t** \\\"AGREE properties passed\\\" **\n\t\t\tAgreeLib.hasAgreeProperty(c, property_id) and analysis(\\\"AgreeCheck\\\")\t\n\t\t\n\t\t-- Check to see if there is a filter immediately before \n\t\t-- the component on the communication pathway.\n\t\tfilter_exists(filter : component, comp_context : component, conn : connection) <=\n\t\t\t** \\\"A CASE_Filter \\\" filter \\\" is connected to component \\\" comp_context \\\" by connection \\\" conn **\n\t\t\tlet conns : {connection} = {c for (c : connections(comp_context)) | destination_component(c) = comp_context and source_component(c) = filter};\n\t\t\tis_of_case_type(filter, \\\"FILTER\\\") and exists(c : conns) . c = conn\n\t\t\t\t\t\t\n\t\t-- Check to see if the specified component exists\n\t\tcomponent_exists(comp : component, case_type : string) <=\n\t\t\t** comp \\\" exists in the model\\\" **\n\t\t\tis_of_case_type(comp, case_type) and exists(m : component) . m = comp\n\n\t\t-- Make sure there is no communication pathway that avoids the component\n\t\tcomponent_not_bypassed(comp : component, comp_context : component, msg_type : data) <=\n\t\t\t** \\\"Component \\\" comp \\\" cannot be bypassed\\\" **\n\t\t\tlet comp_srcs : {component} = get_filter_sources(comp_context, comp, msg_type); \n\t\t\tlet non_comp_srcs : {component} = get_non_filter_sources(comp_context, comp, msg_type); \n\t\t\tsize(intersect(comp_srcs, non_comp_srcs)) = 0\n\t\t\t\n\t\t-- This provides evidence that the high-assurance component was correctly generated for the appropriate os\n\t    -- and that the proof was emitted and checked.\n\t    component_implemented(comp : component) <=\n\t\t    ** \\\"Component property implemented\\\" **\n\t\t\timplementation_language_assurance(comp) and component_proof_checked(comp)\n\t\t\t\n\t\t-- Checks that a proof has been generated showing the component implementation\n\t\t-- matches the AGREE contract\n\t\tcomponent_proof_checked(comp : component) <=\n\t\t\t** \\\"Component proof checked\\\" **\n\t\t\tis_seL4_component(comp) => analysis(\\\"ToolCheck\\\", \\\"SPLAT\\\")\n\t\t\t\n\t\tis_of_case_type(comp : component, type_name : string) : bool =\n\t\t\thas_property(comp, CASE_Properties::Component_Type) and property(comp, CASE_Properties::Component_Type) = type_name\n\t\t\t\n--\t\t-- Returns the set of components that are ancestors of a target component through communication pathways that don't pass through a filter\n--\t\tget_non_filter_sources(target : component, filter : component, msg_type : data) : {component} = \n--\t\t\tlet srcs : {component} = {c for (conn : connections (target)) (c : source_component(conn)) | has_type(conn) and type(conn) = msg_type and not (name(source_component(conn)) = name (filter))}; \n--\t\t\trecursive_backwards_reach(srcs)\n\t\t\t\n\t\t-- Returns the set of components that are ancestors of a target component through communication pathways that don't pass through a filter\n\t\tget_non_filter_sources(target : component, filter : component, msg_type : data) : {component} = \n\t\t\tlet srcs : {component} = {c for (conn : connections (target)) (c : source_component(conn)) | has_type(conn) and type(conn) = msg_type and not (source_component(conn) = filter) and not (source_component(conn) = target)}; \n\t\t\trecursive_backwards_reach(srcs)\n\t\t\n\t\t-- Returns the set of components that are ancestors of the filter on a target component\n\t\tget_filter_sources(target : component, filter : component, msg_type : data) : {component} = \n\t\t\tlet srcs : {component} = {c for (conn : connections(target)) (c : source_component(conn)) | has_type(conn) and type(conn) = msg_type and name(source_component(conn)) = name(filter)};\n\t\t\tprev_reach(srcs)\n\t\t\n\t\trecursive_backwards_reach(curr : {component}) : {component} = \n\t\t\tlet prev : {component} = union(curr, prev_reach(curr)); \n\t\t\tif prev = curr then \n\t\t\t\tcurr\n\t\t\telse \n\t\t\t\trecursive_backwards_reach(prev)\n\t\t\n\t\tprev_reach(curr : {component}) : {component} = \n\t\t\t{y for (x : curr) (y : backwards_reachable_components(x))}\n\t\t\n\t\tbackwards_reachable_components(comp : component) : {component} = \n\t\t\t{c for (conn : connections (comp)) (c : backwards_reachable_components_via_connection(comp, conn))}\n\t\t\n\t\tbackwards_reachable_components_via_connection(comp : component, conn : connection) : {component} = \n\t\t\tif is_port_connection(conn) then \n\t\t\t\tif destination_component(conn) = comp then \n\t\t\t\t\t{source_component(conn)} \n\t\t\t\telse \n\t\t\t\t\t{} \n\t\t\telse \n\t\t\t\t{}\n\t\t\t\t\t\t\t\n\t\t-- Evidence that an attestation manager component exists for a given communication driver\n\t\tattestation_manager_exists(comm_driver : component, attestation_manager : component) <=\n\t\t\t** \\\"An attestation manager on \\\" comm_driver \\\" exists\\\" **\n\t\t\t-- check that the attestation manager only has attestation request/response connections to the comm driver\n\t\t\tis_of_case_type(comm_driver, \\\"COMM_DRIVER\\\") and is_of_case_type(attestation_manager, \\\"ATTESTATION\\\") and\n\t\t\tforall (conn : connections(attestation_manager)) . \n\t\t\t\t\t(has_type(conn) and name(type(conn)) = \\\"CASE_AttestationRequestMsg.Impl\\\") => destination_component(conn) = comm_driver and\n\t\t\t\t\t(has_type(conn) and name(type(conn)) = \\\"CASE_AttestationResponseMsg.Impl\\\") => source_component(conn) = comm_driver\n\t\t\t\n--\t\t-- Evidence that communication from the comm driver cannot bypass attestation manager\n--\t\tattestation_manager_not_bypassed(comm_driver : component, attestation_manager : component) <=\n--\t\t\t** \\\"Attestation Manager cannot be bypassed\\\" **\n--\t\t\t-- all outgoing connections from the comm driver to components inside the \n--\t\t\t-- parent of the comm driver connect to the attestation manager\n--\t\t\tlet out_conns : {connection} = {conn for (conn : connections(comm_driver)) | source_component(conn) = comm_driver and not (destination_component(conn) = parent(comm_driver))};\n--\t\t\tforall(conn : out_conns) . destination_component(conn) = attestation_manager\t\t\n\t\t\t\t\n\t\t-- Evidence that communication from the comm driver cannot bypass attestation manager\n\t\tattestation_manager_not_bypassed(comm_driver : component, attestation_manager : component) <=\n\t\t\t** \\\"Attestation Manager cannot be bypassed\\\" **\n\t\t\t-- all outgoing connections from the comm driver to components inside the \n\t\t\t-- parent of the comm driver connect to the attestation manager\n\t\t\tlet out_conns : {connection} = {conn for (conn : connections(comm_driver)) | source_component(conn) = comm_driver and not (destination_component(conn) = parent(comm_driver))};\n\t\t\tforall(conn : out_conns) . (not is_software_component(destination_component(conn)) or destination_component(conn) = attestation_manager)\n\n\t\t\t\t\n\t\t-- Checks if the specified virtual processor is a CASE Virtualization and is bound to a processor\n\t\tvm_bound_to_processor(virtual_machine : component) <=\n\t\t\t** virtual_machine \\\" is bound to a processor\\\" **\n\t\t\tis_of_case_type(virtual_machine, \\\"VIRTUAL_MACHINE\\\") and exists(p : processor) . is_bound_to(virtual_machine, p)\n\t\t\t\t\t\n\t\t-- Checks that bindings exist between specified virtualized components and virtual processor\n\t\tcomponents_bound_to_vm(bound_components : {component}, virtual_machine : component) <=\n\t\t\t** \\\"Components are bound to virtual processor \\\" virtual_machine **\n\t\t\tforall (c : bound_components) . check_vm_binding(c, virtual_machine)\n\t\t\t\n\t\t-- Checks that the specified component is bound to the specified virtual processor\n\t\tcheck_vm_binding(c : component, virtual_machine : component) <=\n\t\t\t** \\\"Component \\\" c \\\" is bound to virtual processor \\\" virtual_machine **\n\t\t\tis_bound_to(c, virtual_machine)\n\t\t\n\t\t-- Checks that subcomponents of specified virtualized components are not bound to processors other than the \n\t\t-- specified VM\n\t\tsubcomponents_not_bound_to_other_processors(bound_components : {component}, non_vm_comps : {component}, virtual_machine : component) <=\n\t\t\t** \\\"Subcomponents are not bound to other processors\\\" **\n\t\t\tlet subs : {component} = get_subcomponents(next_subcomponent(bound_components));\n\t\t\tforall (s : subs) . not exists (v : component) . (is_bound_to_processor(s, v) and not (v = virtual_machine) and not member(s, non_vm_comps))\n\t\t\t\n\t\t-- Get set of descendants\n\t\tget_subcomponents(curr : {component}) : {component} =\n\t\t\tlet next : {component} = union(curr, next_subcomponent(curr));\n\t\t\tif next = curr then\n\t\t\t\tcurr\n\t\t\telse\n\t\t\t\tget_subcomponents(next)\n\t\t\t\n\t\tnext_subcomponent(curr : {component}) : {component} =\n\t\t\t{y for (x : curr) (y : subcomponents(x))}\n\t\t\t\n\t\timplementation_language_assurance(comp : component) <=\n\t\t\t** comp \\\" implementation is appropriate for OS\\\" **\n\t\t\tis_seL4_component(comp) => (has_property(comp, CASE_Properties::Component_Impl) and property(comp, CASE_Properties::Component_Impl) = \\\"CakeML\\\")\n\t\t\t\n\t\t-- checks that a component will run on seL4 by checking that the processors it is bound to have the seL4 OS property\n\t\tis_seL4_component(comp : component) : bool =\n\t\t\tlet proc : {component} = {c for (c : component) | is_bound_to_processor(comp, c)};\n\t\t\t(size(proc) > 0) and forall (p : proc) . (has_property(p, CASE_Properties::OS) and property(p, CASE_Properties::OS) = \\\"seL4\\\")\n\t\t\n\t\tis_bound_to_processor(c : component, p : component) : bool =\n\t\t\tis_bound_to(c, p) and (is_processor(p) or is_virtual_processor(p))\n\t\t\t\t\t\t\n\t\talert_connected(monitor : component) <=\n\t\t\t** \\\"Monitor Alert port is connected\\\" **\n\t\t\tlet alert_ports : {feature} = {p for (p : features(monitor)) | name(p) = \\\"alert\\\"};\n\t\t\tlet alert_conns : {connection} = {c for (p : alert_ports) (c : connection) | source(c) = p};\n\t\t\tlength(alert_conns) > 0\n\t\t\t\t\t\t\n\t\tindependent_reset(monitor : component, comp_context : component) <=\n\t\t\t** \\\"Monitor reset port cannot be triggered by source of observed signal\\\" **\n\t\t\tlet reset_ancestors : {component} = {comp for (conn : connections(monitor)) (comp : recursive_backwards_reach({source_component(conn)})) | destination_component(conn) = monitor and name(destination(conn)) = \\\"reset\\\"};\n\t\t\tlength(intersect(reset_ancestors, {comp_context})) = 0\n\t\t\t\n\t\tis_software_component(comp : component) : bool =\n\t\t\tis_process(comp) or is_thread_group(comp) or is_thread(comp)\n\t\t\n\t**}"
          }
        ]
      }
    },
    {
      "name": "Base_Types",
      "kind": "AadlPackage",
      "public": {
        "with": [
          "Data_Model"
        ],
        "components": [
          {
            "name": "Base_Types::Boolean",
            "localName": "Boolean",
            "kind": "ComponentType",
            "category": "data",
            "properties": [
              {
                "name": "Data_Model::Data_Representation",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "EnumerationLiteral",
                  "value": "Boolean"
                }
              }
            ]
          },
          {
            "name": "Base_Types::Integer",
            "localName": "Integer",
            "kind": "ComponentType",
            "category": "data",
            "properties": [
              {
                "name": "Data_Model::Data_Representation",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "EnumerationLiteral",
                  "value": "Integer"
                }
              }
            ]
          },
          {
            "name": "Base_Types::Integer_8",
            "localName": "Integer_8",
            "kind": "ComponentType",
            "category": "data",
            "extends": "Base_Types::Integer",
            "properties": [
              {
                "name": "Data_Model::Number_Representation",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "EnumerationLiteral",
                  "value": "Signed"
                }
              },
              {
                "name": "Memory_Properties::Data_Size",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "IntegerLiteral",
                  "value": 1,
                  "unit": "Bytes"
                }
              }
            ]
          },
          {
            "name": "Base_Types::Integer_16",
            "localName": "Integer_16",
            "kind": "ComponentType",
            "category": "data",
            "extends": "Base_Types::Integer",
            "properties": [
              {
                "name": "Data_Model::Number_Representation",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "EnumerationLiteral",
                  "value": "Signed"
                }
              },
              {
                "name": "Memory_Properties::Data_Size",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "IntegerLiteral",
                  "value": 2,
                  "unit": "Bytes"
                }
              }
            ]
          },
          {
            "name": "Base_Types::Integer_32",
            "localName": "Integer_32",
            "kind": "ComponentType",
            "category": "data",
            "extends": "Base_Types::Integer",
            "properties": [
              {
                "name": "Data_Model::Number_Representation",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "EnumerationLiteral",
                  "value": "Signed"
                }
              },
              {
                "name": "Memory_Properties::Data_Size",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "IntegerLiteral",
                  "value": 4,
                  "unit": "Bytes"
                }
              }
            ]
          },
          {
            "name": "Base_Types::Integer_64",
            "localName": "Integer_64",
            "kind": "ComponentType",
            "category": "data",
            "extends": "Base_Types::Integer",
            "properties": [
              {
                "name": "Data_Model::Number_Representation",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "EnumerationLiteral",
                  "value": "Signed"
                }
              },
              {
                "name": "Memory_Properties::Data_Size",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "IntegerLiteral",
                  "value": 8,
                  "unit": "Bytes"
                }
              }
            ]
          },
          {
            "name": "Base_Types::Unsigned_8",
            "localName": "Unsigned_8",
            "kind": "ComponentType",
            "category": "data",
            "extends": "Base_Types::Integer",
            "properties": [
              {
                "name": "Data_Model::Number_Representation",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "EnumerationLiteral",
                  "value": "Unsigned"
                }
              },
              {
                "name": "Memory_Properties::Data_Size",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "IntegerLiteral",
                  "value": 1,
                  "unit": "Bytes"
                }
              }
            ]
          },
          {
            "name": "Base_Types::Unsigned_16",
            "localName": "Unsigned_16",
            "kind": "ComponentType",
            "category": "data",
            "extends": "Base_Types::Integer",
            "properties": [
              {
                "name": "Data_Model::Number_Representation",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "EnumerationLiteral",
                  "value": "Unsigned"
                }
              },
              {
                "name": "Memory_Properties::Data_Size",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "IntegerLiteral",
                  "value": 2,
                  "unit": "Bytes"
                }
              }
            ]
          },
          {
            "name": "Base_Types::Unsigned_32",
            "localName": "Unsigned_32",
            "kind": "ComponentType",
            "category": "data",
            "extends": "Base_Types::Integer",
            "properties": [
              {
                "name": "Data_Model::Number_Representation",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "EnumerationLiteral",
                  "value": "Unsigned"
                }
              },
              {
                "name": "Memory_Properties::Data_Size",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "IntegerLiteral",
                  "value": 4,
                  "unit": "Bytes"
                }
              }
            ]
          },
          {
            "name": "Base_Types::Unsigned_64",
            "localName": "Unsigned_64",
            "kind": "ComponentType",
            "category": "data",
            "extends": "Base_Types::Integer",
            "properties": [
              {
                "name": "Data_Model::Number_Representation",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "EnumerationLiteral",
                  "value": "Unsigned"
                }
              },
              {
                "name": "Memory_Properties::Data_Size",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "IntegerLiteral",
                  "value": 8,
                  "unit": "Bytes"
                }
              }
            ]
          },
          {
            "name": "Base_Types::Natural",
            "localName": "Natural",
            "kind": "ComponentType",
            "category": "data",
            "extends": "Base_Types::Integer",
            "properties": [
              {
                "name": "Data_Model::Integer_Range",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "RangeValue",
                  "value": {
                    "min": {
                      "kind": "IntegerLiteral",
                      "value": 0,
                      "unit": null
                    },
                    "max": {
                      "kind": "PropertyConstant",
                      "value": "Max_Target_Integer"
                    }
                  }
                }
              }
            ]
          },
          {
            "name": "Base_Types::Float",
            "localName": "Float",
            "kind": "ComponentType",
            "category": "data",
            "properties": [
              {
                "name": "Data_Model::Data_Representation",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "EnumerationLiteral",
                  "value": "Float"
                }
              }
            ]
          },
          {
            "name": "Base_Types::Float_32",
            "localName": "Float_32",
            "kind": "ComponentType",
            "category": "data",
            "extends": "Base_Types::Float",
            "properties": [
              {
                "name": "Data_Model::IEEE754_Precision",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "EnumerationLiteral",
                  "value": "Simple"
                }
              },
              {
                "name": "Memory_Properties::Data_Size",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "IntegerLiteral",
                  "value": 4,
                  "unit": "Bytes"
                }
              }
            ]
          },
          {
            "name": "Base_Types::Float_64",
            "localName": "Float_64",
            "kind": "ComponentType",
            "category": "data",
            "extends": "Base_Types::Float",
            "properties": [
              {
                "name": "Data_Model::IEEE754_Precision",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "EnumerationLiteral",
                  "value": "Double"
                }
              },
              {
                "name": "Memory_Properties::Data_Size",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "IntegerLiteral",
                  "value": 8,
                  "unit": "Bytes"
                }
              }
            ]
          },
          {
            "name": "Base_Types::Character",
            "localName": "Character",
            "kind": "ComponentType",
            "category": "data",
            "properties": [
              {
                "name": "Data_Model::Data_Representation",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "EnumerationLiteral",
                  "value": "Character"
                }
              }
            ]
          },
          {
            "name": "Base_Types::String",
            "localName": "String",
            "kind": "ComponentType",
            "category": "data",
            "properties": [
              {
                "name": "Data_Model::Data_Representation",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "EnumerationLiteral",
                  "value": "String"
                }
              }
            ]
          }
        ]
      }
    },
    {
      "name": "Data_Model",
      "kind": "PropertySet",
      "properties": [
        {
          "name": "Data_Model::Base_Type",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "ListType",
            "propertyType": {
              "kind": "ClassifierType",
              "classifiers": [
                "data"
              ]
            }
          },
          "appliesTo": [
            "data",
            "feature"
          ]
        },
        {
          "name": "Data_Model::Code_Set",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "data",
            "feature"
          ]
        },
        {
          "name": "Data_Model::Data_Digits",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "data",
            "feature"
          ]
        },
        {
          "name": "Data_Model::Data_Scale",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "data",
            "feature"
          ]
        },
        {
          "name": "Data_Model::Data_Representation",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "EnumerationType",
            "values": [
              "Array",
              "Boolean",
              "Character",
              "Enum",
              "Float",
              "Fixed",
              "Integer",
              "String",
              "Struct",
              "Union"
            ]
          },
          "appliesTo": [
            "data",
            "feature"
          ]
        },
        {
          "name": "Data_Model::MyDimension",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "data",
            "feature"
          ]
        },
        {
          "name": "Data_Model::Dimension",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "ListType",
            "propertyType": {
              "kind": "AadlInteger"
            }
          },
          "appliesTo": [
            "data",
            "data port",
            "event data port",
            "data access"
          ]
        },
        {
          "name": "Data_Model::Element_Names",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "ListType",
            "propertyType": {
              "kind": "AadlString"
            }
          },
          "appliesTo": [
            "data",
            "feature"
          ]
        },
        {
          "name": "Data_Model::Enumerators",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "ListType",
            "propertyType": {
              "kind": "AadlString"
            }
          },
          "appliesTo": [
            "data",
            "feature"
          ]
        },
        {
          "name": "Data_Model::IEEE754_Precision",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "EnumerationType",
            "values": [
              "Simple",
              "Double"
            ]
          },
          "appliesTo": [
            "data",
            "feature"
          ]
        },
        {
          "name": "Data_Model::Initial_Value",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "ListType",
            "propertyType": {
              "kind": "AadlString"
            }
          },
          "appliesTo": [
            "data",
            "feature"
          ]
        },
        {
          "name": "Data_Model::Integer_Range",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "RangeType",
            "numberType": {
              "kind": "AadlInteger"
            }
          },
          "appliesTo": [
            "data",
            "feature"
          ]
        },
        {
          "name": "Data_Model::Measurement_Unit",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlString"
          },
          "appliesTo": [
            "data",
            "feature"
          ]
        },
        {
          "name": "Data_Model::Number_Representation",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "EnumerationType",
            "values": [
              "Signed",
              "Unsigned"
            ]
          },
          "appliesTo": [
            "data",
            "feature"
          ]
        },
        {
          "name": "Data_Model::Real_Range",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "RangeType",
            "numberType": {
              "kind": "AadlReal"
            }
          },
          "appliesTo": [
            "data",
            "feature"
          ]
        },
        {
          "name": "Data_Model::Representation",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "ListType",
            "propertyType": {
              "kind": "AadlString"
            }
          },
          "appliesTo": [
            "data",
            "feature"
          ]
        }
      ]
    },
    {
      "name": "CM_Property_Set",
      "kind": "PropertySet",
      "propertyConstants": [
        {
          "name": "CM_Property_Set::Stack_Size",
          "kind": "PropertyConstant",
          "propertyType": {
            "kind": "AadlInteger"
          },
          "value": {
            "kind": "IntegerLiteral",
            "value": 524288,
            "unit": "Bytes"
          }
        },
        {
          "name": "CM_Property_Set::RadioDriver_Attestation_Domain",
          "kind": "PropertyConstant",
          "propertyType": {
            "kind": "AadlInteger"
          },
          "value": {
            "kind": "IntegerLiteral",
            "value": 2,
            "unit": null
          }
        },
        {
          "name": "CM_Property_Set::UARTDriver_Domain",
          "kind": "PropertyConstant",
          "propertyType": {
            "kind": "AadlInteger"
          },
          "value": {
            "kind": "IntegerLiteral",
            "value": 3,
            "unit": null
          }
        },
        {
          "name": "CM_Property_Set::CASE_AttestationGate_Domain",
          "kind": "PropertyConstant",
          "propertyType": {
            "kind": "AadlInteger"
          },
          "value": {
            "kind": "IntegerLiteral",
            "value": 5,
            "unit": null
          }
        },
        {
          "name": "CM_Property_Set::CASE_Filter_LST_Domain",
          "kind": "PropertyConstant",
          "propertyType": {
            "kind": "AadlInteger"
          },
          "value": {
            "kind": "IntegerLiteral",
            "value": 7,
            "unit": null
          }
        },
        {
          "name": "CM_Property_Set::CASE_Filter_OR_Domain",
          "kind": "PropertyConstant",
          "propertyType": {
            "kind": "AadlInteger"
          },
          "value": {
            "kind": "IntegerLiteral",
            "value": 8,
            "unit": null
          }
        },
        {
          "name": "CM_Property_Set::UxAS_Domain",
          "kind": "PropertyConstant",
          "propertyType": {
            "kind": "AadlInteger"
          },
          "value": {
            "kind": "IntegerLiteral",
            "value": 9,
            "unit": null
          }
        },
        {
          "name": "CM_Property_Set::FlyZonesDatabase_Domain",
          "kind": "PropertyConstant",
          "propertyType": {
            "kind": "AadlInteger"
          },
          "value": {
            "kind": "IntegerLiteral",
            "value": 10,
            "unit": null
          }
        },
        {
          "name": "CM_Property_Set::CASE_Monitor_Req_Domain",
          "kind": "PropertyConstant",
          "propertyType": {
            "kind": "AadlInteger"
          },
          "value": {
            "kind": "IntegerLiteral",
            "value": 11,
            "unit": null
          }
        },
        {
          "name": "CM_Property_Set::CASE_Filter_ARes_Domain",
          "kind": "PropertyConstant",
          "propertyType": {
            "kind": "AadlInteger"
          },
          "value": {
            "kind": "IntegerLiteral",
            "value": 12,
            "unit": null
          }
        },
        {
          "name": "CM_Property_Set::CASE_Monitor_Geo_Domain",
          "kind": "PropertyConstant",
          "propertyType": {
            "kind": "AadlInteger"
          },
          "value": {
            "kind": "IntegerLiteral",
            "value": 13,
            "unit": null
          }
        },
        {
          "name": "CM_Property_Set::WaypointPlanManangerService_Domain",
          "kind": "PropertyConstant",
          "propertyType": {
            "kind": "AadlInteger"
          },
          "value": {
            "kind": "IntegerLiteral",
            "value": 14,
            "unit": null
          }
        },
        {
          "name": "CM_Property_Set::AutomationResponse_Bit_Codec_Max_Size",
          "kind": "PropertyConstant",
          "propertyType": {
            "kind": "AadlInteger"
          },
          "value": {
            "kind": "IntegerLiteral",
            "value": 262144,
            "unit": "bits"
          }
        },
        {
          "name": "CM_Property_Set::AutomationRequest_Bit_Codec_Max_Size",
          "kind": "PropertyConstant",
          "propertyType": {
            "kind": "AadlInteger"
          },
          "value": {
            "kind": "IntegerLiteral",
            "value": 2048,
            "unit": "bits"
          }
        },
        {
          "name": "CM_Property_Set::Polygon_Bit_Codec_Max_Size",
          "kind": "PropertyConstant",
          "propertyType": {
            "kind": "AadlInteger"
          },
          "value": {
            "kind": "IntegerLiteral",
            "value": 1024,
            "unit": "bits"
          }
        },
        {
          "name": "CM_Property_Set::MissionCommand_Bit_Codec_Max_Size",
          "kind": "PropertyConstant",
          "propertyType": {
            "kind": "AadlInteger"
          },
          "value": {
            "kind": "IntegerLiteral",
            "value": 16384,
            "unit": "bits"
          }
        },
        {
          "name": "CM_Property_Set::AirVehicleState_Bit_Codec_Max_Size",
          "kind": "PropertyConstant",
          "propertyType": {
            "kind": "AadlInteger"
          },
          "value": {
            "kind": "IntegerLiteral",
            "value": 4096,
            "unit": "bits"
          }
        },
        {
          "name": "CM_Property_Set::Address_Array_Bit_Codec_Max_Size",
          "kind": "PropertyConstant",
          "propertyType": {
            "kind": "AadlInteger"
          },
          "value": {
            "kind": "IntegerLiteral",
            "value": 96,
            "unit": "bits"
          }
        },
        {
          "name": "CM_Property_Set::OperatingRegion_Bit_Codec_Max_Size",
          "kind": "PropertyConstant",
          "propertyType": {
            "kind": "AadlInteger"
          },
          "value": {
            "kind": "IntegerLiteral",
            "value": 2048,
            "unit": "bits"
          }
        },
        {
          "name": "CM_Property_Set::LineSearchTask_Bit_Codec_Max_Size",
          "kind": "PropertyConstant",
          "propertyType": {
            "kind": "AadlInteger"
          },
          "value": {
            "kind": "IntegerLiteral",
            "value": 65536,
            "unit": "bits"
          }
        },
        {
          "name": "CM_Property_Set::AddressAttributedMessage_Bit_Codec_Max_Size",
          "kind": "PropertyConstant",
          "propertyType": {
            "kind": "AadlInteger"
          },
          "value": {
            "kind": "IntegerLiteral",
            "value": 131072,
            "unit": "bits"
          }
        },
        {
          "name": "CM_Property_Set::CASE_Attestation_Bit_Codec_Max_Size",
          "kind": "PropertyConstant",
          "propertyType": {
            "kind": "AadlInteger"
          },
          "value": {
            "kind": "IntegerLiteral",
            "value": 1024,
            "unit": "bits"
          }
        }
      ]
    },
    {
      "name": "HAMR",
      "kind": "PropertySet",
      "properties": [
        {
          "name": "HAMR::Platform",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "ListType",
            "propertyType": {
              "kind": "EnumerationType",
              "values": [
                "JVM",
                "Linux",
                "macOS",
                "Cygwin",
                "seL4",
                "seL4_Only",
                "seL4_TB"
              ]
            }
          },
          "appliesTo": [
            "processor",
            "virtual processor",
            "system implementation"
          ]
        },
        {
          "name": "HAMR::Default_Bit_Width",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "processor",
            "virtual processor",
            "system implementation"
          ]
        },
        {
          "name": "HAMR::Default_Max_Sequence_Size",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "processor",
            "virtual processor",
            "system implementation"
          ]
        },
        {
          "name": "HAMR::Max_String_Size",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "processor",
            "virtual processor",
            "system implementation"
          ]
        },
        {
          "name": "HAMR::HW",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "ListType",
            "propertyType": {
              "kind": "EnumerationType",
              "values": [
                "ODROID_XU4",
                "QEMU",
                "x86",
                "amd64"
              ]
            }
          },
          "appliesTo": [
            "processor",
            "virtual processor",
            "system implementation"
          ]
        },
        {
          "name": "HAMR::Component_Type",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "EnumerationType",
            "values": [
              "FILTER",
              "ATTESTATION",
              "MONITOR",
              "VIRTUAL_MACHINE",
              "COMM_DRIVER",
              "SEL4",
              "SWITCH"
            ]
          },
          "appliesTo": [
            "system",
            "process",
            "thread",
            "thread group",
            "device",
            "abstract",
            "processor",
            "virtual processor"
          ]
        },
        {
          "name": "HAMR::Bit_Codec_Raw_Connections",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlBoolean"
          },
          "appliesTo": [
            "system"
          ]
        },
        {
          "name": "HAMR::Bit_Codec_Max_Size",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "connection",
            "data"
          ]
        },
        {
          "name": "HAMR::Bit_Codec_Spec",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlString"
          },
          "appliesTo": [
            "connection",
            "data"
          ]
        },
        {
          "name": "HAMR::Bit_Codec_Encoded",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlBoolean"
          },
          "appliesTo": [
            "connection"
          ]
        }
      ]
    },
    {
      "name": "CMASI",
      "kind": "AadlPackage",
      "public": {
        "with": [
          "Base_Types",
          "Data_Model",
          "CM_Property_Set",
          "HAMR"
        ],
        "packageRenames": [
          {
            "package": "Base_Types",
            "rename": "all"
          }
        ],
        "components": [
          {
            "name": "CMASI::LMCPObject",
            "localName": "LMCPObject",
            "kind": "ComponentType",
            "category": "data",
            "properties": [
              {
                "name": "Data_Model::Data_Representation",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "EnumerationLiteral",
                  "value": "Union"
                }
              }
            ]
          },
          {
            "packageName": "CMASI",
            "name": "CMASI::LMCPObject.i",
            "localName": "LMCPObject.i",
            "kind": "ComponentImplementation",
            "category": "data",
            "subcomponents": [
              {
                "name": "AutomationRequest",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "CMASI::AutomationRequest.i"
              },
              {
                "name": "OperatingRegion",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "CMASI::OperatingRegion.i"
              },
              {
                "name": "LineSearchTask",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "CMASI::LineSearchTask.i"
              },
              {
                "name": "AutomationResponse",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "CMASI::AutomationResponse.i"
              }
            ]
          },
          {
            "name": "CMASI::Address",
            "localName": "Address",
            "kind": "ComponentType",
            "category": "data"
          },
          {
            "packageName": "CMASI",
            "name": "CMASI::Address.i",
            "localName": "Address.i",
            "kind": "ComponentImplementation",
            "category": "data",
            "subcomponents": [
              {
                "name": "value",
                "kind": "Subcomponent",
                "category": "data",
                "dimensions": [
                  {
                    "kind": "ArrayDimension",
                    "value": 4
                  }
                ],
                "classifier": "Base_Types::Integer_8"
              }
            ]
          },
          {
            "name": "CMASI::AddressArray",
            "localName": "AddressArray",
            "kind": "ComponentType",
            "category": "data"
          },
          {
            "packageName": "CMASI",
            "name": "CMASI::AddressArray.i",
            "localName": "AddressArray.i",
            "kind": "ComponentImplementation",
            "category": "data",
            "subcomponents": [
              {
                "name": "value",
                "kind": "Subcomponent",
                "category": "data",
                "dimensions": [
                  {
                    "kind": "ArrayDimension",
                    "value": 3
                  }
                ],
                "classifier": "CMASI::Address.i"
              }
            ],
            "properties": [
              {
                "name": "HAMR::Bit_Codec_Max_Size",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "PropertyConstant",
                  "value": "Address_Array_Bit_Codec_Max_Size"
                }
              }
            ]
          },
          {
            "name": "CMASI::AddressAttributedMessage",
            "localName": "AddressAttributedMessage",
            "kind": "ComponentType",
            "category": "data"
          },
          {
            "packageName": "CMASI",
            "name": "CMASI::AddressAttributedMessage.i",
            "localName": "AddressAttributedMessage.i",
            "kind": "ComponentImplementation",
            "category": "data",
            "subcomponents": [
              {
                "name": "id",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "CMASI::Address.i"
              },
              {
                "name": "payload",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "CMASI::LMCPObject.i"
              }
            ],
            "properties": [
              {
                "name": "HAMR::Bit_Codec_Max_Size",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "PropertyConstant",
                  "value": "AddressAttributedMessage_Bit_Codec_Max_Size"
                }
              }
            ]
          },
          {
            "name": "CMASI::AltitudeType",
            "localName": "AltitudeType",
            "kind": "ComponentType",
            "category": "data",
            "extends": "Base_Types::Integer",
            "properties": [
              {
                "name": "Data_Model::Data_Representation",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "EnumerationLiteral",
                  "value": "Enum"
                }
              },
              {
                "name": "Data_Model::Enumerators",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "ListValue",
                  "value": [
                    {
                      "kind": "StringLiteral",
                      "value": "AGL"
                    },
                    {
                      "kind": "StringLiteral",
                      "value": "MSL"
                    }
                  ]
                }
              }
            ]
          },
          {
            "packageName": "CMASI",
            "name": "CMASI::AltitudeType.i",
            "localName": "AltitudeType.i",
            "kind": "ComponentImplementation",
            "category": "data"
          },
          {
            "name": "CMASI::AbstractGeometry",
            "localName": "AbstractGeometry",
            "kind": "ComponentType",
            "category": "data"
          },
          {
            "packageName": "CMASI",
            "name": "CMASI::AbstractGeometry.i",
            "localName": "AbstractGeometry.i",
            "kind": "ComponentImplementation",
            "category": "data"
          },
          {
            "name": "CMASI::Polygon",
            "localName": "Polygon",
            "kind": "ComponentType",
            "category": "data",
            "extends": "CMASI::AbstractGeometry"
          },
          {
            "packageName": "CMASI",
            "name": "CMASI::Polygon.i",
            "localName": "Polygon.i",
            "kind": "ComponentImplementation",
            "category": "data",
            "extends": "CMASI::AbstractGeometry.i",
            "subcomponents": [
              {
                "name": "BoundaryPointsList",
                "kind": "Subcomponent",
                "category": "data",
                "dimensions": [
                  {
                    "kind": "ArrayDimension",
                    "value": 2
                  }
                ],
                "classifier": "CMASI::Location3D.i"
              }
            ],
            "properties": [
              {
                "name": "HAMR::Bit_Codec_Max_Size",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "PropertyConstant",
                  "value": "Polygon_Bit_Codec_Max_Size"
                }
              }
            ]
          },
          {
            "name": "CMASI::KeyValuePair",
            "localName": "KeyValuePair",
            "kind": "ComponentType",
            "category": "data"
          },
          {
            "packageName": "CMASI",
            "name": "CMASI::KeyValuePair.i",
            "localName": "KeyValuePair.i",
            "kind": "ComponentImplementation",
            "category": "data",
            "subcomponents": [
              {
                "name": "Key",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::String"
              },
              {
                "name": "Value",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::String"
              }
            ]
          },
          {
            "name": "CMASI::Location3D",
            "localName": "Location3D",
            "kind": "ComponentType",
            "category": "data"
          },
          {
            "packageName": "CMASI",
            "name": "CMASI::Location3D.i",
            "localName": "Location3D.i",
            "kind": "ComponentImplementation",
            "category": "data",
            "subcomponents": [
              {
                "name": "Latitude",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::Float_64"
              },
              {
                "name": "Longitude",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::Float_64"
              },
              {
                "name": "Altitude",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::Float_32"
              },
              {
                "name": "AltitudeType",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "CMASI::AltitudeType.i"
              }
            ]
          },
          {
            "name": "CMASI::PayloadConfiguration",
            "localName": "PayloadConfiguration",
            "kind": "ComponentType",
            "category": "data"
          },
          {
            "packageName": "CMASI",
            "name": "CMASI::PayloadConfiguration.i",
            "localName": "PayloadConfiguration.i",
            "kind": "ComponentImplementation",
            "category": "data",
            "subcomponents": [
              {
                "name": "PayloadID",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::Integer_64"
              },
              {
                "name": "PayloadKind",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::String"
              },
              {
                "name": "Parameters",
                "kind": "Subcomponent",
                "category": "data",
                "dimensions": [
                  {
                    "kind": "ArrayDimension",
                    "value": 1
                  }
                ],
                "classifier": "CMASI::KeyValuePair.i"
              }
            ]
          },
          {
            "name": "CMASI::GimbalConfiguration",
            "localName": "GimbalConfiguration",
            "kind": "ComponentType",
            "category": "data",
            "extends": "CMASI::PayloadConfiguration"
          },
          {
            "packageName": "CMASI",
            "name": "CMASI::GimbalConfiguration.i",
            "localName": "GimbalConfiguration.i",
            "kind": "ComponentImplementation",
            "category": "data",
            "extends": "CMASI::PayloadConfiguration.i",
            "subcomponents": [
              {
                "name": "MinAzimuth",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::Float_32"
              },
              {
                "name": "MaxAzimuth",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::Float_32"
              },
              {
                "name": "IsAzimuthClamped",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::Boolean"
              },
              {
                "name": "MinElevation",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::Float_32"
              },
              {
                "name": "MaxElevation",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::Float_32"
              },
              {
                "name": "IsElevationClamped",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::Boolean"
              },
              {
                "name": "MinRotation",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::Float_32"
              },
              {
                "name": "MaxRotation",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::Float_32"
              },
              {
                "name": "IsRotationClamped",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::Boolean"
              },
              {
                "name": "MaxAzimuthSlewRate",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::Float_32"
              },
              {
                "name": "MaxElevationSlewRate",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::Float_32"
              },
              {
                "name": "MaxRotationRate",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::Float_32"
              }
            ]
          },
          {
            "name": "CMASI::PayloadState",
            "localName": "PayloadState",
            "kind": "ComponentType",
            "category": "data"
          },
          {
            "packageName": "CMASI",
            "name": "CMASI::PayloadState.i",
            "localName": "PayloadState.i",
            "kind": "ComponentImplementation",
            "category": "data",
            "subcomponents": [
              {
                "name": "PayloadID",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::Integer_64"
              },
              {
                "name": "Parameters",
                "kind": "Subcomponent",
                "category": "data",
                "dimensions": [
                  {
                    "kind": "ArrayDimension",
                    "value": 1
                  }
                ],
                "classifier": "CMASI::KeyValuePair.i"
              }
            ]
          },
          {
            "name": "CMASI::AutomationRequest",
            "localName": "AutomationRequest",
            "kind": "ComponentType",
            "category": "data"
          },
          {
            "packageName": "CMASI",
            "name": "CMASI::AutomationRequest.i",
            "localName": "AutomationRequest.i",
            "kind": "ComponentImplementation",
            "category": "data",
            "subcomponents": [
              {
                "name": "EntityList",
                "kind": "Subcomponent",
                "category": "data",
                "dimensions": [
                  {
                    "kind": "ArrayDimension",
                    "value": 1
                  }
                ],
                "classifier": "Base_Types::Integer_64"
              },
              {
                "name": "TaskList",
                "kind": "Subcomponent",
                "category": "data",
                "dimensions": [
                  {
                    "kind": "ArrayDimension",
                    "value": 1
                  }
                ],
                "classifier": "Base_Types::Integer_64"
              },
              {
                "name": "TaskListSize",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::Integer_64"
              },
              {
                "name": "TaskRelationships",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::String"
              },
              {
                "name": "OperatingRegion",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::Integer_64"
              },
              {
                "name": "RedoAllTasks",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::Boolean"
              }
            ],
            "properties": [
              {
                "name": "HAMR::Bit_Codec_Max_Size",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "PropertyConstant",
                  "value": "AutomationRequest_Bit_Codec_Max_Size"
                }
              }
            ]
          },
          {
            "name": "CMASI::AutomationResponse",
            "localName": "AutomationResponse",
            "kind": "ComponentType",
            "category": "data"
          },
          {
            "packageName": "CMASI",
            "name": "CMASI::AutomationResponse.i",
            "localName": "AutomationResponse.i",
            "kind": "ComponentImplementation",
            "category": "data",
            "subcomponents": [
              {
                "name": "MissionCommandList",
                "kind": "Subcomponent",
                "category": "data",
                "dimensions": [
                  {
                    "kind": "ArrayDimension",
                    "value": 1
                  }
                ],
                "classifier": "CMASI::MissionCommand.i"
              },
              {
                "name": "VehicleCommandList",
                "kind": "Subcomponent",
                "category": "data",
                "dimensions": [
                  {
                    "kind": "ArrayDimension",
                    "value": 1
                  }
                ],
                "classifier": "CMASI::VehicleActionCommand.i"
              },
              {
                "name": "Info",
                "kind": "Subcomponent",
                "category": "data",
                "dimensions": [
                  {
                    "kind": "ArrayDimension",
                    "value": 3
                  }
                ],
                "classifier": "CMASI::KeyValuePair"
              }
            ],
            "properties": [
              {
                "name": "HAMR::Bit_Codec_Max_Size",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "PropertyConstant",
                  "value": "AutomationResponse_Bit_Codec_Max_Size"
                }
              }
            ]
          },
          {
            "name": "CMASI::FlightProfile",
            "localName": "FlightProfile",
            "kind": "ComponentType",
            "category": "data"
          },
          {
            "packageName": "CMASI",
            "name": "CMASI::FlightProfile.i",
            "localName": "FlightProfile.i",
            "kind": "ComponentImplementation",
            "category": "data",
            "subcomponents": [
              {
                "name": "Name",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::String"
              },
              {
                "name": "Airspeed",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::Float_32"
              },
              {
                "name": "PitchAngle",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::Float_32"
              },
              {
                "name": "VerticalSpeed",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::Float_32"
              },
              {
                "name": "MaxBankAngle",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::Float_32"
              },
              {
                "name": "EnergyRate",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::Float_32"
              }
            ]
          },
          {
            "name": "CMASI::AirVehicleConfiguration",
            "localName": "AirVehicleConfiguration",
            "kind": "ComponentType",
            "category": "data",
            "extends": "CMASI::EntityConfiguration"
          },
          {
            "packageName": "CMASI",
            "name": "CMASI::AirVehicleConfiguration.i",
            "localName": "AirVehicleConfiguration.i",
            "kind": "ComponentImplementation",
            "category": "data",
            "extends": "CMASI::EntityConfiguration.i",
            "subcomponents": [
              {
                "name": "MinimumSpeed",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::Float_32"
              },
              {
                "name": "MaximumSpeed",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::Float_32"
              },
              {
                "name": "NominalFlightProfile",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "CMASI::FlightProfile.i"
              },
              {
                "name": "AlternateFlightProfiles",
                "kind": "Subcomponent",
                "category": "data",
                "dimensions": [
                  {
                    "kind": "ArrayDimension",
                    "value": 1
                  }
                ],
                "classifier": "CMASI::FlightProfile"
              },
              {
                "name": "AvailableLoiterTypes",
                "kind": "Subcomponent",
                "category": "data",
                "dimensions": [
                  {
                    "kind": "ArrayDimension",
                    "value": 1
                  }
                ],
                "classifier": "CMASI::LoiterType"
              },
              {
                "name": "AvailableTurnTypes",
                "kind": "Subcomponent",
                "category": "data",
                "dimensions": [
                  {
                    "kind": "ArrayDimension",
                    "value": 1
                  }
                ],
                "classifier": "CMASI::TurnType"
              },
              {
                "name": "MinimumAltitude",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::Float_32"
              },
              {
                "name": "MinAltitudeType",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "CMASI::AltitudeType.i"
              },
              {
                "name": "MaximumAltitude",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::Float_32"
              },
              {
                "name": "MaxAltitudeType",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "CMASI::AltitudeType.i"
              }
            ]
          },
          {
            "name": "CMASI::AirVehicleState",
            "localName": "AirVehicleState",
            "kind": "ComponentType",
            "category": "data",
            "extends": "CMASI::EntityState"
          },
          {
            "packageName": "CMASI",
            "name": "CMASI::AirVehicleState.i",
            "localName": "AirVehicleState.i",
            "kind": "ComponentImplementation",
            "category": "data",
            "extends": "CMASI::EntityState.i",
            "subcomponents": [
              {
                "name": "Airspeed",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::Float_32"
              },
              {
                "name": "VerticalSpeed",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::Float_32"
              },
              {
                "name": "WindSpeed",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::Float_32"
              },
              {
                "name": "WindDirection",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::Float_32"
              }
            ],
            "properties": [
              {
                "name": "HAMR::Bit_Codec_Max_Size",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "PropertyConstant",
                  "value": "AirVehicleState_Bit_Codec_Max_Size"
                }
              }
            ]
          },
          {
            "name": "CMASI::EntityState",
            "localName": "EntityState",
            "kind": "ComponentType",
            "category": "data"
          },
          {
            "packageName": "CMASI",
            "name": "CMASI::EntityState.i",
            "localName": "EntityState.i",
            "kind": "ComponentImplementation",
            "category": "data",
            "subcomponents": [
              {
                "name": "ID",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::Integer_64"
              },
              {
                "name": "u",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::Float_32"
              },
              {
                "name": "v",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::Float_32"
              },
              {
                "name": "w",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::Float_32"
              },
              {
                "name": "udot",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::Float_32"
              },
              {
                "name": "vdot",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::Float_32"
              },
              {
                "name": "wdot",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::Float_32"
              },
              {
                "name": "Heading",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::Float_32"
              },
              {
                "name": "Pitch",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::Float_32"
              },
              {
                "name": "Roll",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::Float_32"
              },
              {
                "name": "p",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::Float_32"
              },
              {
                "name": "q",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::Float_32"
              },
              {
                "name": "r",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::Float_32"
              },
              {
                "name": "Course",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::Float_32"
              },
              {
                "name": "Groundspeed",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::Float_32"
              },
              {
                "name": "Location",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "CMASI::Location3D.i"
              },
              {
                "name": "EnergyAvailable",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::Float_32"
              },
              {
                "name": "ActualEnergyRate",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::Float_32"
              },
              {
                "name": "PayloadStateList",
                "kind": "Subcomponent",
                "category": "data",
                "dimensions": [
                  {
                    "kind": "ArrayDimension",
                    "value": 1
                  }
                ],
                "classifier": "CMASI::PayloadState"
              },
              {
                "name": "CurrentWaypoint",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::Integer_64"
              },
              {
                "name": "CurrentCommand",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::Integer_64"
              },
              {
                "name": "FIXMEMode",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "CMASI::NavigationMode.i"
              },
              {
                "name": "AssociatedTasks",
                "kind": "Subcomponent",
                "category": "data",
                "dimensions": [
                  {
                    "kind": "ArrayDimension",
                    "value": 1
                  }
                ],
                "classifier": "Base_Types::Integer_64"
              },
              {
                "name": "Time",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::Integer_64"
              },
              {
                "name": "Info",
                "kind": "Subcomponent",
                "category": "data",
                "dimensions": [
                  {
                    "kind": "ArrayDimension",
                    "value": 2
                  }
                ],
                "classifier": "CMASI::KeyValuePair"
              }
            ]
          },
          {
            "name": "CMASI::EntityConfiguration",
            "localName": "EntityConfiguration",
            "kind": "ComponentType",
            "category": "data"
          },
          {
            "packageName": "CMASI",
            "name": "CMASI::EntityConfiguration.i",
            "localName": "EntityConfiguration.i",
            "kind": "ComponentImplementation",
            "category": "data",
            "subcomponents": [
              {
                "name": "ID",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::Integer_64"
              },
              {
                "name": "Affiliation",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::String"
              },
              {
                "name": "EntityType",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::String"
              },
              {
                "name": "Label",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::String"
              },
              {
                "name": "NominalSpeed",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::Float_32"
              },
              {
                "name": "NominalAltitude",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::Float_32"
              },
              {
                "name": "NominalAltitudeType",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "CMASI::AltitudeType.i"
              },
              {
                "name": "PayloadConfigurationList",
                "kind": "Subcomponent",
                "category": "data",
                "dimensions": [
                  {
                    "kind": "ArrayDimension",
                    "value": 1
                  }
                ],
                "classifier": "CMASI::PayloadConfiguration"
              },
              {
                "name": "Info",
                "kind": "Subcomponent",
                "category": "data",
                "dimensions": [
                  {
                    "kind": "ArrayDimension",
                    "value": 2
                  }
                ],
                "classifier": "CMASI::KeyValuePair"
              }
            ]
          },
          {
            "name": "CMASI::AbstractZone",
            "localName": "AbstractZone",
            "kind": "ComponentType",
            "category": "data"
          },
          {
            "packageName": "CMASI",
            "name": "CMASI::AbstractZone.i",
            "localName": "AbstractZone.i",
            "kind": "ComponentImplementation",
            "category": "data",
            "subcomponents": [
              {
                "name": "ZoneID",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::Integer_64"
              },
              {
                "name": "MinAltitude",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::Float_32"
              },
              {
                "name": "MinAltitudeType",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "CMASI::AltitudeType.i"
              },
              {
                "name": "MaxAltitude",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::Float_32"
              },
              {
                "name": "MaxAltitudeType",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "CMASI::AltitudeType.i"
              },
              {
                "name": "AffectedAircraft",
                "kind": "Subcomponent",
                "category": "data",
                "dimensions": [
                  {
                    "kind": "ArrayDimension",
                    "value": 32
                  }
                ],
                "classifier": "Base_Types::Integer_64"
              },
              {
                "name": "StartTime",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::Integer_64"
              },
              {
                "name": "EndTime",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::Integer_64"
              },
              {
                "name": "Padding",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::Float_32"
              },
              {
                "name": "Label",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::String"
              },
              {
                "name": "Boundary",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "CMASI::AbstractGeometry.i"
              }
            ]
          },
          {
            "name": "CMASI::FollowPathCommand",
            "localName": "FollowPathCommand",
            "kind": "ComponentType",
            "category": "data",
            "extends": "CMASI::VehicleActionCommand"
          },
          {
            "packageName": "CMASI",
            "name": "CMASI::FollowPathCommand.i",
            "localName": "FollowPathCommand.i",
            "kind": "ComponentImplementation",
            "category": "data",
            "extends": "CMASI::VehicleActionCommand.i",
            "subcomponents": [
              {
                "name": "FirstWaypoint",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::Integer_64"
              },
              {
                "name": "WaypointList",
                "kind": "Subcomponent",
                "category": "data",
                "dimensions": [
                  {
                    "kind": "ArrayDimension",
                    "value": 1024
                  }
                ],
                "classifier": "CMASI::PathWaypoint"
              },
              {
                "name": "StartTime",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::Integer_64"
              },
              {
                "name": "StopTime",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::Integer_64"
              },
              {
                "name": "RepeatMode",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "CMASI::TravelMode.i"
              }
            ]
          },
          {
            "name": "CMASI::PathWaypoint",
            "localName": "PathWaypoint",
            "kind": "ComponentType",
            "category": "data",
            "extends": "CMASI::Waypoint"
          },
          {
            "packageName": "CMASI",
            "name": "CMASI::PathWaypoint.i",
            "localName": "PathWaypoint.i",
            "kind": "ComponentImplementation",
            "category": "data",
            "extends": "CMASI::Waypoint.i",
            "subcomponents": [
              {
                "name": "PauseTime",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::Integer_64"
              }
            ]
          },
          {
            "name": "CMASI::KeepInZone",
            "localName": "KeepInZone",
            "kind": "ComponentType",
            "category": "data",
            "extends": "CMASI::AbstractZone"
          },
          {
            "packageName": "CMASI",
            "name": "CMASI::KeepInZone.i",
            "localName": "KeepInZone.i",
            "kind": "ComponentImplementation",
            "category": "data",
            "extends": "CMASI::AbstractZone.i"
          },
          {
            "name": "CMASI::KeepOutZone",
            "localName": "KeepOutZone",
            "kind": "ComponentType",
            "category": "data",
            "extends": "CMASI::AbstractZone"
          },
          {
            "packageName": "CMASI",
            "name": "CMASI::KeepOutZone.i",
            "localName": "KeepOutZone.i",
            "kind": "ComponentImplementation",
            "category": "data",
            "extends": "CMASI::AbstractZone.i",
            "subcomponents": [
              {
                "name": "ZoneType",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "CMASI::ZoneAvoidanceType.i"
              }
            ]
          },
          {
            "name": "CMASI::OperatingRegion",
            "localName": "OperatingRegion",
            "kind": "ComponentType",
            "category": "data"
          },
          {
            "packageName": "CMASI",
            "name": "CMASI::OperatingRegion.i",
            "localName": "OperatingRegion.i",
            "kind": "ComponentImplementation",
            "category": "data",
            "subcomponents": [
              {
                "name": "ID",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::Integer_64"
              },
              {
                "name": "KeepInAreas",
                "kind": "Subcomponent",
                "category": "data",
                "dimensions": [
                  {
                    "kind": "ArrayDimension",
                    "value": 1
                  }
                ],
                "classifier": "Base_Types::Integer_64"
              },
              {
                "name": "KeepOutAreas",
                "kind": "Subcomponent",
                "category": "data",
                "dimensions": [
                  {
                    "kind": "ArrayDimension",
                    "value": 1
                  }
                ],
                "classifier": "Base_Types::Integer_64"
              }
            ],
            "properties": [
              {
                "name": "HAMR::Bit_Codec_Max_Size",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "PropertyConstant",
                  "value": "OperatingRegion_Bit_Codec_Max_Size"
                }
              }
            ]
          },
          {
            "name": "CMASI::RemoveTasks",
            "localName": "RemoveTasks",
            "kind": "ComponentType",
            "category": "data"
          },
          {
            "packageName": "CMASI",
            "name": "CMASI::RemoveTasks.i",
            "localName": "RemoveTasks.i",
            "kind": "ComponentImplementation",
            "category": "data",
            "subcomponents": [
              {
                "name": "TaskList",
                "kind": "Subcomponent",
                "category": "data",
                "dimensions": [
                  {
                    "kind": "ArrayDimension",
                    "value": 42
                  }
                ],
                "classifier": "Base_Types::Integer_64"
              }
            ]
          },
          {
            "name": "CMASI::ServiceStatus",
            "localName": "ServiceStatus",
            "kind": "ComponentType",
            "category": "data"
          },
          {
            "packageName": "CMASI",
            "name": "CMASI::ServiceStatus.i",
            "localName": "ServiceStatus.i",
            "kind": "ComponentImplementation",
            "category": "data",
            "subcomponents": [
              {
                "name": "PercentComplete",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::Float_32"
              },
              {
                "name": "Info",
                "kind": "Subcomponent",
                "category": "data",
                "dimensions": [
                  {
                    "kind": "ArrayDimension",
                    "value": 3
                  }
                ],
                "classifier": "CMASI::KeyValuePair.i"
              },
              {
                "name": "StatusType",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "CMASI::ServiceStatusType.i"
              }
            ]
          },
          {
            "name": "CMASI::Task",
            "localName": "Task",
            "kind": "ComponentType",
            "category": "data"
          },
          {
            "packageName": "CMASI",
            "name": "CMASI::Task.i",
            "localName": "Task.i",
            "kind": "ComponentImplementation",
            "category": "data",
            "subcomponents": [
              {
                "name": "TaskID",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::Integer_64"
              },
              {
                "name": "Label",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::String"
              },
              {
                "name": "EligibleEntities",
                "kind": "Subcomponent",
                "category": "data",
                "dimensions": [
                  {
                    "kind": "ArrayDimension",
                    "value": 1
                  }
                ],
                "classifier": "Base_Types::Integer_64"
              },
              {
                "name": "RevisitRate",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::Float_32"
              },
              {
                "name": "Parameters",
                "kind": "Subcomponent",
                "category": "data",
                "dimensions": [
                  {
                    "kind": "ArrayDimension",
                    "value": 1
                  }
                ],
                "classifier": "CMASI::KeyValuePair.i"
              },
              {
                "name": "Priority",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::Integer_8"
              },
              {
                "name": "Required",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::Boolean"
              }
            ]
          },
          {
            "name": "CMASI::SearchTask",
            "localName": "SearchTask",
            "kind": "ComponentType",
            "category": "data",
            "extends": "CMASI::Task"
          },
          {
            "packageName": "CMASI",
            "name": "CMASI::SearchTask.i",
            "localName": "SearchTask.i",
            "kind": "ComponentImplementation",
            "category": "data",
            "extends": "CMASI::Task.i",
            "subcomponents": [
              {
                "name": "DesiredWavelengthBands",
                "kind": "Subcomponent",
                "category": "data",
                "dimensions": [
                  {
                    "kind": "ArrayDimension",
                    "value": 8
                  }
                ],
                "classifier": "CMASI::WavelengthBand"
              },
              {
                "name": "DwellTime",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::Integer_64"
              },
              {
                "name": "GroundSampleDistance",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::Float_32"
              }
            ]
          },
          {
            "name": "CMASI::Wedge",
            "localName": "Wedge",
            "kind": "ComponentType",
            "category": "data"
          },
          {
            "packageName": "CMASI",
            "name": "CMASI::Wedge.i",
            "localName": "Wedge.i",
            "kind": "ComponentImplementation",
            "category": "data",
            "subcomponents": [
              {
                "name": "AzimuthCenterline",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::Float_32"
              },
              {
                "name": "VerticalCenterline",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::Float_32"
              },
              {
                "name": "AzimuthExtent",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::Float_32"
              },
              {
                "name": "VerticalExtent",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::Float_32"
              }
            ]
          },
          {
            "name": "CMASI::LineSearchTask",
            "localName": "LineSearchTask",
            "kind": "ComponentType",
            "category": "data",
            "extends": "CMASI::SearchTask"
          },
          {
            "packageName": "CMASI",
            "name": "CMASI::LineSearchTask.i",
            "localName": "LineSearchTask.i",
            "kind": "ComponentImplementation",
            "category": "data",
            "extends": "CMASI::SearchTask.i",
            "subcomponents": [
              {
                "name": "PointList",
                "kind": "Subcomponent",
                "category": "data",
                "dimensions": [
                  {
                    "kind": "ArrayDimension",
                    "value": 1024
                  }
                ],
                "classifier": "CMASI::Location3D.i"
              },
              {
                "name": "ViewAngleList",
                "kind": "Subcomponent",
                "category": "data",
                "dimensions": [
                  {
                    "kind": "ArrayDimension",
                    "value": 16
                  }
                ],
                "classifier": "CMASI::Wedge.i"
              },
              {
                "name": "UseInertialViewAngles",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::Boolean"
              }
            ],
            "properties": [
              {
                "name": "HAMR::Bit_Codec_Max_Size",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "PropertyConstant",
                  "value": "LineSearchTask_Bit_Codec_Max_Size"
                }
              }
            ]
          },
          {
            "name": "CMASI::VehicleAction",
            "localName": "VehicleAction",
            "kind": "ComponentType",
            "category": "data"
          },
          {
            "packageName": "CMASI",
            "name": "CMASI::VehicleAction.i",
            "localName": "VehicleAction.i",
            "kind": "ComponentImplementation",
            "category": "data",
            "subcomponents": [
              {
                "name": "AssociatedTaskList",
                "kind": "Subcomponent",
                "category": "data",
                "dimensions": [
                  {
                    "kind": "ArrayDimension",
                    "value": 1
                  }
                ],
                "classifier": "Base_Types::Integer_64"
              }
            ]
          },
          {
            "name": "CMASI::PayloadAction",
            "localName": "PayloadAction",
            "kind": "ComponentType",
            "category": "data",
            "extends": "CMASI::VehicleAction"
          },
          {
            "packageName": "CMASI",
            "name": "CMASI::PayloadAction.i",
            "localName": "PayloadAction.i",
            "kind": "ComponentImplementation",
            "category": "data",
            "extends": "CMASI::VehicleAction.i",
            "subcomponents": [
              {
                "name": "PayloadID",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::Integer_64"
              }
            ]
          },
          {
            "name": "CMASI::GimbalStareAction",
            "localName": "GimbalStareAction",
            "kind": "ComponentType",
            "category": "data",
            "extends": "CMASI::PayloadAction"
          },
          {
            "packageName": "CMASI",
            "name": "CMASI::GimbalStareAction.i",
            "localName": "GimbalStareAction.i",
            "kind": "ComponentImplementation",
            "category": "data",
            "extends": "CMASI::PayloadAction.i",
            "subcomponents": [
              {
                "name": "Starepoint",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "CMASI::Location3D.i"
              },
              {
                "name": "Duration",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::Integer_64"
              }
            ]
          },
          {
            "name": "CMASI::VehicleActionCommand",
            "localName": "VehicleActionCommand",
            "kind": "ComponentType",
            "category": "data"
          },
          {
            "packageName": "CMASI",
            "name": "CMASI::VehicleActionCommand.i",
            "localName": "VehicleActionCommand.i",
            "kind": "ComponentImplementation",
            "category": "data",
            "subcomponents": [
              {
                "name": "CommandID",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::Integer_64"
              },
              {
                "name": "VehicleID",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::Integer_64"
              },
              {
                "name": "VehicleActionList",
                "kind": "Subcomponent",
                "category": "data",
                "dimensions": [
                  {
                    "kind": "ArrayDimension",
                    "value": 1
                  }
                ],
                "classifier": "CMASI::VehicleAction"
              },
              {
                "name": "Status",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "CMASI::CommandStatusType.i"
              }
            ]
          },
          {
            "name": "CMASI::Waypoint",
            "localName": "Waypoint",
            "kind": "ComponentType",
            "category": "data",
            "extends": "CMASI::Location3D"
          },
          {
            "packageName": "CMASI",
            "name": "CMASI::Waypoint.i",
            "localName": "Waypoint.i",
            "kind": "ComponentImplementation",
            "category": "data",
            "extends": "CMASI::Location3D.i",
            "subcomponents": [
              {
                "name": "Number",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::Integer_64"
              },
              {
                "name": "NextWaypoint",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::Integer_64"
              },
              {
                "name": "Speed",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::Float_32"
              },
              {
                "name": "SpeedType",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "CMASI::SpeedType.i"
              },
              {
                "name": "ClimbRate",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::Float_32"
              },
              {
                "name": "TurnType",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "CMASI::TurnType.i"
              },
              {
                "name": "VehicleActionList",
                "kind": "Subcomponent",
                "category": "data",
                "dimensions": [
                  {
                    "kind": "ArrayDimension",
                    "value": 1
                  }
                ],
                "classifier": "CMASI::VehicleAction"
              },
              {
                "name": "ContingencyWaypointA",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::Integer_64"
              },
              {
                "name": "ContingencyWaypointB",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::Integer_64"
              },
              {
                "name": "AssociatedTasks",
                "kind": "Subcomponent",
                "category": "data",
                "dimensions": [
                  {
                    "kind": "ArrayDimension",
                    "value": 1
                  }
                ],
                "classifier": "Base_Types::Integer_64"
              }
            ]
          },
          {
            "name": "CMASI::WaypointArray",
            "localName": "WaypointArray",
            "kind": "ComponentType",
            "category": "data",
            "properties": [
              {
                "name": "Data_Model::Data_Representation",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "EnumerationLiteral",
                  "value": "Array"
                }
              },
              {
                "name": "Data_Model::Base_Type",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "ListValue",
                  "value": [
                    {
                      "kind": "ClassifierValue",
                      "value": "CMASI::Waypoint.i"
                    }
                  ]
                }
              },
              {
                "name": "Data_Model::Dimension",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "ListValue",
                  "value": [
                    {
                      "kind": "IntegerLiteral",
                      "value": 200,
                      "unit": null
                    }
                  ]
                }
              }
            ]
          },
          {
            "name": "CMASI::MissionCommand",
            "localName": "MissionCommand",
            "kind": "ComponentType",
            "category": "data",
            "extends": "CMASI::VehicleActionCommand"
          },
          {
            "packageName": "CMASI",
            "name": "CMASI::MissionCommand.i",
            "localName": "MissionCommand.i",
            "kind": "ComponentImplementation",
            "category": "data",
            "extends": "CMASI::VehicleActionCommand.i",
            "subcomponents": [
              {
                "name": "WaypointList",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "CMASI::WaypointArray"
              },
              {
                "name": "FirstWaypoint",
                "kind": "Subcomponent",
                "category": "data",
                "classifier": "Base_Types::Integer_64"
              }
            ],
            "properties": [
              {
                "name": "Modeling_Properties::Classifier_Substitution_Rule",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "EnumerationLiteral",
                  "value": "Type_Extension"
                }
              },
              {
                "name": "HAMR::Bit_Codec_Max_Size",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "PropertyConstant",
                  "value": "MissionCommand_Bit_Codec_Max_Size"
                }
              }
            ]
          },
          {
            "name": "CMASI::NavigationMode",
            "localName": "NavigationMode",
            "kind": "ComponentType",
            "category": "data",
            "extends": "Base_Types::Integer",
            "properties": [
              {
                "name": "Data_Model::Data_Representation",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "EnumerationLiteral",
                  "value": "Enum"
                }
              },
              {
                "name": "Data_Model::Enumerators",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "ListValue",
                  "value": [
                    {
                      "kind": "StringLiteral",
                      "value": "Waypoint"
                    },
                    {
                      "kind": "StringLiteral",
                      "value": "Loiter"
                    },
                    {
                      "kind": "StringLiteral",
                      "value": "FlightDirector"
                    },
                    {
                      "kind": "StringLiteral",
                      "value": "TargetTrack"
                    },
                    {
                      "kind": "StringLiteral",
                      "value": "FollowLeader"
                    },
                    {
                      "kind": "StringLiteral",
                      "value": "LostComm"
                    }
                  ]
                }
              }
            ]
          },
          {
            "packageName": "CMASI",
            "name": "CMASI::NavigationMode.i",
            "localName": "NavigationMode.i",
            "kind": "ComponentImplementation",
            "category": "data"
          },
          {
            "name": "CMASI::SpeedType",
            "localName": "SpeedType",
            "kind": "ComponentType",
            "category": "data",
            "extends": "Base_Types::Integer",
            "properties": [
              {
                "name": "Data_Model::Data_Representation",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "EnumerationLiteral",
                  "value": "Enum"
                }
              },
              {
                "name": "Data_Model::Enumerators",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "ListValue",
                  "value": [
                    {
                      "kind": "StringLiteral",
                      "value": "Airspeed"
                    },
                    {
                      "kind": "StringLiteral",
                      "value": "Groundspeed"
                    }
                  ]
                }
              }
            ]
          },
          {
            "packageName": "CMASI",
            "name": "CMASI::SpeedType.i",
            "localName": "SpeedType.i",
            "kind": "ComponentImplementation",
            "category": "data"
          },
          {
            "name": "CMASI::TurnType",
            "localName": "TurnType",
            "kind": "ComponentType",
            "category": "data",
            "extends": "Base_Types::Integer",
            "properties": [
              {
                "name": "Data_Model::Data_Representation",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "EnumerationLiteral",
                  "value": "Enum"
                }
              },
              {
                "name": "Data_Model::Enumerators",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "ListValue",
                  "value": [
                    {
                      "kind": "StringLiteral",
                      "value": "TurnShort"
                    },
                    {
                      "kind": "StringLiteral",
                      "value": "FlyOver"
                    }
                  ]
                }
              }
            ]
          },
          {
            "packageName": "CMASI",
            "name": "CMASI::TurnType.i",
            "localName": "TurnType.i",
            "kind": "ComponentImplementation",
            "category": "data"
          },
          {
            "name": "CMASI::ZoneAvoidanceType",
            "localName": "ZoneAvoidanceType",
            "kind": "ComponentType",
            "category": "data",
            "extends": "Base_Types::Integer",
            "properties": [
              {
                "name": "Data_Model::Data_Representation",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "EnumerationLiteral",
                  "value": "Enum"
                }
              },
              {
                "name": "Data_Model::Enumerators",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "ListValue",
                  "value": [
                    {
                      "kind": "StringLiteral",
                      "value": "Physical"
                    },
                    {
                      "kind": "StringLiteral",
                      "value": "Regulatory"
                    },
                    {
                      "kind": "StringLiteral",
                      "value": "Acoustic"
                    },
                    {
                      "kind": "StringLiteral",
                      "value": "Threat"
                    },
                    {
                      "kind": "StringLiteral",
                      "value": "Visual"
                    }
                  ]
                }
              }
            ]
          },
          {
            "packageName": "CMASI",
            "name": "CMASI::ZoneAvoidanceType.i",
            "localName": "ZoneAvoidanceType.i",
            "kind": "ComponentImplementation",
            "category": "data"
          },
          {
            "name": "CMASI::ServiceStatusType",
            "localName": "ServiceStatusType",
            "kind": "ComponentType",
            "category": "data",
            "extends": "Base_Types::Integer",
            "properties": [
              {
                "name": "Data_Model::Data_Representation",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "EnumerationLiteral",
                  "value": "Enum"
                }
              },
              {
                "name": "Data_Model::Enumerators",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "ListValue",
                  "value": [
                    {
                      "kind": "StringLiteral",
                      "value": "Information"
                    },
                    {
                      "kind": "StringLiteral",
                      "value": "Warning"
                    },
                    {
                      "kind": "StringLiteral",
                      "value": "Error"
                    }
                  ]
                }
              }
            ]
          },
          {
            "packageName": "CMASI",
            "name": "CMASI::ServiceStatusType.i",
            "localName": "ServiceStatusType.i",
            "kind": "ComponentImplementation",
            "category": "data"
          },
          {
            "name": "CMASI::LoiterType",
            "localName": "LoiterType",
            "kind": "ComponentType",
            "category": "data",
            "extends": "Base_Types::Integer",
            "properties": [
              {
                "name": "Data_Model::Data_Representation",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "EnumerationLiteral",
                  "value": "Enum"
                }
              },
              {
                "name": "Data_Model::Enumerators",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "ListValue",
                  "value": [
                    {
                      "kind": "StringLiteral",
                      "value": "VehicleDefault"
                    },
                    {
                      "kind": "StringLiteral",
                      "value": "Circular"
                    },
                    {
                      "kind": "StringLiteral",
                      "value": "Racetrack"
                    },
                    {
                      "kind": "StringLiteral",
                      "value": "FigureEight"
                    },
                    {
                      "kind": "StringLiteral",
                      "value": "Hover"
                    }
                  ]
                }
              }
            ]
          },
          {
            "packageName": "CMASI",
            "name": "CMASI::LoiterType.i",
            "localName": "LoiterType.i",
            "kind": "ComponentImplementation",
            "category": "data"
          },
          {
            "name": "CMASI::CommandStatusType",
            "localName": "CommandStatusType",
            "kind": "ComponentType",
            "category": "data",
            "extends": "Base_Types::Integer",
            "properties": [
              {
                "name": "Data_Model::Data_Representation",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "EnumerationLiteral",
                  "value": "Enum"
                }
              },
              {
                "name": "Data_Model::Enumerators",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "ListValue",
                  "value": [
                    {
                      "kind": "StringLiteral",
                      "value": "Pending"
                    },
                    {
                      "kind": "StringLiteral",
                      "value": "Approved"
                    },
                    {
                      "kind": "StringLiteral",
                      "value": "InProcess"
                    },
                    {
                      "kind": "StringLiteral",
                      "value": "Executed"
                    },
                    {
                      "kind": "StringLiteral",
                      "value": "Cancelled"
                    }
                  ]
                }
              }
            ]
          },
          {
            "packageName": "CMASI",
            "name": "CMASI::CommandStatusType.i",
            "localName": "CommandStatusType.i",
            "kind": "ComponentImplementation",
            "category": "data"
          },
          {
            "name": "CMASI::WavelengthBand",
            "localName": "WavelengthBand",
            "kind": "ComponentType",
            "category": "data",
            "extends": "Base_Types::Integer",
            "properties": [
              {
                "name": "Data_Model::Data_Representation",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "EnumerationLiteral",
                  "value": "Enum"
                }
              },
              {
                "name": "Data_Model::Enumerators",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "ListValue",
                  "value": [
                    {
                      "kind": "StringLiteral",
                      "value": "AllAny"
                    },
                    {
                      "kind": "StringLiteral",
                      "value": "EO"
                    },
                    {
                      "kind": "StringLiteral",
                      "value": "LWIR"
                    },
                    {
                      "kind": "StringLiteral",
                      "value": "SWIR"
                    },
                    {
                      "kind": "StringLiteral",
                      "value": "MWIR"
                    },
                    {
                      "kind": "StringLiteral",
                      "value": "Other"
                    }
                  ]
                }
              }
            ]
          },
          {
            "name": "CMASI::TravelMode",
            "localName": "TravelMode",
            "kind": "ComponentType",
            "category": "data",
            "extends": "Base_Types::Integer",
            "properties": [
              {
                "name": "Data_Model::Data_Representation",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "EnumerationLiteral",
                  "value": "Enum"
                }
              },
              {
                "name": "Data_Model::Enumerators",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "ListValue",
                  "value": [
                    {
                      "kind": "StringLiteral",
                      "value": "SinglePass"
                    },
                    {
                      "kind": "StringLiteral",
                      "value": "ReverseCourse"
                    },
                    {
                      "kind": "StringLiteral",
                      "value": "Loop"
                    }
                  ]
                }
              }
            ]
          },
          {
            "packageName": "CMASI",
            "name": "CMASI::TravelMode.i",
            "localName": "TravelMode.i",
            "kind": "ComponentImplementation",
            "category": "data"
          },
          {
            "packageName": "CMASI",
            "name": "CMASI::WavelengthBand.i",
            "localName": "WavelengthBand.i",
            "kind": "ComponentImplementation",
            "category": "data"
          }
        ]
      }
    },
    {
      "name": "SendMessagesService_Pkg",
      "kind": "AadlPackage",
      "public": {
        "with": [
          "CMASI",
          "ServiceBase_Pkg"
        ],
        "components": [
          {
            "name": "SendMessagesService_Pkg::SendMessagesServiceInit",
            "localName": "SendMessagesServiceInit",
            "kind": "ComponentType",
            "category": "thread",
            "extends": "ServiceBase_Pkg::ServiceBase",
            "features": [
              {
                "name": "AirVehicleState",
                "kind": "EventDataPort",
                "classifier": "CMASI::AirVehicleState.i",
                "direction": "out"
              },
              {
                "name": "MissionCommand",
                "kind": "EventDataPort",
                "classifier": "CMASI::MissionCommand.i",
                "direction": "out"
              }
            ],
            "properties": [
              {
                "name": "Programming_Properties::Source_Text",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "ListValue",
                  "value": [
                    {
                      "kind": "StringLiteral",
                      "value": "src/Services/SendMessagesService.h"
                    },
                    {
                      "kind": "StringLiteral",
                      "value": "src/Services/SendMessagesService.cpp"
                    }
                  ]
                }
              },
              {
                "name": "Thread_Properties::Dispatch_Protocol",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "EnumerationLiteral",
                  "value": "Sporadic"
                }
              }
            ]
          },
          {
            "packageName": "SendMessagesService_Pkg",
            "name": "SendMessagesService_Pkg::SendMessagesServiceInit.i",
            "localName": "SendMessagesServiceInit.i",
            "kind": "ComponentImplementation",
            "category": "thread"
          },
          {
            "name": "SendMessagesService_Pkg::SendMessagesServiceMemory",
            "localName": "SendMessagesServiceMemory",
            "kind": "ComponentType",
            "category": "thread",
            "extends": "ServiceBase_Pkg::ServiceBase",
            "features": [
              {
                "name": "AirVehicleConfiguration",
                "kind": "EventDataPort",
                "classifier": "CMASI::AirVehicleConfiguration.i",
                "direction": "out"
              },
              {
                "name": "KeepInZone",
                "kind": "EventDataPort",
                "classifier": "CMASI::KeepInZone.i",
                "direction": "out"
              },
              {
                "name": "KeepOutZone",
                "kind": "EventDataPort",
                "classifier": "CMASI::KeepOutZone.i",
                "direction": "out"
              }
            ],
            "properties": [
              {
                "name": "Programming_Properties::Source_Text",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "ListValue",
                  "value": [
                    {
                      "kind": "StringLiteral",
                      "value": "src/Services/SendMessagesService.h"
                    },
                    {
                      "kind": "StringLiteral",
                      "value": "src/Services/SendMessagesService.cpp"
                    }
                  ]
                }
              },
              {
                "name": "Thread_Properties::Dispatch_Protocol",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "EnumerationLiteral",
                  "value": "Sporadic"
                }
              }
            ]
          },
          {
            "packageName": "SendMessagesService_Pkg",
            "name": "SendMessagesService_Pkg::SendMessagesServiceMemory.i",
            "localName": "SendMessagesServiceMemory.i",
            "kind": "ComponentImplementation",
            "category": "thread"
          },
          {
            "name": "SendMessagesService_Pkg::SendMessagesServiceGS",
            "localName": "SendMessagesServiceGS",
            "kind": "ComponentType",
            "category": "thread",
            "extends": "ServiceBase_Pkg::ServiceBase",
            "features": [
              {
                "name": "OperatingRegion",
                "kind": "EventDataPort",
                "classifier": "CMASI::OperatingRegion.i",
                "direction": "out"
              },
              {
                "name": "LineSearchTask",
                "kind": "EventDataPort",
                "classifier": "CMASI::LineSearchTask.i",
                "direction": "out"
              },
              {
                "name": "AutomationRequest",
                "kind": "EventDataPort",
                "classifier": "CMASI::AutomationRequest.i",
                "direction": "out"
              }
            ],
            "properties": [
              {
                "name": "Programming_Properties::Source_Text",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "ListValue",
                  "value": [
                    {
                      "kind": "StringLiteral",
                      "value": "src/Services/SendMessagesService.h"
                    },
                    {
                      "kind": "StringLiteral",
                      "value": "src/Services/SendMessagesService.cpp"
                    }
                  ]
                }
              },
              {
                "name": "Thread_Properties::Dispatch_Protocol",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "EnumerationLiteral",
                  "value": "Sporadic"
                }
              }
            ]
          },
          {
            "packageName": "SendMessagesService_Pkg",
            "name": "SendMessagesService_Pkg::SendMessagesServiceGS.i",
            "localName": "SendMessagesServiceGS.i",
            "kind": "ComponentImplementation",
            "category": "thread"
          }
        ]
      }
    },
    {
      "name": "ServiceBase_Pkg",
      "kind": "AadlPackage",
      "public": {
        "components": [
          {
            "name": "ServiceBase_Pkg::ServiceBase",
            "localName": "ServiceBase",
            "kind": "ComponentType",
            "category": "thread",
            "properties": [
              {
                "name": "Programming_Properties::Source_Text",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "ListValue",
                  "value": [
                    {
                      "kind": "StringLiteral",
                      "value": "src/Services/ServiceBase.h"
                    },
                    {
                      "kind": "StringLiteral",
                      "value": "src/Services/ServiceBase.cpp"
                    }
                  ]
                }
              }
            ]
          }
        ]
      }
    },
    {
      "name": "UAV",
      "kind": "AadlPackage",
      "public": {
        "with": [
          "MC",
          "FC",
          "UAS_Buses",
          "HAMR"
        ],
        "components": [
          {
            "name": "UAV::UAV",
            "localName": "UAV",
            "kind": "ComponentType",
            "category": "system",
            "features": [
              {
                "name": "RFA",
                "kind": "BusAccess",
                "accessType": "requires",
                "bus": "UAS_Buses::RF_Bus.Impl"
              },
              {
                "name": "radio_recv",
                "kind": "EventDataPort",
                "classifier": null,
                "direction": "in"
              },
              {
                "name": "radio_send",
                "kind": "EventDataPort",
                "classifier": null,
                "direction": "out"
              }
            ]
          },
          {
            "packageName": "UAV",
            "name": "UAV::UAV.Impl",
            "localName": "UAV.Impl",
            "kind": "ComponentImplementation",
            "category": "system",
            "subcomponents": [
              {
                "name": "FCTL_SBUS",
                "kind": "Subcomponent",
                "category": "bus",
                "classifier": "UAS_Buses::Serial_Bus.Impl"
              },
              {
                "name": "MCMP",
                "kind": "Subcomponent",
                "category": "system",
                "classifier": "MC::MissionComputer.Impl"
              },
              {
                "name": "FCTL",
                "kind": "Subcomponent",
                "category": "system",
                "classifier": "FC::FlightController.Impl"
              }
            ],
            "connections": [
              {
                "name": "bac1",
                "kind": "busAccess",
                "source": "FCTL_SBUS",
                "destination": "MCMP.FC_UART",
                "bidirectional": true
              },
              {
                "name": "bac2",
                "kind": "busAccess",
                "source": "FCTL_SBUS",
                "destination": "FCTL.UART",
                "bidirectional": true
              },
              {
                "name": "bac5",
                "kind": "busAccess",
                "source": "RFA",
                "destination": "MCMP.RFA",
                "bidirectional": false
              },
              {
                "name": "c1",
                "kind": "PortConnection",
                "source": "radio_recv",
                "destination": "MCMP.radio_recv",
                "bidirectional": false
              },
              {
                "name": "c2",
                "kind": "PortConnection",
                "source": "MCMP.radio_send",
                "destination": "radio_send",
                "bidirectional": false
              },
              {
                "name": "c3",
                "kind": "PortConnection",
                "source": "MCMP.fc_uart_send",
                "destination": "FCTL.uart_recv",
                "bidirectional": false
              },
              {
                "name": "c4",
                "kind": "PortConnection",
                "source": "FCTL.uart_send",
                "destination": "MCMP.fc_uart_recv",
                "bidirectional": false
              }
            ],
            "properties": [
              {
                "name": "Deployment_Properties::Actual_Connection_Binding",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "ListValue",
                  "value": [
                    {
                      "kind": "ReferenceValue",
                      "value": "FCTL_SBUS"
                    }
                  ]
                },
                "appliesTo": [
                  "c3",
                  "c4"
                ]
              },
              {
                "name": "HAMR::Default_Bit_Width",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "IntegerLiteral",
                  "value": 32,
                  "unit": null
                }
              },
              {
                "name": "HAMR::Default_Max_Sequence_Size",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "IntegerLiteral",
                  "value": 1,
                  "unit": null
                }
              },
              {
                "name": "HAMR::Max_String_Size",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "IntegerLiteral",
                  "value": 256,
                  "unit": null
                }
              },
              {
                "name": "HAMR::Bit_Codec_Raw_Connections",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "BooleanLiteral",
                  "value": true
                }
              }
            ]
          }
        ]
      }
    },
    {
      "name": "MC",
      "kind": "AadlPackage",
      "public": {
        "with": [
          "UAS_Buses",
          "CASE_Model_Transformations",
          "SW",
          "CASE_Properties",
          "CASE_Scheduling",
          "HAMR"
        ],
        "components": [
          {
            "name": "MC::Radio",
            "localName": "Radio",
            "kind": "ComponentType",
            "category": "device",
            "features": [
              {
                "name": "recv_data_in",
                "kind": "EventDataPort",
                "classifier": null,
                "direction": "in"
              },
              {
                "name": "recv_data_out",
                "kind": "EventDataPort",
                "classifier": "CASE_Model_Transformations::CASE_RF_Msg.Impl",
                "direction": "out"
              },
              {
                "name": "send_data_in",
                "kind": "EventDataPort",
                "classifier": "CASE_Model_Transformations::CASE_RF_Msg.Impl",
                "direction": "in"
              },
              {
                "name": "send_data_out",
                "kind": "EventDataPort",
                "classifier": null,
                "direction": "out"
              },
              {
                "name": "MCA",
                "kind": "BusAccess",
                "accessType": "requires",
                "bus": "MC::MC_Bus.Impl"
              },
              {
                "name": "RFA",
                "kind": "BusAccess",
                "accessType": "requires",
                "bus": "UAS_Buses::RF_Bus.Impl"
              }
            ]
          },
          {
            "packageName": "MC",
            "name": "MC::Radio.Impl",
            "localName": "Radio.Impl",
            "kind": "ComponentImplementation",
            "category": "device"
          },
          {
            "name": "MC::UART",
            "localName": "UART",
            "kind": "ComponentType",
            "category": "device",
            "features": [
              {
                "name": "recv_data_in",
                "kind": "EventDataPort",
                "classifier": null,
                "direction": "in"
              },
              {
                "name": "recv_data_out",
                "kind": "EventDataPort",
                "classifier": "CASE_Model_Transformations::CASE_UART_Msg.Impl",
                "direction": "out"
              },
              {
                "name": "send_data_in",
                "kind": "EventDataPort",
                "classifier": "CASE_Model_Transformations::CASE_UART_Msg.Impl",
                "direction": "in"
              },
              {
                "name": "send_data_out",
                "kind": "EventDataPort",
                "classifier": null,
                "direction": "out"
              },
              {
                "name": "MCA",
                "kind": "BusAccess",
                "accessType": "requires",
                "bus": "MC::MC_Bus.Impl"
              },
              {
                "name": "UART",
                "kind": "BusAccess",
                "accessType": "requires",
                "bus": "UAS_Buses::Serial_Bus.Impl"
              }
            ]
          },
          {
            "packageName": "MC",
            "name": "MC::UART.Impl",
            "localName": "UART.Impl",
            "kind": "ComponentImplementation",
            "category": "device"
          },
          {
            "name": "MC::MC_Proc",
            "localName": "MC_Proc",
            "kind": "ComponentType",
            "category": "processor",
            "features": [
              {
                "name": "MCA",
                "kind": "BusAccess",
                "accessType": "requires",
                "bus": "MC::MC_Bus.Impl"
              }
            ]
          },
          {
            "packageName": "MC",
            "name": "MC::MC_Proc.Impl",
            "localName": "MC_Proc.Impl",
            "kind": "ComponentImplementation",
            "category": "processor",
            "properties": [
              {
                "name": "Timing_Properties::Frame_Period",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "IntegerLiteral",
                  "value": 1000,
                  "unit": "ms"
                }
              },
              {
                "name": "Timing_Properties::Clock_Period",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "IntegerLiteral",
                  "value": 2,
                  "unit": "ms"
                }
              },
              {
                "name": "CASE_Scheduling::Max_Domain",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "IntegerLiteral",
                  "value": 15,
                  "unit": null
                }
              },
              {
                "name": "CASE_Scheduling::Schedule_Source_Text",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "StringLiteral",
                  "value": "behavior_code/kernel/domain_schedule.c"
                }
              }
            ]
          },
          {
            "name": "MC::MC_Mem",
            "localName": "MC_Mem",
            "kind": "ComponentType",
            "category": "memory",
            "features": [
              {
                "name": "MCA",
                "kind": "BusAccess",
                "accessType": "requires",
                "bus": "MC::MC_Bus.Impl"
              }
            ]
          },
          {
            "packageName": "MC",
            "name": "MC::MC_Mem.Impl",
            "localName": "MC_Mem.Impl",
            "kind": "ComponentImplementation",
            "category": "memory"
          },
          {
            "name": "MC::MC_Bus",
            "localName": "MC_Bus",
            "kind": "ComponentType",
            "category": "bus"
          },
          {
            "packageName": "MC",
            "name": "MC::MC_Bus.Impl",
            "localName": "MC_Bus.Impl",
            "kind": "ComponentImplementation",
            "category": "bus"
          },
          {
            "name": "MC::CASE_Virtual_Machine",
            "localName": "CASE_Virtual_Machine",
            "kind": "ComponentType",
            "category": "virtual processor",
            "properties": [
              {
                "name": "CASE_Properties::Component_Type",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "EnumerationLiteral",
                  "value": "VIRTUAL_MACHINE"
                }
              }
            ]
          },
          {
            "packageName": "MC",
            "name": "MC::CASE_Virtual_Machine.Radio",
            "localName": "CASE_Virtual_Machine.Radio",
            "kind": "ComponentImplementation",
            "category": "virtual processor",
            "properties": [
              {
                "name": "CASE_Properties::OS",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "StringLiteral",
                  "value": "Linux"
                }
              }
            ]
          },
          {
            "packageName": "MC",
            "name": "MC::CASE_Virtual_Machine.UxAS",
            "localName": "CASE_Virtual_Machine.UxAS",
            "kind": "ComponentImplementation",
            "category": "virtual processor",
            "properties": [
              {
                "name": "CASE_Properties::OS",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "StringLiteral",
                  "value": "Linux"
                }
              }
            ]
          },
          {
            "name": "MC::MissionComputer",
            "localName": "MissionComputer",
            "kind": "ComponentType",
            "category": "system",
            "features": [
              {
                "name": "FC_UART",
                "kind": "BusAccess",
                "accessType": "requires",
                "bus": "UAS_Buses::Serial_Bus.Impl"
              },
              {
                "name": "RFA",
                "kind": "BusAccess",
                "accessType": "requires",
                "bus": "UAS_Buses::RF_Bus.Impl"
              },
              {
                "name": "radio_recv",
                "kind": "EventDataPort",
                "classifier": null,
                "direction": "in"
              },
              {
                "name": "radio_send",
                "kind": "EventDataPort",
                "classifier": null,
                "direction": "out"
              },
              {
                "name": "fc_uart_recv",
                "kind": "EventDataPort",
                "classifier": null,
                "direction": "in"
              },
              {
                "name": "fc_uart_send",
                "kind": "EventDataPort",
                "classifier": null,
                "direction": "out"
              }
            ]
          },
          {
            "packageName": "MC",
            "name": "MC::MissionComputer.Impl",
            "localName": "MissionComputer.Impl",
            "kind": "ComponentImplementation",
            "category": "system",
            "subcomponents": [
              {
                "name": "BUS_HW",
                "kind": "Subcomponent",
                "category": "bus",
                "classifier": "MC::MC_Bus.Impl"
              },
              {
                "name": "RADIO_HW",
                "kind": "Subcomponent",
                "category": "device",
                "classifier": "MC::Radio.Impl"
              },
              {
                "name": "FC_UART_HW",
                "kind": "Subcomponent",
                "category": "device",
                "classifier": "MC::UART.Impl"
              },
              {
                "name": "MEM_HW",
                "kind": "Subcomponent",
                "category": "memory",
                "classifier": "MC::MC_Mem.Impl"
              },
              {
                "name": "PROC_HW",
                "kind": "Subcomponent",
                "category": "processor",
                "classifier": "MC::MC_Proc.Impl"
              },
              {
                "name": "PROC_SW",
                "kind": "Subcomponent",
                "category": "system",
                "classifier": "SW::SW.Impl"
              }
            ],
            "connections": [
              {
                "name": "bac1",
                "kind": "busAccess",
                "source": "RADIO_HW.MCA",
                "destination": "BUS_HW",
                "bidirectional": true
              },
              {
                "name": "bac2",
                "kind": "busAccess",
                "source": "FC_UART_HW.MCA",
                "destination": "BUS_HW",
                "bidirectional": true
              },
              {
                "name": "bac3",
                "kind": "busAccess",
                "source": "PROC_HW.MCA",
                "destination": "BUS_HW",
                "bidirectional": true
              },
              {
                "name": "bac4",
                "kind": "busAccess",
                "source": "MEM_HW.MCA",
                "destination": "BUS_HW",
                "bidirectional": true
              },
              {
                "name": "bac5",
                "kind": "busAccess",
                "source": "RADIO_HW.RFA",
                "destination": "RFA",
                "bidirectional": true
              },
              {
                "name": "bac6",
                "kind": "busAccess",
                "source": "FC_UART_HW.UART",
                "destination": "FC_UART",
                "bidirectional": true
              },
              {
                "name": "c01",
                "kind": "PortConnection",
                "source": "radio_recv",
                "destination": "RADIO_HW.recv_data_in",
                "bidirectional": false
              },
              {
                "name": "c02",
                "kind": "PortConnection",
                "source": "fc_uart_recv",
                "destination": "FC_UART_HW.recv_data_in",
                "bidirectional": false
              },
              {
                "name": "c04",
                "kind": "PortConnection",
                "source": "RADIO_HW.recv_data_out",
                "destination": "PROC_SW.radio_recv",
                "bidirectional": false
              },
              {
                "name": "c05",
                "kind": "PortConnection",
                "source": "RADIO_HW.send_data_out",
                "destination": "radio_send",
                "bidirectional": false
              },
              {
                "name": "c06",
                "kind": "PortConnection",
                "source": "FC_UART_HW.recv_data_out",
                "destination": "PROC_SW.uart_recv",
                "bidirectional": false
              },
              {
                "name": "c07",
                "kind": "PortConnection",
                "source": "FC_UART_HW.send_data_out",
                "destination": "fc_uart_send",
                "bidirectional": false
              },
              {
                "name": "c10",
                "kind": "PortConnection",
                "source": "PROC_SW.radio_send",
                "destination": "RADIO_HW.send_data_in",
                "bidirectional": false
              },
              {
                "name": "c11",
                "kind": "PortConnection",
                "source": "PROC_SW.uart_send",
                "destination": "FC_UART_HW.send_data_in",
                "bidirectional": false
              }
            ],
            "properties": [
              {
                "name": "Deployment_Properties::Actual_Processor_Binding",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "ListValue",
                  "value": [
                    {
                      "kind": "ReferenceValue",
                      "value": "PROC_HW"
                    }
                  ]
                },
                "appliesTo": [
                  "PROC_SW"
                ]
              },
              {
                "name": "Deployment_Properties::Actual_Memory_Binding",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "ListValue",
                  "value": [
                    {
                      "kind": "ReferenceValue",
                      "value": "MEM_HW"
                    }
                  ]
                },
                "appliesTo": [
                  "PROC_SW"
                ]
              },
              {
                "name": "Deployment_Properties::Actual_Connection_Binding",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "ListValue",
                  "value": [
                    {
                      "kind": "ReferenceValue",
                      "value": "BUS_HW"
                    }
                  ]
                },
                "appliesTo": [
                  "c04",
                  "c06",
                  "c10",
                  "c11"
                ]
              },
              {
                "name": "HAMR::Default_Bit_Width",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "IntegerLiteral",
                  "value": 32,
                  "unit": null
                }
              },
              {
                "name": "HAMR::Default_Max_Sequence_Size",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "IntegerLiteral",
                  "value": 1,
                  "unit": null
                }
              },
              {
                "name": "HAMR::Max_String_Size",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "IntegerLiteral",
                  "value": 256,
                  "unit": null
                }
              },
              {
                "name": "HAMR::Bit_Codec_Raw_Connections",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "BooleanLiteral",
                  "value": true
                }
              }
            ]
          }
        ]
      }
    },
    {
      "name": "SW",
      "kind": "AadlPackage",
      "public": {
        "with": [
          "Base_Types",
          "Drivers",
          "CASE_Model_Transformations",
          "CASEAgree",
          "CASE_Properties",
          "CASE_Scheduling",
          "CMASI",
          "CM_Property_Set",
          "HAMR"
        ],
        "packageRenames": [
          {
            "package": "AGREE_PLTL",
            "rename": "all"
          }
        ],
        "components": [
          {
            "name": "SW::RadioDriver_Attestation_thr",
            "localName": "RadioDriver_Attestation_thr",
            "kind": "ComponentType",
            "category": "thread",
            "extends": "Drivers::RadioDriver",
            "features": [
              {
                "name": "am_request",
                "kind": "EventDataPort",
                "classifier": "CASE_Model_Transformations::CASE_AttestationRequestMsg.Impl",
                "direction": "in"
              },
              {
                "name": "am_response",
                "kind": "EventDataPort",
                "classifier": "CASE_Model_Transformations::CASE_AttestationResponseMsg.Impl",
                "direction": "out"
              }
            ],
            "properties": [
              {
                "name": "Thread_Properties::Dispatch_Protocol",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "EnumerationLiteral",
                  "value": "Periodic"
                }
              },
              {
                "name": "Timing_Properties::Period",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "IntegerLiteral",
                  "value": 500,
                  "unit": "ms"
                }
              },
              {
                "name": "Timing_Properties::Compute_Execution_Time",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "RangeValue",
                  "value": {
                    "min": {
                      "kind": "IntegerLiteral",
                      "value": 20,
                      "unit": "ms"
                    },
                    "max": {
                      "kind": "IntegerLiteral",
                      "value": 20,
                      "unit": "ms"
                    }
                  }
                }
              },
              {
                "name": "Memory_Properties::Stack_Size",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "PropertyConstant",
                  "value": "Stack_Size"
                }
              }
            ]
          },
          {
            "packageName": "SW",
            "name": "SW::RadioDriver_Attestation_thr.Impl",
            "localName": "RadioDriver_Attestation_thr.Impl",
            "kind": "ComponentImplementation",
            "category": "thread",
            "extends": "Drivers::RadioDriver.Impl"
          },
          {
            "name": "SW::RadioDriver_Attestation",
            "localName": "RadioDriver_Attestation",
            "kind": "ComponentType",
            "category": "process",
            "features": [
              {
                "name": "am_request",
                "kind": "EventDataPort",
                "classifier": "CASE_Model_Transformations::CASE_AttestationRequestMsg.Impl",
                "direction": "in"
              },
              {
                "name": "am_response",
                "kind": "EventDataPort",
                "classifier": "CASE_Model_Transformations::CASE_AttestationResponseMsg.Impl",
                "direction": "out"
              },
              {
                "name": "recv_data",
                "kind": "EventDataPort",
                "classifier": "CASE_Model_Transformations::CASE_RF_Msg.Impl",
                "direction": "in"
              },
              {
                "name": "send_data",
                "kind": "EventDataPort",
                "classifier": "CASE_Model_Transformations::CASE_RF_Msg.Impl",
                "direction": "out"
              },
              {
                "name": "AutomationRequest",
                "kind": "EventDataPort",
                "classifier": "CMASI::AddressAttributedMessage.i",
                "direction": "out"
              },
              {
                "name": "OperatingRegion",
                "kind": "EventDataPort",
                "classifier": "CMASI::AddressAttributedMessage.i",
                "direction": "out"
              },
              {
                "name": "LineSearchTask",
                "kind": "EventDataPort",
                "classifier": "CMASI::AddressAttributedMessage.i",
                "direction": "out"
              }
            ],
            "properties": [
              {
                "name": "CASE_Scheduling::Domain",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "PropertyConstant",
                  "value": "RadioDriver_Attestation_Domain"
                }
              },
              {
                "name": "HAMR::Component_Type",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "EnumerationLiteral",
                  "value": "VIRTUAL_MACHINE"
                }
              }
            ],
            "annexes": [
              {
                "name": "agree",
                "kind": "AnnexSubclause",
                "parsedAnnexSubclause": {
                  "statements": [
                    {
                      "kind": "GuaranteeStatement",
                      "name": "Req001_SW",
                      "label": "The radio_send outputs only well formed CASE_RF_Msg.Impl types",
                      "expr": {
                        "kind": "BinaryExpr",
                        "left": {
                          "kind": "EventExpr",
                          "id": {
                            "kind": "NamedElmExpr",
                            "name": "send_data"
                          }
                        },
                        "op": "=>",
                        "right": {
                          "kind": "CallExpr",
                          "function": {
                            "kind": "DoubleDotRef",
                            "packageName": "CASEAgree",
                            "name": "WellformedCASE_RF_Msg"
                          },
                          "args": [
                            {
                              "kind": "NamedElmExpr",
                              "name": "send_data"
                            },
                            {
                              "kind": "NamedElmExpr",
                              "name": "UAV_ID"
                            },
                            {
                              "kind": "NamedElmExpr",
                              "name": "GS_ID"
                            }
                          ]
                        }
                      }
                    }
                  ]
                },
                "sourceText": "{**\n\t\t\tguarantee Req001_SW \\\"The radio_send outputs only well formed CASE_RF_Msg.Impl types\\\" :\n\t\t\t\t event(send_data) => CASEAgree::WellformedCASE_RF_Msg(send_data, CASEAgree::UAV_ID, CASEAgree::GS_ID);\n\t\t**}"
              }
            ]
          },
          {
            "packageName": "SW",
            "name": "SW::RadioDriver_Attestation.Impl",
            "localName": "RadioDriver_Attestation.Impl",
            "kind": "ComponentImplementation",
            "category": "process",
            "subcomponents": [
              {
                "name": "RadioDriver_Attestation",
                "kind": "Subcomponent",
                "category": "thread",
                "classifier": "SW::RadioDriver_Attestation_thr.Impl"
              }
            ],
            "connections": [
              {
                "name": "c1",
                "kind": "PortConnection",
                "source": "am_request",
                "destination": "RadioDriver_Attestation.am_request",
                "bidirectional": false
              },
              {
                "name": "c2",
                "kind": "PortConnection",
                "source": "RadioDriver_Attestation.am_response",
                "destination": "am_response",
                "bidirectional": false
              },
              {
                "name": "c3",
                "kind": "PortConnection",
                "source": "recv_data",
                "destination": "RadioDriver_Attestation.recv_data",
                "bidirectional": false
              },
              {
                "name": "c4",
                "kind": "PortConnection",
                "source": "RadioDriver_Attestation.send_data",
                "destination": "send_data",
                "bidirectional": false
              },
              {
                "name": "c5",
                "kind": "PortConnection",
                "source": "RadioDriver_Attestation.AutomationRequest",
                "destination": "AutomationRequest",
                "bidirectional": false
              },
              {
                "name": "c6",
                "kind": "PortConnection",
                "source": "RadioDriver_Attestation.OperatingRegion",
                "destination": "OperatingRegion",
                "bidirectional": false
              },
              {
                "name": "c7",
                "kind": "PortConnection",
                "source": "RadioDriver_Attestation.LineSearchTask",
                "destination": "LineSearchTask",
                "bidirectional": false
              }
            ]
          },
          {
            "name": "SW::CASE_AttestationManager_thr",
            "localName": "CASE_AttestationManager_thr",
            "kind": "ComponentType",
            "category": "thread",
            "features": [
              {
                "name": "trusted_ids",
                "kind": "DataPort",
                "classifier": "CMASI::AddressArray.i",
                "direction": "out"
              },
              {
                "name": "attestation_request",
                "kind": "EventDataPort",
                "classifier": "CASE_Model_Transformations::CASE_AttestationRequestMsg.Impl",
                "direction": "out"
              },
              {
                "name": "attestation_response",
                "kind": "EventDataPort",
                "classifier": "CASE_Model_Transformations::CASE_AttestationResponseMsg.Impl",
                "direction": "in"
              }
            ],
            "properties": [
              {
                "name": "CASE_Properties::Component_Type",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "EnumerationLiteral",
                  "value": "ATTESTATION"
                }
              },
              {
                "name": "Thread_Properties::Dispatch_Protocol",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "EnumerationLiteral",
                  "value": "Periodic"
                }
              },
              {
                "name": "Timing_Properties::Period",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "IntegerLiteral",
                  "value": 500,
                  "unit": "ms"
                }
              },
              {
                "name": "Timing_Properties::Compute_Execution_Time",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "RangeValue",
                  "value": {
                    "min": {
                      "kind": "IntegerLiteral",
                      "value": 2,
                      "unit": "ms"
                    },
                    "max": {
                      "kind": "IntegerLiteral",
                      "value": 2,
                      "unit": "ms"
                    }
                  }
                }
              }
            ]
          },
          {
            "packageName": "SW",
            "name": "SW::CASE_AttestationManager_thr.Impl",
            "localName": "CASE_AttestationManager_thr.Impl",
            "kind": "ComponentImplementation",
            "category": "thread",
            "properties": [
              {
                "name": "CASE_Properties::Component_Impl",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "StringLiteral",
                  "value": "CakeML"
                }
              },
              {
                "name": "CASE_Properties::Cache_Timeout",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "IntegerLiteral",
                  "value": 30,
                  "unit": null
                }
              },
              {
                "name": "CASE_Properties::Cache_Size",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "IntegerLiteral",
                  "value": 3,
                  "unit": null
                }
              },
              {
                "name": "Thread_Properties::Dispatch_Protocol",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "EnumerationLiteral",
                  "value": "Periodic"
                }
              },
              {
                "name": "Memory_Properties::Stack_Size",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "PropertyConstant",
                  "value": "Stack_Size"
                }
              }
            ]
          },
          {
            "name": "SW::CASE_AttestationManager",
            "localName": "CASE_AttestationManager",
            "kind": "ComponentType",
            "category": "process",
            "features": [
              {
                "name": "trusted_ids",
                "kind": "DataPort",
                "classifier": "CMASI::AddressArray.i",
                "direction": "out"
              },
              {
                "name": "attestation_request",
                "kind": "EventDataPort",
                "classifier": "CASE_Model_Transformations::CASE_AttestationRequestMsg.Impl",
                "direction": "out"
              },
              {
                "name": "attestation_response",
                "kind": "EventDataPort",
                "classifier": "CASE_Model_Transformations::CASE_AttestationResponseMsg.Impl",
                "direction": "in"
              }
            ],
            "properties": [
              {
                "name": "CASE_Scheduling::Domain",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "IntegerLiteral",
                  "value": 4,
                  "unit": null
                }
              }
            ]
          },
          {
            "packageName": "SW",
            "name": "SW::CASE_AttestationManager.Impl",
            "localName": "CASE_AttestationManager.Impl",
            "kind": "ComponentImplementation",
            "category": "process",
            "subcomponents": [
              {
                "name": "CASE_AttestationManager",
                "kind": "Subcomponent",
                "category": "thread",
                "classifier": "SW::CASE_AttestationManager_thr.Impl"
              }
            ],
            "connections": [
              {
                "name": "c1",
                "kind": "PortConnection",
                "source": "CASE_AttestationManager.trusted_ids",
                "destination": "trusted_ids",
                "bidirectional": false
              },
              {
                "name": "c2",
                "kind": "PortConnection",
                "source": "CASE_AttestationManager.attestation_request",
                "destination": "attestation_request",
                "bidirectional": false
              },
              {
                "name": "c3",
                "kind": "PortConnection",
                "source": "attestation_response",
                "destination": "CASE_AttestationManager.attestation_response",
                "bidirectional": false
              }
            ]
          },
          {
            "name": "SW::CASE_AttestationGate_thr",
            "localName": "CASE_AttestationGate_thr",
            "kind": "ComponentType",
            "category": "thread",
            "features": [
              {
                "name": "trusted_ids",
                "kind": "DataPort",
                "classifier": "CMASI::AddressArray.i",
                "direction": "in"
              },
              {
                "name": "AutomationRequest_in",
                "kind": "EventDataPort",
                "classifier": "CMASI::AddressAttributedMessage.i",
                "direction": "in"
              },
              {
                "name": "AutomationRequest_out",
                "kind": "EventDataPort",
                "classifier": "CMASI::AutomationRequest.i",
                "direction": "out"
              },
              {
                "name": "OperatingRegion_in",
                "kind": "EventDataPort",
                "classifier": "CMASI::AddressAttributedMessage.i",
                "direction": "in"
              },
              {
                "name": "OperatingRegion_out",
                "kind": "EventDataPort",
                "classifier": "CMASI::OperatingRegion.i",
                "direction": "out"
              },
              {
                "name": "LineSearchTask_in",
                "kind": "EventDataPort",
                "classifier": "CMASI::AddressAttributedMessage.i",
                "direction": "in"
              },
              {
                "name": "LineSearchTask_out",
                "kind": "EventDataPort",
                "classifier": "CMASI::LineSearchTask.i",
                "direction": "out"
              }
            ],
            "properties": [
              {
                "name": "CASE_Properties::Component_Type",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "EnumerationLiteral",
                  "value": "MONITOR"
                }
              },
              {
                "name": "CASE_Properties::Component_Spec",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "ListValue",
                  "value": [
                    {
                      "kind": "StringLiteral",
                      "value": "CASE_AttestationGate_policy"
                    }
                  ]
                }
              },
              {
                "name": "Thread_Properties::Dispatch_Protocol",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "EnumerationLiteral",
                  "value": "Periodic"
                }
              },
              {
                "name": "Timing_Properties::Period",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "IntegerLiteral",
                  "value": 500,
                  "unit": "ms"
                }
              },
              {
                "name": "Timing_Properties::Compute_Execution_Time",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "RangeValue",
                  "value": {
                    "min": {
                      "kind": "IntegerLiteral",
                      "value": 2,
                      "unit": "ms"
                    },
                    "max": {
                      "kind": "IntegerLiteral",
                      "value": 2,
                      "unit": "ms"
                    }
                  }
                }
              },
              {
                "name": "Memory_Properties::Stack_Size",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "PropertyConstant",
                  "value": "Stack_Size"
                }
              }
            ],
            "annexes": [
              {
                "name": "agree",
                "kind": "AnnexSubclause",
                "parsedAnnexSubclause": {
                  "statements": [
                    {
                      "kind": "FnDef",
                      "name": "IS_TRUSTED",
                      "args": [
                        {
                          "name": "src_id",
                          "type": {
                            "kind": "DoubleDotRef",
                            "name": "CMASI::Address.i"
                          }
                        }
                      ],
                      "type": {
                        "kind": "PrimType",
                        "primType": "bool"
                      },
                      "expr": {
                        "kind": "ExistsExpr",
                        "binding": "id",
                        "array": {
                          "kind": "NamedElmExpr",
                          "name": "trusted_ids"
                        },
                        "expr": {
                          "kind": "BinaryExpr",
                          "left": {
                            "kind": "NamedElmExpr",
                            "name": "id"
                          },
                          "op": "=",
                          "right": {
                            "kind": "NamedElmExpr",
                            "name": "src_id"
                          }
                        }
                      }
                    },
                    {
                      "kind": "GuaranteeStatement",
                      "name": "CASE_AttestationGate_policy",
                      "label": "Only messages from trusted sources shall be forwarded",
                      "expr": {
                        "kind": "IfThenElseExpr",
                        "if": {
                          "kind": "BinaryExpr",
                          "left": {
                            "kind": "EventExpr",
                            "id": {
                              "kind": "NamedElmExpr",
                              "name": "AutomationRequest_in"
                            }
                          },
                          "op": "and",
                          "right": {
                            "kind": "CallExpr",
                            "function": {
                              "kind": "DoubleDotRef",
                              "name": "IS_TRUSTED"
                            },
                            "args": [
                              {
                                "kind": "SelectionExpr",
                                "target": {
                                  "kind": "NamedElmExpr",
                                  "name": "AutomationRequest_in"
                                },
                                "field": "id"
                              }
                            ]
                          }
                        },
                        "then": {
                          "kind": "BinaryExpr",
                          "left": {
                            "kind": "BinaryExpr",
                            "left": {
                              "kind": "EventExpr",
                              "id": {
                                "kind": "NamedElmExpr",
                                "name": "AutomationRequest_out"
                              }
                            },
                            "op": "and",
                            "right": {
                              "kind": "UnaryExpr",
                              "operand": {
                                "kind": "BinaryExpr",
                                "left": {
                                  "kind": "EventExpr",
                                  "id": {
                                    "kind": "NamedElmExpr",
                                    "name": "OperatingRegion_out"
                                  }
                                },
                                "op": "or",
                                "right": {
                                  "kind": "EventExpr",
                                  "id": {
                                    "kind": "NamedElmExpr",
                                    "name": "LineSearchTask_out"
                                  }
                                }
                              },
                              "op": "not"
                            }
                          },
                          "op": "and",
                          "right": {
                            "kind": "BinaryExpr",
                            "left": {
                              "kind": "NamedElmExpr",
                              "name": "AutomationRequest_out"
                            },
                            "op": "=",
                            "right": {
                              "kind": "SelectionExpr",
                              "target": {
                                "kind": "SelectionExpr",
                                "target": {
                                  "kind": "NamedElmExpr",
                                  "name": "AutomationRequest_in"
                                },
                                "field": "payload"
                              },
                              "field": "AutomationRequest"
                            }
                          }
                        },
                        "else": {
                          "kind": "IfThenElseExpr",
                          "if": {
                            "kind": "BinaryExpr",
                            "left": {
                              "kind": "EventExpr",
                              "id": {
                                "kind": "NamedElmExpr",
                                "name": "OperatingRegion_in"
                              }
                            },
                            "op": "and",
                            "right": {
                              "kind": "CallExpr",
                              "function": {
                                "kind": "DoubleDotRef",
                                "name": "IS_TRUSTED"
                              },
                              "args": [
                                {
                                  "kind": "SelectionExpr",
                                  "target": {
                                    "kind": "NamedElmExpr",
                                    "name": "OperatingRegion_in"
                                  },
                                  "field": "id"
                                }
                              ]
                            }
                          },
                          "then": {
                            "kind": "BinaryExpr",
                            "left": {
                              "kind": "BinaryExpr",
                              "left": {
                                "kind": "EventExpr",
                                "id": {
                                  "kind": "NamedElmExpr",
                                  "name": "OperatingRegion_out"
                                }
                              },
                              "op": "and",
                              "right": {
                                "kind": "UnaryExpr",
                                "operand": {
                                  "kind": "BinaryExpr",
                                  "left": {
                                    "kind": "EventExpr",
                                    "id": {
                                      "kind": "NamedElmExpr",
                                      "name": "AutomationRequest_out"
                                    }
                                  },
                                  "op": "or",
                                  "right": {
                                    "kind": "EventExpr",
                                    "id": {
                                      "kind": "NamedElmExpr",
                                      "name": "LineSearchTask_out"
                                    }
                                  }
                                },
                                "op": "not"
                              }
                            },
                            "op": "and",
                            "right": {
                              "kind": "BinaryExpr",
                              "left": {
                                "kind": "NamedElmExpr",
                                "name": "OperatingRegion_out"
                              },
                              "op": "=",
                              "right": {
                                "kind": "SelectionExpr",
                                "target": {
                                  "kind": "SelectionExpr",
                                  "target": {
                                    "kind": "NamedElmExpr",
                                    "name": "OperatingRegion_in"
                                  },
                                  "field": "payload"
                                },
                                "field": "OperatingRegion"
                              }
                            }
                          },
                          "else": {
                            "kind": "IfThenElseExpr",
                            "if": {
                              "kind": "BinaryExpr",
                              "left": {
                                "kind": "EventExpr",
                                "id": {
                                  "kind": "NamedElmExpr",
                                  "name": "LineSearchTask_in"
                                }
                              },
                              "op": "and",
                              "right": {
                                "kind": "CallExpr",
                                "function": {
                                  "kind": "DoubleDotRef",
                                  "name": "IS_TRUSTED"
                                },
                                "args": [
                                  {
                                    "kind": "SelectionExpr",
                                    "target": {
                                      "kind": "NamedElmExpr",
                                      "name": "LineSearchTask_in"
                                    },
                                    "field": "id"
                                  }
                                ]
                              }
                            },
                            "then": {
                              "kind": "BinaryExpr",
                              "left": {
                                "kind": "BinaryExpr",
                                "left": {
                                  "kind": "EventExpr",
                                  "id": {
                                    "kind": "NamedElmExpr",
                                    "name": "LineSearchTask_out"
                                  }
                                },
                                "op": "and",
                                "right": {
                                  "kind": "UnaryExpr",
                                  "operand": {
                                    "kind": "BinaryExpr",
                                    "left": {
                                      "kind": "EventExpr",
                                      "id": {
                                        "kind": "NamedElmExpr",
                                        "name": "AutomationRequest_out"
                                      }
                                    },
                                    "op": "or",
                                    "right": {
                                      "kind": "EventExpr",
                                      "id": {
                                        "kind": "NamedElmExpr",
                                        "name": "OperatingRegion_out"
                                      }
                                    }
                                  },
                                  "op": "not"
                                }
                              },
                              "op": "and",
                              "right": {
                                "kind": "BinaryExpr",
                                "left": {
                                  "kind": "NamedElmExpr",
                                  "name": "LineSearchTask_out"
                                },
                                "op": "=",
                                "right": {
                                  "kind": "SelectionExpr",
                                  "target": {
                                    "kind": "SelectionExpr",
                                    "target": {
                                      "kind": "NamedElmExpr",
                                      "name": "LineSearchTask_in"
                                    },
                                    "field": "payload"
                                  },
                                  "field": "LineSearchTask"
                                }
                              }
                            },
                            "else": {
                              "kind": "UnaryExpr",
                              "operand": {
                                "kind": "BinaryExpr",
                                "left": {
                                  "kind": "BinaryExpr",
                                  "left": {
                                    "kind": "EventExpr",
                                    "id": {
                                      "kind": "NamedElmExpr",
                                      "name": "AutomationRequest_out"
                                    }
                                  },
                                  "op": "or",
                                  "right": {
                                    "kind": "EventExpr",
                                    "id": {
                                      "kind": "NamedElmExpr",
                                      "name": "OperatingRegion_out"
                                    }
                                  }
                                },
                                "op": "or",
                                "right": {
                                  "kind": "EventExpr",
                                  "id": {
                                    "kind": "NamedElmExpr",
                                    "name": "LineSearchTask_out"
                                  }
                                }
                              },
                              "op": "not"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "sourceText": "{**\n\t\t\tfun IS_TRUSTED(src_id : CMASI::Address.i) : bool = exists id in trusted_ids, id = src_id;\n\t\t\tguarantee CASE_AttestationGate_policy \\\"Only messages from trusted sources shall be forwarded\\\" :\n\t\t\t\tif event(AutomationRequest_in) and IS_TRUSTED(AutomationRequest_in.id) then event(AutomationRequest_out) and not (event(OperatingRegion_out) or event(LineSearchTask_out)) and AutomationRequest_out = AutomationRequest_in.payload.AutomationRequest\n\t\t\t\telse if event(OperatingRegion_in) and IS_TRUSTED(OperatingRegion_in.id) then event(OperatingRegion_out) and not (event(AutomationRequest_out) or event(LineSearchTask_out)) and OperatingRegion_out = OperatingRegion_in.payload.OperatingRegion\n\t\t\t\telse if event(LineSearchTask_in) and IS_TRUSTED(LineSearchTask_in.id) then event(LineSearchTask_out) and not (event(AutomationRequest_out) or event(OperatingRegion_out)) and LineSearchTask_out = LineSearchTask_in.payload.LineSearchTask\n\t\t\t\telse not (event(AutomationRequest_out) or event(OperatingRegion_out) or event(LineSearchTask_out));\n\t\t**}"
              }
            ]
          },
          {
            "packageName": "SW",
            "name": "SW::CASE_AttestationGate_thr.Impl",
            "localName": "CASE_AttestationGate_thr.Impl",
            "kind": "ComponentImplementation",
            "category": "thread"
          },
          {
            "name": "SW::CASE_AttestationGate",
            "localName": "CASE_AttestationGate",
            "kind": "ComponentType",
            "category": "process",
            "features": [
              {
                "name": "trusted_ids",
                "kind": "DataPort",
                "classifier": "CMASI::AddressArray.i",
                "direction": "in"
              },
              {
                "name": "AutomationRequest_in",
                "kind": "EventDataPort",
                "classifier": "CMASI::AddressAttributedMessage.i",
                "direction": "in"
              },
              {
                "name": "AutomationRequest_out",
                "kind": "EventDataPort",
                "classifier": "CMASI::AutomationRequest.i",
                "direction": "out"
              },
              {
                "name": "OperatingRegion_in",
                "kind": "EventDataPort",
                "classifier": "CMASI::AddressAttributedMessage.i",
                "direction": "in"
              },
              {
                "name": "OperatingRegion_out",
                "kind": "EventDataPort",
                "classifier": "CMASI::OperatingRegion.i",
                "direction": "out"
              },
              {
                "name": "LineSearchTask_in",
                "kind": "EventDataPort",
                "classifier": "CMASI::AddressAttributedMessage.i",
                "direction": "in"
              },
              {
                "name": "LineSearchTask_out",
                "kind": "EventDataPort",
                "classifier": "CMASI::LineSearchTask.i",
                "direction": "out"
              }
            ],
            "properties": [
              {
                "name": "CASE_Scheduling::Domain",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "PropertyConstant",
                  "value": "CASE_AttestationGate_Domain"
                }
              }
            ]
          },
          {
            "packageName": "SW",
            "name": "SW::CASE_AttestationGate.Impl",
            "localName": "CASE_AttestationGate.Impl",
            "kind": "ComponentImplementation",
            "category": "process",
            "subcomponents": [
              {
                "name": "CASE_AttestationGate",
                "kind": "Subcomponent",
                "category": "thread",
                "classifier": "SW::CASE_AttestationGate_thr.Impl"
              }
            ],
            "connections": [
              {
                "name": "c1",
                "kind": "PortConnection",
                "source": "trusted_ids",
                "destination": "CASE_AttestationGate.trusted_ids",
                "bidirectional": false
              },
              {
                "name": "c2",
                "kind": "PortConnection",
                "source": "AutomationRequest_in",
                "destination": "CASE_AttestationGate.AutomationRequest_in",
                "bidirectional": false
              },
              {
                "name": "c3",
                "kind": "PortConnection",
                "source": "CASE_AttestationGate.AutomationRequest_out",
                "destination": "AutomationRequest_out",
                "bidirectional": false
              },
              {
                "name": "c4",
                "kind": "PortConnection",
                "source": "OperatingRegion_in",
                "destination": "CASE_AttestationGate.OperatingRegion_in",
                "bidirectional": false
              },
              {
                "name": "c5",
                "kind": "PortConnection",
                "source": "CASE_AttestationGate.OperatingRegion_out",
                "destination": "OperatingRegion_out",
                "bidirectional": false
              },
              {
                "name": "c6",
                "kind": "PortConnection",
                "source": "LineSearchTask_in",
                "destination": "CASE_AttestationGate.LineSearchTask_in",
                "bidirectional": false
              },
              {
                "name": "c7",
                "kind": "PortConnection",
                "source": "CASE_AttestationGate.LineSearchTask_out",
                "destination": "LineSearchTask_out",
                "bidirectional": false
              }
            ]
          },
          {
            "name": "SW::CASE_Filter_LST_thr",
            "localName": "CASE_Filter_LST_thr",
            "kind": "ComponentType",
            "category": "thread",
            "features": [
              {
                "name": "filter_in",
                "kind": "EventDataPort",
                "classifier": "CMASI::LineSearchTask.i",
                "direction": "in"
              },
              {
                "name": "filter_out",
                "kind": "EventDataPort",
                "classifier": "CMASI::LineSearchTask.i",
                "direction": "out"
              }
            ],
            "properties": [
              {
                "name": "CASE_Properties::Component_Type",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "EnumerationLiteral",
                  "value": "FILTER"
                }
              },
              {
                "name": "CASE_Properties::Component_Spec",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "ListValue",
                  "value": [
                    {
                      "kind": "StringLiteral",
                      "value": "Req_Filter_LST"
                    }
                  ]
                }
              },
              {
                "name": "Thread_Properties::Dispatch_Protocol",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "EnumerationLiteral",
                  "value": "Periodic"
                }
              },
              {
                "name": "Timing_Properties::Period",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "IntegerLiteral",
                  "value": 500,
                  "unit": "ms"
                }
              },
              {
                "name": "Timing_Properties::Compute_Execution_Time",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "RangeValue",
                  "value": {
                    "min": {
                      "kind": "IntegerLiteral",
                      "value": 2,
                      "unit": "ms"
                    },
                    "max": {
                      "kind": "IntegerLiteral",
                      "value": 2,
                      "unit": "ms"
                    }
                  }
                }
              },
              {
                "name": "Memory_Properties::Stack_Size",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "PropertyConstant",
                  "value": "Stack_Size"
                }
              }
            ],
            "annexes": [
              {
                "name": "agree",
                "kind": "AnnexSubclause",
                "parsedAnnexSubclause": {
                  "statements": [
                    {
                      "kind": "GuaranteeStatement",
                      "name": "Req_Filter_LST",
                      "label": "Well-formed Line Search Task message",
                      "expr": {
                        "kind": "CallExpr",
                        "function": {
                          "kind": "DoubleDotRef",
                          "packageName": "CASEAgree",
                          "name": "WELL_FORMED_LINE_SEARCH_TASK"
                        },
                        "args": [
                          {
                            "kind": "NamedElmExpr",
                            "name": "filter_out"
                          }
                        ]
                      }
                    }
                  ]
                },
                "sourceText": "{**\n\t\t\tguarantee Req_Filter_LST \\\"Well-formed Line Search Task message\\\" : CASEAgree::WELL_FORMED_LINE_SEARCH_TASK(filter_out);\n\t\t**}"
              }
            ]
          },
          {
            "packageName": "SW",
            "name": "SW::CASE_Filter_LST_thr.Impl",
            "localName": "CASE_Filter_LST_thr.Impl",
            "kind": "ComponentImplementation",
            "category": "thread"
          },
          {
            "name": "SW::CASE_Filter_LST",
            "localName": "CASE_Filter_LST",
            "kind": "ComponentType",
            "category": "process",
            "features": [
              {
                "name": "filter_in",
                "kind": "EventDataPort",
                "classifier": "CMASI::LineSearchTask.i",
                "direction": "in"
              },
              {
                "name": "filter_out",
                "kind": "EventDataPort",
                "classifier": "CMASI::LineSearchTask.i",
                "direction": "out"
              }
            ],
            "properties": [
              {
                "name": "CASE_Scheduling::Domain",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "PropertyConstant",
                  "value": "CASE_Filter_LST_Domain"
                }
              }
            ]
          },
          {
            "packageName": "SW",
            "name": "SW::CASE_Filter_LST.Impl",
            "localName": "CASE_Filter_LST.Impl",
            "kind": "ComponentImplementation",
            "category": "process",
            "subcomponents": [
              {
                "name": "CASE_Filter_LST",
                "kind": "Subcomponent",
                "category": "thread",
                "classifier": "SW::CASE_Filter_LST_thr.Impl"
              }
            ],
            "connections": [
              {
                "name": "c1",
                "kind": "PortConnection",
                "source": "filter_in",
                "destination": "CASE_Filter_LST.filter_in",
                "bidirectional": false
              },
              {
                "name": "c2",
                "kind": "PortConnection",
                "source": "CASE_Filter_LST.filter_out",
                "destination": "filter_out",
                "bidirectional": false
              }
            ]
          },
          {
            "name": "SW::CASE_Filter_OR_thr",
            "localName": "CASE_Filter_OR_thr",
            "kind": "ComponentType",
            "category": "thread",
            "features": [
              {
                "name": "filter_in",
                "kind": "EventDataPort",
                "classifier": "CMASI::OperatingRegion.i",
                "direction": "in"
              },
              {
                "name": "filter_out",
                "kind": "EventDataPort",
                "classifier": "CMASI::OperatingRegion.i",
                "direction": "out"
              }
            ],
            "properties": [
              {
                "name": "CASE_Properties::Component_Type",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "EnumerationLiteral",
                  "value": "FILTER"
                }
              },
              {
                "name": "CASE_Properties::Component_Spec",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "ListValue",
                  "value": [
                    {
                      "kind": "StringLiteral",
                      "value": "Req_Filter_OR"
                    }
                  ]
                }
              },
              {
                "name": "Thread_Properties::Dispatch_Protocol",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "EnumerationLiteral",
                  "value": "Periodic"
                }
              },
              {
                "name": "Timing_Properties::Period",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "IntegerLiteral",
                  "value": 500,
                  "unit": "ms"
                }
              },
              {
                "name": "Timing_Properties::Compute_Execution_Time",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "RangeValue",
                  "value": {
                    "min": {
                      "kind": "IntegerLiteral",
                      "value": 2,
                      "unit": "ms"
                    },
                    "max": {
                      "kind": "IntegerLiteral",
                      "value": 2,
                      "unit": "ms"
                    }
                  }
                }
              },
              {
                "name": "Memory_Properties::Stack_Size",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "PropertyConstant",
                  "value": "Stack_Size"
                }
              }
            ],
            "annexes": [
              {
                "name": "agree",
                "kind": "AnnexSubclause",
                "parsedAnnexSubclause": {
                  "statements": [
                    {
                      "kind": "GuaranteeStatement",
                      "name": "Req_Filter_OR",
                      "label": "Well-formed Operating Region message",
                      "expr": {
                        "kind": "CallExpr",
                        "function": {
                          "kind": "DoubleDotRef",
                          "packageName": "CASEAgree",
                          "name": "WELL_FORMED_OPERATING_REGION"
                        },
                        "args": [
                          {
                            "kind": "NamedElmExpr",
                            "name": "filter_out"
                          }
                        ]
                      }
                    }
                  ]
                },
                "sourceText": "{**\n\t\t\tguarantee Req_Filter_OR \\\"Well-formed Operating Region message\\\" : CASEAgree::WELL_FORMED_OPERATING_REGION(filter_out);\n\t\t**}"
              }
            ]
          },
          {
            "packageName": "SW",
            "name": "SW::CASE_Filter_OR_thr.Impl",
            "localName": "CASE_Filter_OR_thr.Impl",
            "kind": "ComponentImplementation",
            "category": "thread"
          },
          {
            "name": "SW::CASE_Filter_OR",
            "localName": "CASE_Filter_OR",
            "kind": "ComponentType",
            "category": "process",
            "features": [
              {
                "name": "filter_in",
                "kind": "EventDataPort",
                "classifier": "CMASI::OperatingRegion.i",
                "direction": "in"
              },
              {
                "name": "filter_out",
                "kind": "EventDataPort",
                "classifier": "CMASI::OperatingRegion.i",
                "direction": "out"
              }
            ],
            "properties": [
              {
                "name": "CASE_Scheduling::Domain",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "IntegerLiteral",
                  "value": 8,
                  "unit": null
                }
              }
            ]
          },
          {
            "packageName": "SW",
            "name": "SW::CASE_Filter_OR.Impl",
            "localName": "CASE_Filter_OR.Impl",
            "kind": "ComponentImplementation",
            "category": "process",
            "subcomponents": [
              {
                "name": "CASE_Filter_OR",
                "kind": "Subcomponent",
                "category": "thread",
                "classifier": "SW::CASE_Filter_OR_thr.Impl"
              }
            ],
            "connections": [
              {
                "name": "c1",
                "kind": "PortConnection",
                "source": "filter_in",
                "destination": "CASE_Filter_OR.filter_in",
                "bidirectional": false
              },
              {
                "name": "c2",
                "kind": "PortConnection",
                "source": "CASE_Filter_OR.filter_out",
                "destination": "filter_out",
                "bidirectional": false
              }
            ]
          },
          {
            "name": "SW::CASE_Filter_AReq_thr",
            "localName": "CASE_Filter_AReq_thr",
            "kind": "ComponentType",
            "category": "thread",
            "features": [
              {
                "name": "filter_in",
                "kind": "EventDataPort",
                "classifier": "CMASI::AutomationRequest.i",
                "direction": "in"
              },
              {
                "name": "filter_out_UXAS",
                "kind": "EventDataPort",
                "classifier": "CMASI::AutomationRequest.i",
                "direction": "out"
              },
              {
                "name": "filter_out_MON_REQ",
                "kind": "EventDataPort",
                "classifier": "CMASI::AutomationRequest.i",
                "direction": "out"
              }
            ],
            "properties": [
              {
                "name": "CASE_Properties::Component_Type",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "EnumerationLiteral",
                  "value": "FILTER"
                }
              },
              {
                "name": "CASE_Properties::Component_Spec",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "ListValue",
                  "value": [
                    {
                      "kind": "StringLiteral",
                      "value": "Req_Filter_AReq"
                    }
                  ]
                }
              },
              {
                "name": "Thread_Properties::Dispatch_Protocol",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "EnumerationLiteral",
                  "value": "Periodic"
                }
              },
              {
                "name": "Timing_Properties::Period",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "IntegerLiteral",
                  "value": 500,
                  "unit": "ms"
                }
              },
              {
                "name": "Timing_Properties::Compute_Execution_Time",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "RangeValue",
                  "value": {
                    "min": {
                      "kind": "IntegerLiteral",
                      "value": 2,
                      "unit": "ms"
                    },
                    "max": {
                      "kind": "IntegerLiteral",
                      "value": 2,
                      "unit": "ms"
                    }
                  }
                }
              },
              {
                "name": "Memory_Properties::Stack_Size",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "PropertyConstant",
                  "value": "Stack_Size"
                }
              }
            ],
            "annexes": [
              {
                "name": "agree",
                "kind": "AnnexSubclause",
                "parsedAnnexSubclause": {
                  "statements": [
                    {
                      "kind": "GuaranteeStatement",
                      "name": "Req_Filter_AReq",
                      "label": "Well-formed Automation Request message",
                      "expr": {
                        "kind": "CallExpr",
                        "function": {
                          "kind": "DoubleDotRef",
                          "packageName": "CASEAgree",
                          "name": "WELL_FORMED_AUTOMATION_REQUEST"
                        },
                        "args": [
                          {
                            "kind": "NamedElmExpr",
                            "name": "filter_out_UXAS"
                          }
                        ]
                      }
                    }
                  ]
                },
                "sourceText": "{**\n\t\t\tguarantee Req_Filter_AReq \\\"Well-formed Automation Request message\\\" : CASEAgree::WELL_FORMED_AUTOMATION_REQUEST(filter_out_UXAS);\n\t\t**}"
              }
            ]
          },
          {
            "packageName": "SW",
            "name": "SW::CASE_Filter_AReq_thr.Impl",
            "localName": "CASE_Filter_AReq_thr.Impl",
            "kind": "ComponentImplementation",
            "category": "thread"
          },
          {
            "name": "SW::CASE_Filter_AReq",
            "localName": "CASE_Filter_AReq",
            "kind": "ComponentType",
            "category": "process",
            "features": [
              {
                "name": "filter_in",
                "kind": "EventDataPort",
                "classifier": "CMASI::AutomationRequest.i",
                "direction": "in"
              },
              {
                "name": "filter_out_UXAS",
                "kind": "EventDataPort",
                "classifier": "CMASI::AutomationRequest.i",
                "direction": "out"
              },
              {
                "name": "filter_out_MON_REQ",
                "kind": "EventDataPort",
                "classifier": "CMASI::AutomationRequest.i",
                "direction": "out"
              }
            ],
            "properties": [
              {
                "name": "CASE_Scheduling::Domain",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "IntegerLiteral",
                  "value": 6,
                  "unit": null
                }
              }
            ]
          },
          {
            "packageName": "SW",
            "name": "SW::CASE_Filter_AReq.Impl",
            "localName": "CASE_Filter_AReq.Impl",
            "kind": "ComponentImplementation",
            "category": "process",
            "subcomponents": [
              {
                "name": "CASE_Filter_AReq",
                "kind": "Subcomponent",
                "category": "thread",
                "classifier": "SW::CASE_Filter_AReq_thr.Impl"
              }
            ],
            "connections": [
              {
                "name": "c1",
                "kind": "PortConnection",
                "source": "filter_in",
                "destination": "CASE_Filter_AReq.filter_in",
                "bidirectional": false
              },
              {
                "name": "c2",
                "kind": "PortConnection",
                "source": "CASE_Filter_AReq.filter_out_UXAS",
                "destination": "filter_out_UXAS",
                "bidirectional": false
              },
              {
                "name": "c3",
                "kind": "PortConnection",
                "source": "CASE_Filter_AReq.filter_out_MON_REQ",
                "destination": "filter_out_MON_REQ",
                "bidirectional": false
              }
            ]
          },
          {
            "name": "SW::UxAS_thr",
            "localName": "UxAS_thr",
            "kind": "ComponentType",
            "category": "thread",
            "features": [
              {
                "name": "AutomationRequest",
                "kind": "EventDataPort",
                "classifier": "CMASI::AutomationRequest.i",
                "direction": "in"
              },
              {
                "name": "AirVehicleState",
                "kind": "EventDataPort",
                "classifier": "CMASI::AirVehicleState.i",
                "direction": "in"
              },
              {
                "name": "OperatingRegion",
                "kind": "EventDataPort",
                "classifier": "CMASI::OperatingRegion.i",
                "direction": "in"
              },
              {
                "name": "LineSearchTask",
                "kind": "EventDataPort",
                "classifier": "CMASI::LineSearchTask.i",
                "direction": "in"
              },
              {
                "name": "AutomationResponse",
                "kind": "EventDataPort",
                "classifier": "CMASI::AutomationResponse.i",
                "direction": "out"
              }
            ],
            "properties": [
              {
                "name": "Thread_Properties::Dispatch_Protocol",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "EnumerationLiteral",
                  "value": "Periodic"
                }
              },
              {
                "name": "Timing_Properties::Period",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "IntegerLiteral",
                  "value": 500,
                  "unit": "ms"
                }
              },
              {
                "name": "Timing_Properties::Compute_Execution_Time",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "RangeValue",
                  "value": {
                    "min": {
                      "kind": "IntegerLiteral",
                      "value": 2,
                      "unit": "ms"
                    },
                    "max": {
                      "kind": "IntegerLiteral",
                      "value": 2,
                      "unit": "ms"
                    }
                  }
                }
              },
              {
                "name": "Memory_Properties::Stack_Size",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "PropertyConstant",
                  "value": "Stack_Size"
                }
              }
            ]
          },
          {
            "packageName": "SW",
            "name": "SW::UxAS_thr.Impl",
            "localName": "UxAS_thr.Impl",
            "kind": "ComponentImplementation",
            "category": "thread"
          },
          {
            "name": "SW::UxAS",
            "localName": "UxAS",
            "kind": "ComponentType",
            "category": "process",
            "features": [
              {
                "name": "AutomationRequest",
                "kind": "EventDataPort",
                "classifier": "CMASI::AutomationRequest.i",
                "direction": "in"
              },
              {
                "name": "AirVehicleState",
                "kind": "EventDataPort",
                "classifier": "CMASI::AirVehicleState.i",
                "direction": "in"
              },
              {
                "name": "OperatingRegion",
                "kind": "EventDataPort",
                "classifier": "CMASI::OperatingRegion.i",
                "direction": "in"
              },
              {
                "name": "LineSearchTask",
                "kind": "EventDataPort",
                "classifier": "CMASI::LineSearchTask.i",
                "direction": "in"
              },
              {
                "name": "AutomationResponse",
                "kind": "EventDataPort",
                "classifier": "CMASI::AutomationResponse.i",
                "direction": "out"
              }
            ],
            "properties": [
              {
                "name": "CASE_Scheduling::Domain",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "PropertyConstant",
                  "value": "UxAS_Domain"
                }
              }
            ]
          },
          {
            "packageName": "SW",
            "name": "SW::UxAS.Impl",
            "localName": "UxAS.Impl",
            "kind": "ComponentImplementation",
            "category": "process",
            "subcomponents": [
              {
                "name": "UxAS",
                "kind": "Subcomponent",
                "category": "thread",
                "classifier": "SW::UxAS_thr.Impl"
              }
            ],
            "connections": [
              {
                "name": "c1",
                "kind": "PortConnection",
                "source": "AutomationRequest",
                "destination": "UxAS.AutomationRequest",
                "bidirectional": false
              },
              {
                "name": "c2",
                "kind": "PortConnection",
                "source": "AirVehicleState",
                "destination": "UxAS.AirVehicleState",
                "bidirectional": false
              },
              {
                "name": "c3",
                "kind": "PortConnection",
                "source": "OperatingRegion",
                "destination": "UxAS.OperatingRegion",
                "bidirectional": false
              },
              {
                "name": "c4",
                "kind": "PortConnection",
                "source": "LineSearchTask",
                "destination": "UxAS.LineSearchTask",
                "bidirectional": false
              },
              {
                "name": "c6",
                "kind": "PortConnection",
                "source": "UxAS.AutomationResponse",
                "destination": "AutomationResponse",
                "bidirectional": false
              }
            ]
          },
          {
            "name": "SW::CASE_Monitor_Req_thr",
            "localName": "CASE_Monitor_Req_thr",
            "kind": "ComponentType",
            "category": "thread",
            "features": [
              {
                "name": "observed",
                "kind": "EventDataPort",
                "classifier": "CMASI::AutomationResponse.i",
                "direction": "in"
              },
              {
                "name": "reference_1",
                "kind": "EventDataPort",
                "classifier": "CMASI::AutomationRequest.i",
                "direction": "in"
              },
              {
                "name": "alert",
                "kind": "EventDataPort",
                "classifier": "Base_Types::Boolean",
                "direction": "out"
              }
            ],
            "properties": [
              {
                "name": "CASE_Properties::Component_Type",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "EnumerationLiteral",
                  "value": "MONITOR"
                }
              },
              {
                "name": "CASE_Properties::Monitor_Latched",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "BooleanLiteral",
                  "value": false
                }
              },
              {
                "name": "CASE_Properties::Component_Spec",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "ListValue",
                  "value": [
                    {
                      "kind": "StringLiteral",
                      "value": "Req002_ReqRespMonitorEvent"
                    }
                  ]
                }
              },
              {
                "name": "Thread_Properties::Dispatch_Protocol",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "EnumerationLiteral",
                  "value": "Periodic"
                }
              },
              {
                "name": "Timing_Properties::Period",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "IntegerLiteral",
                  "value": 500,
                  "unit": "ms"
                }
              },
              {
                "name": "Timing_Properties::Compute_Execution_Time",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "RangeValue",
                  "value": {
                    "min": {
                      "kind": "IntegerLiteral",
                      "value": 2,
                      "unit": "ms"
                    },
                    "max": {
                      "kind": "IntegerLiteral",
                      "value": 2,
                      "unit": "ms"
                    }
                  }
                }
              },
              {
                "name": "Memory_Properties::Stack_Size",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "PropertyConstant",
                  "value": "Stack_Size"
                }
              }
            ],
            "annexes": [
              {
                "name": "agree",
                "kind": "AnnexSubclause",
                "parsedAnnexSubclause": {
                  "statements": [
                    {
                      "kind": "ConstStatement",
                      "name": "is_latched",
                      "type": {
                        "kind": "PrimType",
                        "primType": "bool"
                      },
                      "expr": {
                        "kind": "GetPropertyExpr",
                        "property": "Monitor_Latched",
                        "componentRef": "ThisRef"
                      }
                    },
                    {
                      "kind": "EqStatement",
                      "left": [
                        {
                          "name": "counter_increment",
                          "type": {
                            "kind": "PrimType",
                            "primType": "int"
                          }
                        }
                      ],
                      "expr": {
                        "kind": "BinaryExpr",
                        "left": {
                          "kind": "IntLitExpr",
                          "value": "0"
                        },
                        "op": "->",
                        "right": {
                          "kind": "IfThenElseExpr",
                          "if": {
                            "kind": "EventExpr",
                            "id": {
                              "kind": "NamedElmExpr",
                              "name": "observed"
                            }
                          },
                          "then": {
                            "kind": "IntLitExpr",
                            "value": "0"
                          },
                          "else": {
                            "kind": "IfThenElseExpr",
                            "if": {
                              "kind": "EventExpr",
                              "id": {
                                "kind": "NamedElmExpr",
                                "name": "reference_1"
                              }
                            },
                            "then": {
                              "kind": "IntLitExpr",
                              "value": "1"
                            },
                            "else": {
                              "kind": "PreExpr",
                              "expr": {
                                "kind": "NamedElmExpr",
                                "name": "counter_increment"
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "kind": "EqStatement",
                      "left": [
                        {
                          "name": "count",
                          "type": {
                            "kind": "PrimType",
                            "primType": "int"
                          }
                        }
                      ],
                      "expr": {
                        "kind": "BinaryExpr",
                        "left": {
                          "kind": "IntLitExpr",
                          "value": "0"
                        },
                        "op": "->",
                        "right": {
                          "kind": "IfThenElseExpr",
                          "if": {
                            "kind": "BinaryExpr",
                            "left": {
                              "kind": "EventExpr",
                              "id": {
                                "kind": "NamedElmExpr",
                                "name": "reference_1"
                              }
                            },
                            "op": "or",
                            "right": {
                              "kind": "EventExpr",
                              "id": {
                                "kind": "NamedElmExpr",
                                "name": "observed"
                              }
                            }
                          },
                          "then": {
                            "kind": "IntLitExpr",
                            "value": "0"
                          },
                          "else": {
                            "kind": "BinaryExpr",
                            "left": {
                              "kind": "PreExpr",
                              "expr": {
                                "kind": "NamedElmExpr",
                                "name": "count"
                              }
                            },
                            "op": "+",
                            "right": {
                              "kind": "NamedElmExpr",
                              "name": "counter_increment"
                            }
                          }
                        }
                      }
                    },
                    {
                      "kind": "ConstStatement",
                      "name": "nMonitorInvocations",
                      "type": {
                        "kind": "PrimType",
                        "primType": "int"
                      },
                      "expr": {
                        "kind": "IntLitExpr",
                        "value": "10"
                      }
                    },
                    {
                      "kind": "EqStatement",
                      "left": [
                        {
                          "name": "response_received_in_time",
                          "type": {
                            "kind": "PrimType",
                            "primType": "bool"
                          }
                        }
                      ],
                      "expr": {
                        "kind": "BinaryExpr",
                        "left": {
                          "kind": "NamedElmExpr",
                          "name": "count"
                        },
                        "op": "<",
                        "right": {
                          "kind": "NamedElmExpr",
                          "name": "nMonitorInvocations"
                        }
                      }
                    },
                    {
                      "kind": "PropertyStatement",
                      "name": "CASE_Monitor_Req_Resp_policy",
                      "expr": {
                        "kind": "CallExpr",
                        "function": {
                          "kind": "DoubleDotRef",
                          "packageName": "AGREE_PLTL",
                          "name": "Historically"
                        },
                        "args": [
                          {
                            "kind": "NamedElmExpr",
                            "name": "response_received_in_time"
                          }
                        ]
                      }
                    },
                    {
                      "kind": "GuaranteeStatement",
                      "name": "Req002_ReqRespMonitorEvent",
                      "label": "The monitor shall only output an alert when the monitor policy is false",
                      "expr": {
                        "kind": "BinaryExpr",
                        "left": {
                          "kind": "BinaryExpr",
                          "left": {
                            "kind": "NamedElmExpr",
                            "name": "alert"
                          },
                          "op": "<=>",
                          "right": {
                            "kind": "BoolLitExpr",
                            "value": "false"
                          }
                        },
                        "op": "->",
                        "right": {
                          "kind": "BinaryExpr",
                          "left": {
                            "kind": "BinaryExpr",
                            "left": {
                              "kind": "NamedElmExpr",
                              "name": "is_latched"
                            },
                            "op": "and",
                            "right": {
                              "kind": "PreExpr",
                              "expr": {
                                "kind": "EventExpr",
                                "id": {
                                  "kind": "NamedElmExpr",
                                  "name": "alert"
                                }
                              }
                            }
                          },
                          "op": "or",
                          "right": {
                            "kind": "UnaryExpr",
                            "operand": {
                              "kind": "NamedElmExpr",
                              "name": "CASE_Monitor_Req_Resp_policy"
                            },
                            "op": "not"
                          }
                        }
                      }
                    }
                  ]
                },
                "sourceText": "{**\n\n\t\t\t-- a constant generated from the component property above, handy for expressing the monitor guarantee\n\t\t\tconst is_latched : bool = Get_Property(this, CASE_Properties::Monitor_Latched);\n\n\t\t\t-- Monitor policy (models the expected behavior in terms of the input ports)\n\t\t\t-- AutomationResponse (observed) occurs within two scheduling cycles after AutomationRequest (reference_1)\n--\t\t\teq empty_day : bool = not event(observed) and not event(reference_1);\n--\t\t\tproperty CASE_Monitor_Req_Resp_policy = Historically(event(reference_1) or (empty_day and Yesterday(event(reference_1) or (empty_day and Yesterday(event(reference_1))))) => event(observed));\n            eq counter_increment : int = 0 ->\n              if (event(observed))\n                then 0\n                else if (event(reference_1))\n                  then 1\n                  else pre(counter_increment);\n            eq count : int = 0 ->\n              if (event(reference_1) or event(observed))\n                then 0\n                else pre(count) + counter_increment;\n            const nMonitorInvocations : int = 10; -- user-defined value for \\\"days\\\"\n            eq response_received_in_time : bool = count < nMonitorInvocations;\n            property CASE_Monitor_Req_Resp_policy = Historically(response_received_in_time);\n\n\t\t\t-- Monitor guarantee (guarantees on the output ports in terms of the input ports and monitor policy)\n\t\t\tguarantee Req002_ReqRespMonitorEvent \\\"The monitor shall only output an alert when the monitor policy is false\\\" :\n\t\t\t\talert <=> false -> (is_latched and pre(event(alert))) or not CASE_Monitor_Req_Resp_policy;\n\t\t**}"
              }
            ]
          },
          {
            "packageName": "SW",
            "name": "SW::CASE_Monitor_Req_thr.Impl",
            "localName": "CASE_Monitor_Req_thr.Impl",
            "kind": "ComponentImplementation",
            "category": "thread"
          },
          {
            "name": "SW::CASE_Monitor_Req",
            "localName": "CASE_Monitor_Req",
            "kind": "ComponentType",
            "category": "process",
            "features": [
              {
                "name": "observed",
                "kind": "EventDataPort",
                "classifier": "CMASI::AutomationResponse.i",
                "direction": "in"
              },
              {
                "name": "reference_1",
                "kind": "EventDataPort",
                "classifier": "CMASI::AutomationRequest.i",
                "direction": "in"
              },
              {
                "name": "alert",
                "kind": "EventDataPort",
                "classifier": "Base_Types::Boolean",
                "direction": "out"
              }
            ],
            "properties": [
              {
                "name": "CASE_Scheduling::Domain",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "PropertyConstant",
                  "value": "CASE_Monitor_Req_Domain"
                }
              }
            ]
          },
          {
            "packageName": "SW",
            "name": "SW::CASE_Monitor_Req.Impl",
            "localName": "CASE_Monitor_Req.Impl",
            "kind": "ComponentImplementation",
            "category": "process",
            "subcomponents": [
              {
                "name": "CASE_Monitor_Req",
                "kind": "Subcomponent",
                "category": "thread",
                "classifier": "SW::CASE_Monitor_Req_thr.Impl"
              }
            ],
            "connections": [
              {
                "name": "c1",
                "kind": "PortConnection",
                "source": "observed",
                "destination": "CASE_Monitor_Req.observed",
                "bidirectional": false
              },
              {
                "name": "c2",
                "kind": "PortConnection",
                "source": "reference_1",
                "destination": "CASE_Monitor_Req.reference_1",
                "bidirectional": false
              },
              {
                "name": "c3",
                "kind": "PortConnection",
                "source": "CASE_Monitor_Req.alert",
                "destination": "alert",
                "bidirectional": false
              }
            ]
          },
          {
            "name": "SW::CASE_Filter_ARes_thr",
            "localName": "CASE_Filter_ARes_thr",
            "kind": "ComponentType",
            "category": "thread",
            "features": [
              {
                "name": "filter_in",
                "kind": "EventDataPort",
                "classifier": "CMASI::AutomationResponse.i",
                "direction": "in"
              },
              {
                "name": "filter_out",
                "kind": "EventDataPort",
                "classifier": "CMASI::AutomationResponse.i",
                "direction": "out"
              }
            ],
            "properties": [
              {
                "name": "CASE_Properties::Component_Type",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "EnumerationLiteral",
                  "value": "FILTER"
                }
              },
              {
                "name": "CASE_Properties::Component_Spec",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "ListValue",
                  "value": [
                    {
                      "kind": "StringLiteral",
                      "value": "Req_Filter_ARes"
                    }
                  ]
                }
              },
              {
                "name": "Thread_Properties::Dispatch_Protocol",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "EnumerationLiteral",
                  "value": "Periodic"
                }
              },
              {
                "name": "Timing_Properties::Period",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "IntegerLiteral",
                  "value": 500,
                  "unit": "ms"
                }
              },
              {
                "name": "Timing_Properties::Compute_Execution_Time",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "RangeValue",
                  "value": {
                    "min": {
                      "kind": "IntegerLiteral",
                      "value": 2,
                      "unit": "ms"
                    },
                    "max": {
                      "kind": "IntegerLiteral",
                      "value": 2,
                      "unit": "ms"
                    }
                  }
                }
              },
              {
                "name": "Memory_Properties::Stack_Size",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "PropertyConstant",
                  "value": "Stack_Size"
                }
              }
            ],
            "annexes": [
              {
                "name": "agree",
                "kind": "AnnexSubclause",
                "parsedAnnexSubclause": {
                  "statements": [
                    {
                      "kind": "GuaranteeStatement",
                      "name": "Req_Filter_ARes",
                      "label": "Well-formed Automation Response message",
                      "expr": {
                        "kind": "CallExpr",
                        "function": {
                          "kind": "DoubleDotRef",
                          "packageName": "CASEAgree",
                          "name": "WELL_FORMED_AUTOMATION_RESPONSE"
                        },
                        "args": [
                          {
                            "kind": "NamedElmExpr",
                            "name": "filter_out"
                          }
                        ]
                      }
                    }
                  ]
                },
                "sourceText": "{**\n\t\t\tguarantee Req_Filter_ARes \\\"Well-formed Automation Response message\\\" : CASEAgree::WELL_FORMED_AUTOMATION_RESPONSE(filter_out);\n\t\t**}"
              }
            ]
          },
          {
            "packageName": "SW",
            "name": "SW::CASE_Filter_ARes_thr.Impl",
            "localName": "CASE_Filter_ARes_thr.Impl",
            "kind": "ComponentImplementation",
            "category": "thread",
            "properties": [
              {
                "name": "Thread_Properties::Dispatch_Protocol",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "EnumerationLiteral",
                  "value": "Periodic"
                }
              }
            ]
          },
          {
            "name": "SW::CASE_Filter_ARes",
            "localName": "CASE_Filter_ARes",
            "kind": "ComponentType",
            "category": "process",
            "features": [
              {
                "name": "filter_in",
                "kind": "EventDataPort",
                "classifier": "CMASI::AutomationResponse.i",
                "direction": "in"
              },
              {
                "name": "filter_out",
                "kind": "EventDataPort",
                "classifier": "CMASI::AutomationResponse.i",
                "direction": "out"
              }
            ],
            "properties": [
              {
                "name": "CASE_Scheduling::Domain",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "PropertyConstant",
                  "value": "CASE_Filter_ARes_Domain"
                }
              }
            ]
          },
          {
            "packageName": "SW",
            "name": "SW::CASE_Filter_ARes.Impl",
            "localName": "CASE_Filter_ARes.Impl",
            "kind": "ComponentImplementation",
            "category": "process",
            "subcomponents": [
              {
                "name": "CASE_Filter_ARes",
                "kind": "Subcomponent",
                "category": "thread",
                "classifier": "SW::CASE_Filter_ARes_thr.Impl"
              }
            ],
            "connections": [
              {
                "name": "c1",
                "kind": "PortConnection",
                "source": "filter_in",
                "destination": "CASE_Filter_ARes.filter_in",
                "bidirectional": false
              },
              {
                "name": "c2",
                "kind": "PortConnection",
                "source": "CASE_Filter_ARes.filter_out",
                "destination": "filter_out",
                "bidirectional": false
              }
            ]
          },
          {
            "name": "SW::FlyZonesDatabase_thr",
            "localName": "FlyZonesDatabase_thr",
            "kind": "ComponentType",
            "category": "thread",
            "features": [
              {
                "name": "keep_in_zones",
                "kind": "DataPort",
                "classifier": "CMASI::Polygon.i",
                "direction": "out"
              },
              {
                "name": "keep_out_zones",
                "kind": "DataPort",
                "classifier": "CMASI::Polygon.i",
                "direction": "out"
              }
            ],
            "properties": [
              {
                "name": "Thread_Properties::Dispatch_Protocol",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "EnumerationLiteral",
                  "value": "Periodic"
                }
              },
              {
                "name": "Timing_Properties::Period",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "IntegerLiteral",
                  "value": 500,
                  "unit": "ms"
                }
              },
              {
                "name": "Timing_Properties::Compute_Execution_Time",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "RangeValue",
                  "value": {
                    "min": {
                      "kind": "IntegerLiteral",
                      "value": 2,
                      "unit": "ms"
                    },
                    "max": {
                      "kind": "IntegerLiteral",
                      "value": 2,
                      "unit": "ms"
                    }
                  }
                }
              },
              {
                "name": "Memory_Properties::Stack_Size",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "PropertyConstant",
                  "value": "Stack_Size"
                }
              }
            ],
            "annexes": [
              {
                "name": "agree",
                "kind": "AnnexSubclause",
                "parsedAnnexSubclause": {
                  "statements": [
                    {
                      "kind": "GuaranteeStatement",
                      "label": "Keep in zones do not change",
                      "expr": {
                        "kind": "BinaryExpr",
                        "left": {
                          "kind": "BoolLitExpr",
                          "value": "true"
                        },
                        "op": "->",
                        "right": {
                          "kind": "BinaryExpr",
                          "left": {
                            "kind": "NamedElmExpr",
                            "name": "keep_in_zones"
                          },
                          "op": "=",
                          "right": {
                            "kind": "PreExpr",
                            "expr": {
                              "kind": "NamedElmExpr",
                              "name": "keep_in_zones"
                            }
                          }
                        }
                      }
                    },
                    {
                      "kind": "GuaranteeStatement",
                      "label": "Keep out zones do not change",
                      "expr": {
                        "kind": "BinaryExpr",
                        "left": {
                          "kind": "BoolLitExpr",
                          "value": "true"
                        },
                        "op": "->",
                        "right": {
                          "kind": "BinaryExpr",
                          "left": {
                            "kind": "NamedElmExpr",
                            "name": "keep_out_zones"
                          },
                          "op": "=",
                          "right": {
                            "kind": "PreExpr",
                            "expr": {
                              "kind": "NamedElmExpr",
                              "name": "keep_out_zones"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "sourceText": "{**\n\t\tguarantee \\\"Keep in zones do not change\\\" : true -> keep_in_zones = pre(keep_in_zones);\n\t\tguarantee \\\"Keep out zones do not change\\\" : true -> keep_out_zones = pre(keep_out_zones);\n\t**}"
              }
            ]
          },
          {
            "packageName": "SW",
            "name": "SW::FlyZonesDatabase_thr.Impl",
            "localName": "FlyZonesDatabase_thr.Impl",
            "kind": "ComponentImplementation",
            "category": "thread"
          },
          {
            "name": "SW::FlyZonesDatabase",
            "localName": "FlyZonesDatabase",
            "kind": "ComponentType",
            "category": "process",
            "features": [
              {
                "name": "keep_in_zones",
                "kind": "DataPort",
                "classifier": "CMASI::Polygon.i",
                "direction": "out"
              },
              {
                "name": "keep_out_zones",
                "kind": "DataPort",
                "classifier": "CMASI::Polygon.i",
                "direction": "out"
              }
            ],
            "properties": [
              {
                "name": "CASE_Scheduling::Domain",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "PropertyConstant",
                  "value": "FlyZonesDatabase_Domain"
                }
              }
            ]
          },
          {
            "packageName": "SW",
            "name": "SW::FlyZonesDatabase.Impl",
            "localName": "FlyZonesDatabase.Impl",
            "kind": "ComponentImplementation",
            "category": "process",
            "subcomponents": [
              {
                "name": "FlyZonesDatabase",
                "kind": "Subcomponent",
                "category": "thread",
                "classifier": "SW::FlyZonesDatabase_thr.Impl"
              }
            ],
            "connections": [
              {
                "name": "c1",
                "kind": "PortConnection",
                "source": "FlyZonesDatabase.keep_in_zones",
                "destination": "keep_in_zones",
                "bidirectional": false
              },
              {
                "name": "c2",
                "kind": "PortConnection",
                "source": "FlyZonesDatabase.keep_out_zones",
                "destination": "keep_out_zones",
                "bidirectional": false
              }
            ]
          },
          {
            "name": "SW::CASE_Monitor_Geo_thr",
            "localName": "CASE_Monitor_Geo_thr",
            "kind": "ComponentType",
            "category": "thread",
            "features": [
              {
                "name": "keep_in_zones",
                "kind": "DataPort",
                "classifier": "CMASI::Polygon.i",
                "direction": "in"
              },
              {
                "name": "keep_out_zones",
                "kind": "DataPort",
                "classifier": "CMASI::Polygon.i",
                "direction": "in"
              },
              {
                "name": "observed",
                "kind": "EventDataPort",
                "classifier": "CMASI::AutomationResponse.i",
                "direction": "in"
              },
              {
                "name": "output",
                "kind": "EventDataPort",
                "classifier": "CMASI::AutomationResponse.i",
                "direction": "out"
              },
              {
                "name": "alert",
                "kind": "EventPort",
                "classifier": null,
                "direction": "out"
              }
            ],
            "properties": [
              {
                "name": "CASE_Properties::Component_Type",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "EnumerationLiteral",
                  "value": "MONITOR"
                }
              },
              {
                "name": "CASE_Properties::Component_Spec",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "ListValue",
                  "value": [
                    {
                      "kind": "StringLiteral",
                      "value": "GeofenceMonitor_alert_event"
                    },
                    {
                      "kind": "StringLiteral",
                      "value": "GeofenceMonitor_output_event"
                    },
                    {
                      "kind": "StringLiteral",
                      "value": "GeofenceMonitor_output_data"
                    }
                  ]
                }
              },
              {
                "name": "CASE_Properties::Monitor_Latched",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "BooleanLiteral",
                  "value": true
                }
              },
              {
                "name": "Thread_Properties::Dispatch_Protocol",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "EnumerationLiteral",
                  "value": "Periodic"
                }
              },
              {
                "name": "Timing_Properties::Period",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "IntegerLiteral",
                  "value": 500,
                  "unit": "ms"
                }
              },
              {
                "name": "Timing_Properties::Compute_Execution_Time",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "RangeValue",
                  "value": {
                    "min": {
                      "kind": "IntegerLiteral",
                      "value": 2,
                      "unit": "ms"
                    },
                    "max": {
                      "kind": "IntegerLiteral",
                      "value": 2,
                      "unit": "ms"
                    }
                  }
                }
              },
              {
                "name": "Memory_Properties::Stack_Size",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "PropertyConstant",
                  "value": "Stack_Size"
                }
              }
            ],
            "annexes": [
              {
                "name": "agree",
                "kind": "AnnexSubclause",
                "parsedAnnexSubclause": {
                  "statements": [
                    {
                      "kind": "ConstStatement",
                      "name": "is_latched",
                      "type": {
                        "kind": "PrimType",
                        "primType": "bool"
                      },
                      "expr": {
                        "kind": "GetPropertyExpr",
                        "property": "Monitor_Latched",
                        "componentRef": "ThisRef"
                      }
                    },
                    {
                      "kind": "PropertyStatement",
                      "name": "CASE_Monitor_Coord_policy",
                      "expr": {
                        "kind": "CallExpr",
                        "function": {
                          "kind": "DoubleDotRef",
                          "packageName": "AGREE_PLTL",
                          "name": "Historically"
                        },
                        "args": [
                          {
                            "kind": "BinaryExpr",
                            "left": {
                              "kind": "EventExpr",
                              "id": {
                                "kind": "NamedElmExpr",
                                "name": "observed"
                              }
                            },
                            "op": "=>",
                            "right": {
                              "kind": "BinaryExpr",
                              "left": {
                                "kind": "BinaryExpr",
                                "left": {
                                  "kind": "CallExpr",
                                  "function": {
                                    "kind": "DoubleDotRef",
                                    "packageName": "CASEAgree",
                                    "name": "WAYPOINTS_IN_ZONE"
                                  },
                                  "args": [
                                    {
                                      "kind": "CallExpr",
                                      "function": {
                                        "kind": "DoubleDotRef",
                                        "packageName": "CASEAgree",
                                        "name": "GET_MISSION_COMMAND"
                                      },
                                      "args": [
                                        {
                                          "kind": "NamedElmExpr",
                                          "name": "observed"
                                        }
                                      ]
                                    },
                                    {
                                      "kind": "NamedElmExpr",
                                      "name": "keep_in_zones"
                                    }
                                  ]
                                },
                                "op": "and",
                                "right": {
                                  "kind": "CallExpr",
                                  "function": {
                                    "kind": "DoubleDotRef",
                                    "packageName": "CASEAgree",
                                    "name": "WAYPOINTS_NOT_IN_ZONE"
                                  },
                                  "args": [
                                    {
                                      "kind": "CallExpr",
                                      "function": {
                                        "kind": "DoubleDotRef",
                                        "packageName": "CASEAgree",
                                        "name": "GET_MISSION_COMMAND"
                                      },
                                      "args": [
                                        {
                                          "kind": "NamedElmExpr",
                                          "name": "observed"
                                        }
                                      ]
                                    },
                                    {
                                      "kind": "NamedElmExpr",
                                      "name": "keep_out_zones"
                                    }
                                  ]
                                }
                              },
                              "op": "and",
                              "right": {
                                "kind": "UnaryExpr",
                                "operand": {
                                  "kind": "CallExpr",
                                  "function": {
                                    "kind": "DoubleDotRef",
                                    "packageName": "CASEAgree",
                                    "name": "DUPLICATES_IN_MISSION"
                                  },
                                  "args": [
                                    {
                                      "kind": "CallExpr",
                                      "function": {
                                        "kind": "DoubleDotRef",
                                        "packageName": "CASEAgree",
                                        "name": "GET_MISSION_COMMAND"
                                      },
                                      "args": [
                                        {
                                          "kind": "NamedElmExpr",
                                          "name": "observed"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                "op": "not"
                              }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "kind": "GuaranteeStatement",
                      "name": "GeofenceMonitor_alert_event",
                      "label": "An alert is generated only when observed is invalid",
                      "expr": {
                        "kind": "BinaryExpr",
                        "left": {
                          "kind": "BinaryExpr",
                          "left": {
                            "kind": "EventExpr",
                            "id": {
                              "kind": "NamedElmExpr",
                              "name": "alert"
                            }
                          },
                          "op": "<=>",
                          "right": {
                            "kind": "BoolLitExpr",
                            "value": "false"
                          }
                        },
                        "op": "->",
                        "right": {
                          "kind": "BinaryExpr",
                          "left": {
                            "kind": "BinaryExpr",
                            "left": {
                              "kind": "NamedElmExpr",
                              "name": "is_latched"
                            },
                            "op": "and",
                            "right": {
                              "kind": "PreExpr",
                              "expr": {
                                "kind": "EventExpr",
                                "id": {
                                  "kind": "NamedElmExpr",
                                  "name": "alert"
                                }
                              }
                            }
                          },
                          "op": "or",
                          "right": {
                            "kind": "UnaryExpr",
                            "operand": {
                              "kind": "NamedElmExpr",
                              "name": "CASE_Monitor_Coord_policy"
                            },
                            "op": "not"
                          }
                        }
                      }
                    },
                    {
                      "kind": "GuaranteeStatement",
                      "name": "GeofenceMonitor_output_event",
                      "label": "The output event fires only when observed is valid",
                      "expr": {
                        "kind": "BinaryExpr",
                        "left": {
                          "kind": "EventExpr",
                          "id": {
                            "kind": "NamedElmExpr",
                            "name": "output"
                          }
                        },
                        "op": "<=>",
                        "right": {
                          "kind": "BinaryExpr",
                          "left": {
                            "kind": "EventExpr",
                            "id": {
                              "kind": "NamedElmExpr",
                              "name": "observed"
                            }
                          },
                          "op": "and",
                          "right": {
                            "kind": "UnaryExpr",
                            "operand": {
                              "kind": "EventExpr",
                              "id": {
                                "kind": "NamedElmExpr",
                                "name": "alert"
                              }
                            },
                            "op": "not"
                          }
                        }
                      }
                    },
                    {
                      "kind": "GuaranteeStatement",
                      "name": "GeofenceMonitor_output_data",
                      "label": "Output is equal to observed when observed is valid",
                      "expr": {
                        "kind": "BinaryExpr",
                        "left": {
                          "kind": "BinaryExpr",
                          "left": {
                            "kind": "EventExpr",
                            "id": {
                              "kind": "NamedElmExpr",
                              "name": "observed"
                            }
                          },
                          "op": "and",
                          "right": {
                            "kind": "UnaryExpr",
                            "operand": {
                              "kind": "EventExpr",
                              "id": {
                                "kind": "NamedElmExpr",
                                "name": "alert"
                              }
                            },
                            "op": "not"
                          }
                        },
                        "op": "=>",
                        "right": {
                          "kind": "BinaryExpr",
                          "left": {
                            "kind": "NamedElmExpr",
                            "name": "output"
                          },
                          "op": "=",
                          "right": {
                            "kind": "NamedElmExpr",
                            "name": "observed"
                          }
                        }
                      }
                    }
                  ]
                },
                "sourceText": "{**\n\t\t\t-- a constant generated from the component property above, handy for expressing the monitor guarantee\n\t\t\tconst is_latched : bool = Get_Property(this, CASE_Properties::Monitor_Latched);\n\n\t\t\t-- Monitor policy (models the expected behavior in terms of the input ports)\n\t\t\tproperty CASE_Monitor_Coord_policy =\n\t\t\t\tHistorically(event(observed) =>\n\t\t\t\t\t(CASEAgree::WAYPOINTS_IN_ZONE(CASEAgree::GET_MISSION_COMMAND(observed), keep_in_zones) and \n\t\t            CASEAgree::WAYPOINTS_NOT_IN_ZONE(CASEAgree::GET_MISSION_COMMAND(observed), keep_out_zones)\n\t\t\t\t\tand not CASEAgree::DUPLICATES_IN_MISSION(CASEAgree::GET_MISSION_COMMAND(observed))));\n\n\t\t\t-- Monitor guarantee (guarantees on the output ports in terms of the input ports and monitor policy)\n\t\t\tguarantee GeofenceMonitor_alert_event \\\"An alert is generated only when observed is invalid\\\" :\n\t\t\t\tevent(alert) <=> false -> (is_latched and pre(event(alert))) or not CASE_Monitor_Coord_policy;\n\t\t\tguarantee GeofenceMonitor_output_event \\\"The output event fires only when observed is valid\\\" :\n\t\t\t\tevent(output) <=> event(observed) and not event(alert);\n\t\t\tguarantee GeofenceMonitor_output_data \\\"Output is equal to observed when observed is valid\\\" :\n\t\t\t\tevent(observed) and not event(alert) => output = observed;\n\t\t**}"
              }
            ]
          },
          {
            "packageName": "SW",
            "name": "SW::CASE_Monitor_Geo_thr.Impl",
            "localName": "CASE_Monitor_Geo_thr.Impl",
            "kind": "ComponentImplementation",
            "category": "thread"
          },
          {
            "name": "SW::CASE_Monitor_Geo",
            "localName": "CASE_Monitor_Geo",
            "kind": "ComponentType",
            "category": "process",
            "features": [
              {
                "name": "keep_in_zones",
                "kind": "DataPort",
                "classifier": "CMASI::Polygon.i",
                "direction": "in"
              },
              {
                "name": "keep_out_zones",
                "kind": "DataPort",
                "classifier": "CMASI::Polygon.i",
                "direction": "in"
              },
              {
                "name": "observed",
                "kind": "EventDataPort",
                "classifier": "CMASI::AutomationResponse.i",
                "direction": "in"
              },
              {
                "name": "output",
                "kind": "EventDataPort",
                "classifier": "CMASI::AutomationResponse.i",
                "direction": "out"
              },
              {
                "name": "alert",
                "kind": "EventPort",
                "classifier": null,
                "direction": "out"
              }
            ],
            "properties": [
              {
                "name": "CASE_Scheduling::Domain",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "PropertyConstant",
                  "value": "CASE_Monitor_Geo_Domain"
                }
              }
            ],
            "annexes": [
              {
                "name": "agree",
                "kind": "AnnexSubclause",
                "parsedAnnexSubclause": {
                  "statements": [
                    {
                      "kind": "GuaranteeStatement",
                      "name": "Req001a_GeoMon",
                      "label": "Once the WPM receives a return home message, it does not receive further AutomationResponse messages",
                      "expr": {
                        "kind": "CallExpr",
                        "function": {
                          "kind": "DoubleDotRef",
                          "packageName": "AGREE_PLTL",
                          "name": "Historically"
                        },
                        "args": [
                          {
                            "kind": "CallExpr",
                            "function": {
                              "kind": "DoubleDotRef",
                              "packageName": "AGREE_PLTL",
                              "name": "Since"
                            },
                            "args": [
                              {
                                "kind": "UnaryExpr",
                                "operand": {
                                  "kind": "EventExpr",
                                  "id": {
                                    "kind": "NamedElmExpr",
                                    "name": "output"
                                  }
                                },
                                "op": "not"
                              },
                              {
                                "kind": "EventExpr",
                                "id": {
                                  "kind": "NamedElmExpr",
                                  "name": "alert"
                                }
                              }
                            ]
                          }
                        ]
                      }
                    },
                    {
                      "kind": "GuaranteeStatement",
                      "name": "Req002_GeoMon",
                      "label": "The set of waypoints received will not have duplicates in them",
                      "expr": {
                        "kind": "BinaryExpr",
                        "left": {
                          "kind": "EventExpr",
                          "id": {
                            "kind": "NamedElmExpr",
                            "name": "output"
                          }
                        },
                        "op": "=>",
                        "right": {
                          "kind": "UnaryExpr",
                          "operand": {
                            "kind": "CallExpr",
                            "function": {
                              "kind": "DoubleDotRef",
                              "packageName": "CASEAgree",
                              "name": "DUPLICATES_IN_MISSION"
                            },
                            "args": [
                              {
                                "kind": "CallExpr",
                                "function": {
                                  "kind": "DoubleDotRef",
                                  "packageName": "CASEAgree",
                                  "name": "GET_MISSION_COMMAND"
                                },
                                "args": [
                                  {
                                    "kind": "NamedElmExpr",
                                    "name": "output"
                                  }
                                ]
                              }
                            ]
                          },
                          "op": "not"
                        }
                      }
                    }
                  ]
                },
                "sourceText": "{**\n\t\t\tguarantee Req001a_GeoMon \\\"Once the WPM receives a return home message, it does not receive further AutomationResponse messages\\\" :\n\t\t\t\tHistorically(Since(not event(output), event(alert)));\n\t\t\tguarantee Req002_GeoMon \\\"The set of waypoints received will not have duplicates in them\\\" :\n\t\t\t\tevent(output) => not CASEAgree::DUPLICATES_IN_MISSION(CASEAgree::GET_MISSION_COMMAND(output));\n\t\t**}"
              }
            ]
          },
          {
            "packageName": "SW",
            "name": "SW::CASE_Monitor_Geo.Impl",
            "localName": "CASE_Monitor_Geo.Impl",
            "kind": "ComponentImplementation",
            "category": "process",
            "subcomponents": [
              {
                "name": "CASE_Monitor_Geo",
                "kind": "Subcomponent",
                "category": "thread",
                "classifier": "SW::CASE_Monitor_Geo_thr.Impl"
              }
            ],
            "connections": [
              {
                "name": "c1",
                "kind": "PortConnection",
                "source": "keep_in_zones",
                "destination": "CASE_Monitor_Geo.keep_in_zones",
                "bidirectional": false
              },
              {
                "name": "c2",
                "kind": "PortConnection",
                "source": "keep_out_zones",
                "destination": "CASE_Monitor_Geo.keep_out_zones",
                "bidirectional": false
              },
              {
                "name": "c3",
                "kind": "PortConnection",
                "source": "CASE_Monitor_Geo.alert",
                "destination": "alert",
                "bidirectional": false
              },
              {
                "name": "c4",
                "kind": "PortConnection",
                "source": "observed",
                "destination": "CASE_Monitor_Geo.observed",
                "bidirectional": false
              },
              {
                "name": "c5",
                "kind": "PortConnection",
                "source": "CASE_Monitor_Geo.output",
                "destination": "output",
                "bidirectional": false
              }
            ]
          },
          {
            "name": "SW::WaypointPlanManagerService_thr",
            "localName": "WaypointPlanManagerService_thr",
            "kind": "ComponentType",
            "category": "thread",
            "features": [
              {
                "name": "AutomationResponse",
                "kind": "EventDataPort",
                "classifier": "CMASI::AutomationResponse.i",
                "direction": "in"
              },
              {
                "name": "AirVehicleState",
                "kind": "EventDataPort",
                "classifier": "CMASI::AirVehicleState.i",
                "direction": "in"
              },
              {
                "name": "MissionCommand",
                "kind": "EventDataPort",
                "classifier": "CMASI::MissionCommand.i",
                "direction": "out"
              },
              {
                "name": "ReturnHome",
                "kind": "EventPort",
                "classifier": null,
                "direction": "in"
              }
            ],
            "properties": [
              {
                "name": "Thread_Properties::Dispatch_Protocol",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "EnumerationLiteral",
                  "value": "Periodic"
                }
              },
              {
                "name": "Timing_Properties::Period",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "IntegerLiteral",
                  "value": 500,
                  "unit": "ms"
                }
              },
              {
                "name": "Timing_Properties::Compute_Execution_Time",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "RangeValue",
                  "value": {
                    "min": {
                      "kind": "IntegerLiteral",
                      "value": 2,
                      "unit": "ms"
                    },
                    "max": {
                      "kind": "IntegerLiteral",
                      "value": 2,
                      "unit": "ms"
                    }
                  }
                }
              },
              {
                "name": "Memory_Properties::Stack_Size",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "PropertyConstant",
                  "value": "Stack_Size"
                }
              }
            ]
          },
          {
            "packageName": "SW",
            "name": "SW::WaypointPlanManagerService_thr.Impl",
            "localName": "WaypointPlanManagerService_thr.Impl",
            "kind": "ComponentImplementation",
            "category": "thread"
          },
          {
            "name": "SW::WaypointPlanManagerService",
            "localName": "WaypointPlanManagerService",
            "kind": "ComponentType",
            "category": "process",
            "features": [
              {
                "name": "AutomationResponse",
                "kind": "EventDataPort",
                "classifier": "CMASI::AutomationResponse.i",
                "direction": "in"
              },
              {
                "name": "AirVehicleState",
                "kind": "EventDataPort",
                "classifier": "CMASI::AirVehicleState.i",
                "direction": "in"
              },
              {
                "name": "MissionCommand",
                "kind": "EventDataPort",
                "classifier": "CMASI::MissionCommand.i",
                "direction": "out"
              },
              {
                "name": "ReturnHome",
                "kind": "EventPort",
                "classifier": null,
                "direction": "in"
              }
            ],
            "properties": [
              {
                "name": "CASE_Scheduling::Domain",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "PropertyConstant",
                  "value": "WaypointPlanManangerService_Domain"
                }
              }
            ],
            "annexes": [
              {
                "name": "agree",
                "kind": "AnnexSubclause",
                "parsedAnnexSubclause": {
                  "statements": [
                    {
                      "kind": "AssumeStatement",
                      "name": "Req001a_WPM",
                      "label": "Once the WPM receives a return home message, it does not receive further AutomationResponse messages",
                      "expr": {
                        "kind": "CallExpr",
                        "function": {
                          "kind": "DoubleDotRef",
                          "packageName": "AGREE_PLTL",
                          "name": "Historically"
                        },
                        "args": [
                          {
                            "kind": "CallExpr",
                            "function": {
                              "kind": "DoubleDotRef",
                              "packageName": "AGREE_PLTL",
                              "name": "Since"
                            },
                            "args": [
                              {
                                "kind": "UnaryExpr",
                                "operand": {
                                  "kind": "EventExpr",
                                  "id": {
                                    "kind": "NamedElmExpr",
                                    "name": "AutomationResponse"
                                  }
                                },
                                "op": "not"
                              },
                              {
                                "kind": "EventExpr",
                                "id": {
                                  "kind": "NamedElmExpr",
                                  "name": "ReturnHome"
                                }
                              }
                            ]
                          }
                        ]
                      }
                    },
                    {
                      "kind": "AssumeStatement",
                      "name": "Req002_WPM",
                      "label": "The set of waypoints received will not have duplicates in them",
                      "expr": {
                        "kind": "BinaryExpr",
                        "left": {
                          "kind": "EventExpr",
                          "id": {
                            "kind": "NamedElmExpr",
                            "name": "AutomationResponse"
                          }
                        },
                        "op": "=>",
                        "right": {
                          "kind": "UnaryExpr",
                          "operand": {
                            "kind": "CallExpr",
                            "function": {
                              "kind": "DoubleDotRef",
                              "packageName": "CASEAgree",
                              "name": "DUPLICATES_IN_MISSION"
                            },
                            "args": [
                              {
                                "kind": "CallExpr",
                                "function": {
                                  "kind": "DoubleDotRef",
                                  "packageName": "CASEAgree",
                                  "name": "GET_MISSION_COMMAND"
                                },
                                "args": [
                                  {
                                    "kind": "NamedElmExpr",
                                    "name": "AutomationResponse"
                                  }
                                ]
                              }
                            ]
                          },
                          "op": "not"
                        }
                      }
                    }
                  ]
                },
                "sourceText": "{**\n--\t\t\tassume Req001_UARTDriver \\\"Assumes recv_data only gets well formed CASE_UART_Msg.Impl types\\\" :\n--\t\t\t\tevent(recv_data) => CASEAgree::WellformedCASE_UART_Msg(recv_data);\n\t\t\tassume Req001a_WPM \\\"Once the WPM receives a return home message, it does not receive further AutomationResponse messages\\\" :\n\t\t\t\tHistorically(Since(not event(AutomationResponse), event(ReturnHome)));\n\t\t\tassume Req002_WPM \\\"The set of waypoints received will not have duplicates in them\\\" :\n\t\t\t\tevent(AutomationResponse) => not CASEAgree::DUPLICATES_IN_MISSION(CASEAgree::GET_MISSION_COMMAND(AutomationResponse));\n\t\t**}"
              }
            ]
          },
          {
            "packageName": "SW",
            "name": "SW::WaypointPlanManagerService.Impl",
            "localName": "WaypointPlanManagerService.Impl",
            "kind": "ComponentImplementation",
            "category": "process",
            "subcomponents": [
              {
                "name": "WaypointPlanManagerService",
                "kind": "Subcomponent",
                "category": "thread",
                "classifier": "SW::WaypointPlanManagerService_thr.Impl"
              }
            ],
            "connections": [
              {
                "name": "c1",
                "kind": "PortConnection",
                "source": "AutomationResponse",
                "destination": "WaypointPlanManagerService.AutomationResponse",
                "bidirectional": false
              },
              {
                "name": "c2",
                "kind": "PortConnection",
                "source": "AirVehicleState",
                "destination": "WaypointPlanManagerService.AirVehicleState",
                "bidirectional": false
              },
              {
                "name": "c3",
                "kind": "PortConnection",
                "source": "WaypointPlanManagerService.MissionCommand",
                "destination": "MissionCommand",
                "bidirectional": false
              },
              {
                "name": "c4",
                "kind": "PortConnection",
                "source": "ReturnHome",
                "destination": "WaypointPlanManagerService.ReturnHome",
                "bidirectional": false
              }
            ]
          },
          {
            "name": "SW::UARTDriver",
            "localName": "UARTDriver",
            "kind": "ComponentType",
            "category": "process",
            "features": [
              {
                "name": "recv_data",
                "kind": "EventDataPort",
                "classifier": "CASE_Model_Transformations::CASE_UART_Msg.Impl",
                "direction": "in"
              },
              {
                "name": "MissionCommand",
                "kind": "EventDataPort",
                "classifier": "CMASI::MissionCommand.i",
                "direction": "in"
              },
              {
                "name": "send_data",
                "kind": "EventDataPort",
                "classifier": "CASE_Model_Transformations::CASE_UART_Msg.Impl",
                "direction": "out"
              },
              {
                "name": "AirVehicleState_WPM",
                "kind": "EventDataPort",
                "classifier": "CMASI::AirVehicleState.i",
                "direction": "out"
              },
              {
                "name": "AirVehicleState_UXAS",
                "kind": "EventDataPort",
                "classifier": "CMASI::AirVehicleState.i",
                "direction": "out"
              }
            ],
            "properties": [
              {
                "name": "CASE_Scheduling::Domain",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "PropertyConstant",
                  "value": "UARTDriver_Domain"
                }
              }
            ],
            "annexes": [
              {
                "name": "agree",
                "kind": "AnnexSubclause",
                "parsedAnnexSubclause": {
                  "statements": [
                    {
                      "kind": "GuaranteeStatement",
                      "name": "Req003_UARTDRiver",
                      "label": "The uart send_data outputs only well formed CASE_RF_Msg.Impl types",
                      "expr": {
                        "kind": "BinaryExpr",
                        "left": {
                          "kind": "EventExpr",
                          "id": {
                            "kind": "NamedElmExpr",
                            "name": "send_data"
                          }
                        },
                        "op": "=>",
                        "right": {
                          "kind": "CallExpr",
                          "function": {
                            "kind": "DoubleDotRef",
                            "packageName": "CASEAgree",
                            "name": "WellformedCASE_UART_Msg"
                          },
                          "args": [
                            {
                              "kind": "NamedElmExpr",
                              "name": "send_data"
                            }
                          ]
                        }
                      }
                    }
                  ]
                },
                "sourceText": "{**\n--\t\t\tassume Req001_UARTDriver \\\"Assumes recv_data only gets well formed CASE_UART_Msg.Impl types\\\" :\n--\t\t\t\tevent(recv_data) => CASEAgree::WellformedCASE_UART_Msg(recv_data);\n\t\t\tguarantee Req003_UARTDRiver \\\"The uart send_data outputs only well formed CASE_RF_Msg.Impl types\\\" :\n\t\t\t\tevent(send_data) => CASEAgree::WellformedCASE_UART_Msg(send_data);\n\t\t**}"
              }
            ]
          },
          {
            "packageName": "SW",
            "name": "SW::UARTDriver.Impl",
            "localName": "UARTDriver.Impl",
            "kind": "ComponentImplementation",
            "category": "process",
            "subcomponents": [
              {
                "name": "UARTDriver",
                "kind": "Subcomponent",
                "category": "thread",
                "classifier": "Drivers::UARTDriver.Impl"
              }
            ],
            "connections": [
              {
                "name": "c1",
                "kind": "PortConnection",
                "source": "recv_data",
                "destination": "UARTDriver.recv_data",
                "bidirectional": false
              },
              {
                "name": "c2",
                "kind": "PortConnection",
                "source": "MissionCommand",
                "destination": "UARTDriver.MissionCommand",
                "bidirectional": false
              },
              {
                "name": "c3",
                "kind": "PortConnection",
                "source": "UARTDriver.send_data",
                "destination": "send_data",
                "bidirectional": false
              },
              {
                "name": "c4",
                "kind": "PortConnection",
                "source": "UARTDriver.AirVehicleState_WPM",
                "destination": "AirVehicleState_WPM",
                "bidirectional": false
              },
              {
                "name": "c5",
                "kind": "PortConnection",
                "source": "UARTDriver.AirVehicleState_UXAS",
                "destination": "AirVehicleState_UXAS",
                "bidirectional": false
              }
            ]
          },
          {
            "name": "SW::proc",
            "localName": "proc",
            "kind": "ComponentType",
            "category": "processor"
          },
          {
            "packageName": "SW",
            "name": "SW::proc.Impl",
            "localName": "proc.Impl",
            "kind": "ComponentImplementation",
            "category": "processor",
            "properties": [
              {
                "name": "Timing_Properties::Frame_Period",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "IntegerLiteral",
                  "value": 1000,
                  "unit": "ms"
                }
              },
              {
                "name": "Timing_Properties::Clock_Period",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "IntegerLiteral",
                  "value": 2,
                  "unit": "ms"
                }
              },
              {
                "name": "CASE_Scheduling::Max_Domain",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "IntegerLiteral",
                  "value": 15,
                  "unit": null
                }
              },
              {
                "name": "CASE_Scheduling::Schedule_Source_Text",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "StringLiteral",
                  "value": "UAV/behavior_code/kernel/domain_schedule.c"
                }
              }
            ]
          },
          {
            "name": "SW::SW",
            "localName": "SW",
            "kind": "ComponentType",
            "category": "system",
            "features": [
              {
                "name": "radio_recv",
                "kind": "EventDataPort",
                "classifier": "CASE_Model_Transformations::CASE_RF_Msg.Impl",
                "direction": "in"
              },
              {
                "name": "radio_send",
                "kind": "EventDataPort",
                "classifier": "CASE_Model_Transformations::CASE_RF_Msg.Impl",
                "direction": "out"
              },
              {
                "name": "uart_recv",
                "kind": "EventDataPort",
                "classifier": "CASE_Model_Transformations::CASE_UART_Msg.Impl",
                "direction": "in"
              },
              {
                "name": "uart_send",
                "kind": "EventDataPort",
                "classifier": "CASE_Model_Transformations::CASE_UART_Msg.Impl",
                "direction": "out"
              }
            ],
            "annexes": [
              {
                "name": "agree",
                "kind": "AnnexSubclause",
                "parsedAnnexSubclause": {
                  "statements": []
                },
                "sourceText": "{**\n--\t\t\tguarantee Req001_SW \\\"The radio_send outputs only well formed CASE_RF_Msg.Impl types\\\" :\n--\t\t\t\t event(radio_send) => CASEAgree::WellformedCASE_RF_Msg(radio_send, CASEAgree::UAV_ID, CASEAgree::GS_ID);\n--\t\t\tguarantee Req002_SW \\\"The uart_send outputs only well formed CASE_RF_Msg.Impl types\\\" :\n--\t\t\t\t   event(uart_send) => CASEAgree::WellformedCASE_UART_Msg(uart_send);\n\t\t**}"
              }
            ]
          },
          {
            "packageName": "SW",
            "name": "SW::SW.Impl",
            "localName": "SW.Impl",
            "kind": "ComponentImplementation",
            "category": "system",
            "subcomponents": [
              {
                "name": "FC_UART",
                "kind": "Subcomponent",
                "category": "process",
                "classifier": "SW::UARTDriver.Impl"
              },
              {
                "name": "RADIO",
                "kind": "Subcomponent",
                "category": "process",
                "classifier": "SW::RadioDriver_Attestation.Impl"
              },
              {
                "name": "FlyZones",
                "kind": "Subcomponent",
                "category": "process",
                "classifier": "SW::FlyZonesDatabase.Impl"
              },
              {
                "name": "UXAS",
                "kind": "Subcomponent",
                "category": "process",
                "classifier": "SW::UxAS.Impl"
              },
              {
                "name": "WPM",
                "kind": "Subcomponent",
                "category": "process",
                "classifier": "SW::WaypointPlanManagerService.Impl"
              },
              {
                "name": "AM",
                "kind": "Subcomponent",
                "category": "process",
                "classifier": "SW::CASE_AttestationManager.Impl"
              },
              {
                "name": "AM_Gate",
                "kind": "Subcomponent",
                "category": "process",
                "classifier": "SW::CASE_AttestationGate.Impl"
              },
              {
                "name": "FLT_AReq",
                "kind": "Subcomponent",
                "category": "process",
                "classifier": "SW::CASE_Filter_AReq.Impl"
              },
              {
                "name": "FLT_OR",
                "kind": "Subcomponent",
                "category": "process",
                "classifier": "SW::CASE_Filter_OR.Impl"
              },
              {
                "name": "FLT_LST",
                "kind": "Subcomponent",
                "category": "process",
                "classifier": "SW::CASE_Filter_LST.Impl"
              },
              {
                "name": "MON_REQ",
                "kind": "Subcomponent",
                "category": "process",
                "classifier": "SW::CASE_Monitor_Req.Impl"
              },
              {
                "name": "FLT_ARes",
                "kind": "Subcomponent",
                "category": "process",
                "classifier": "SW::CASE_Filter_ARes.Impl"
              },
              {
                "name": "MON_GEO",
                "kind": "Subcomponent",
                "category": "process",
                "classifier": "SW::CASE_Monitor_Geo.Impl"
              },
              {
                "name": "proc",
                "kind": "Subcomponent",
                "category": "processor",
                "classifier": "SW::proc.Impl"
              }
            ],
            "connections": [
              {
                "name": "c01",
                "kind": "PortConnection",
                "source": "uart_recv",
                "destination": "FC_UART.recv_data",
                "bidirectional": false
              },
              {
                "name": "c02",
                "kind": "PortConnection",
                "source": "radio_recv",
                "destination": "RADIO.recv_data",
                "bidirectional": false
              },
              {
                "name": "c03",
                "kind": "PortConnection",
                "source": "FC_UART.send_data",
                "destination": "uart_send",
                "bidirectional": false
              },
              {
                "name": "c04",
                "kind": "PortConnection",
                "source": "FC_UART.AirVehicleState_UXAS",
                "destination": "UXAS.AirVehicleState",
                "bidirectional": false
              },
              {
                "name": "c05",
                "kind": "PortConnection",
                "source": "FC_UART.AirVehicleState_WPM",
                "destination": "WPM.AirVehicleState",
                "bidirectional": false
              },
              {
                "name": "c06",
                "kind": "PortConnection",
                "source": "RADIO.send_data",
                "destination": "radio_send",
                "bidirectional": false
              },
              {
                "name": "c07",
                "kind": "PortConnection",
                "source": "RADIO.AutomationRequest",
                "destination": "AM_Gate.AutomationRequest_in",
                "bidirectional": false
              },
              {
                "name": "c08",
                "kind": "PortConnection",
                "source": "RADIO.OperatingRegion",
                "destination": "AM_Gate.OperatingRegion_in",
                "bidirectional": false
              },
              {
                "name": "c09",
                "kind": "PortConnection",
                "source": "RADIO.LineSearchTask",
                "destination": "AM_Gate.LineSearchTask_in",
                "bidirectional": false
              },
              {
                "name": "c10",
                "kind": "PortConnection",
                "source": "RADIO.am_response",
                "destination": "AM.attestation_response",
                "bidirectional": false
              },
              {
                "name": "c11",
                "kind": "PortConnection",
                "source": "FlyZones.keep_in_zones",
                "destination": "MON_GEO.keep_in_zones",
                "bidirectional": false
              },
              {
                "name": "c12",
                "kind": "PortConnection",
                "source": "FlyZones.keep_out_zones",
                "destination": "MON_GEO.keep_out_zones",
                "bidirectional": false
              },
              {
                "name": "c13",
                "kind": "PortConnection",
                "source": "UXAS.AutomationResponse",
                "destination": "FLT_ARes.filter_in",
                "bidirectional": false
              },
              {
                "name": "c15",
                "kind": "PortConnection",
                "source": "WPM.MissionCommand",
                "destination": "FC_UART.MissionCommand",
                "bidirectional": false
              },
              {
                "name": "c16",
                "kind": "PortConnection",
                "source": "AM.attestation_request",
                "destination": "RADIO.am_request",
                "bidirectional": false
              },
              {
                "name": "c17",
                "kind": "PortConnection",
                "source": "AM.trusted_ids",
                "destination": "AM_Gate.trusted_ids",
                "bidirectional": false
              },
              {
                "name": "c18",
                "kind": "PortConnection",
                "source": "AM_Gate.AutomationRequest_out",
                "destination": "FLT_AReq.filter_in",
                "bidirectional": false
              },
              {
                "name": "c19",
                "kind": "PortConnection",
                "source": "AM_Gate.OperatingRegion_out",
                "destination": "FLT_OR.filter_in",
                "bidirectional": false
              },
              {
                "name": "c20",
                "kind": "PortConnection",
                "source": "AM_Gate.LineSearchTask_out",
                "destination": "FLT_LST.filter_in",
                "bidirectional": false
              },
              {
                "name": "c22",
                "kind": "PortConnection",
                "source": "FLT_AReq.filter_out_UXAS",
                "destination": "UXAS.AutomationRequest",
                "bidirectional": false
              },
              {
                "name": "c23",
                "kind": "PortConnection",
                "source": "FLT_AReq.filter_out_MON_REQ",
                "destination": "MON_REQ.reference_1",
                "bidirectional": false
              },
              {
                "name": "c24",
                "kind": "PortConnection",
                "source": "FLT_OR.filter_out",
                "destination": "UXAS.OperatingRegion",
                "bidirectional": false
              },
              {
                "name": "c25",
                "kind": "PortConnection",
                "source": "FLT_LST.filter_out",
                "destination": "UXAS.LineSearchTask",
                "bidirectional": false
              },
              {
                "name": "c26",
                "kind": "PortConnection",
                "source": "FLT_ARes.filter_out",
                "destination": "MON_REQ.observed",
                "bidirectional": false
              },
              {
                "name": "c27",
                "kind": "PortConnection",
                "source": "FLT_ARes.filter_out",
                "destination": "MON_GEO.observed",
                "bidirectional": false
              },
              {
                "name": "c28",
                "kind": "PortConnection",
                "source": "MON_GEO.output",
                "destination": "WPM.AutomationResponse",
                "bidirectional": false
              },
              {
                "name": "c29",
                "kind": "PortConnection",
                "source": "MON_GEO.alert",
                "destination": "WPM.ReturnHome",
                "bidirectional": false
              }
            ],
            "properties": [
              {
                "name": "Deployment_Properties::Actual_Processor_Binding",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "ListValue",
                  "value": [
                    {
                      "kind": "ReferenceValue",
                      "value": "proc"
                    }
                  ]
                },
                "appliesTo": [
                  "FC_UART"
                ]
              },
              {
                "name": "Deployment_Properties::Actual_Processor_Binding",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "ListValue",
                  "value": [
                    {
                      "kind": "ReferenceValue",
                      "value": "proc"
                    }
                  ]
                },
                "appliesTo": [
                  "RADIO"
                ]
              },
              {
                "name": "Deployment_Properties::Actual_Processor_Binding",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "ListValue",
                  "value": [
                    {
                      "kind": "ReferenceValue",
                      "value": "proc"
                    }
                  ]
                },
                "appliesTo": [
                  "FlyZones"
                ]
              },
              {
                "name": "Deployment_Properties::Actual_Processor_Binding",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "ListValue",
                  "value": [
                    {
                      "kind": "ReferenceValue",
                      "value": "proc"
                    }
                  ]
                },
                "appliesTo": [
                  "UXAS"
                ]
              },
              {
                "name": "Deployment_Properties::Actual_Processor_Binding",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "ListValue",
                  "value": [
                    {
                      "kind": "ReferenceValue",
                      "value": "proc"
                    }
                  ]
                },
                "appliesTo": [
                  "WPM"
                ]
              },
              {
                "name": "Deployment_Properties::Actual_Processor_Binding",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "ListValue",
                  "value": [
                    {
                      "kind": "ReferenceValue",
                      "value": "proc"
                    }
                  ]
                },
                "appliesTo": [
                  "AM"
                ]
              },
              {
                "name": "Deployment_Properties::Actual_Processor_Binding",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "ListValue",
                  "value": [
                    {
                      "kind": "ReferenceValue",
                      "value": "proc"
                    }
                  ]
                },
                "appliesTo": [
                  "AM_Gate"
                ]
              },
              {
                "name": "Deployment_Properties::Actual_Processor_Binding",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "ListValue",
                  "value": [
                    {
                      "kind": "ReferenceValue",
                      "value": "proc"
                    }
                  ]
                },
                "appliesTo": [
                  "FLT_LST"
                ]
              },
              {
                "name": "Deployment_Properties::Actual_Processor_Binding",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "ListValue",
                  "value": [
                    {
                      "kind": "ReferenceValue",
                      "value": "proc"
                    }
                  ]
                },
                "appliesTo": [
                  "FLT_AReq"
                ]
              },
              {
                "name": "Deployment_Properties::Actual_Processor_Binding",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "ListValue",
                  "value": [
                    {
                      "kind": "ReferenceValue",
                      "value": "proc"
                    }
                  ]
                },
                "appliesTo": [
                  "FLT_ARes"
                ]
              },
              {
                "name": "Deployment_Properties::Actual_Processor_Binding",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "ListValue",
                  "value": [
                    {
                      "kind": "ReferenceValue",
                      "value": "proc"
                    }
                  ]
                },
                "appliesTo": [
                  "FLT_OR"
                ]
              },
              {
                "name": "Deployment_Properties::Actual_Processor_Binding",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "ListValue",
                  "value": [
                    {
                      "kind": "ReferenceValue",
                      "value": "proc"
                    }
                  ]
                },
                "appliesTo": [
                  "MON_REQ"
                ]
              },
              {
                "name": "Deployment_Properties::Actual_Processor_Binding",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "ListValue",
                  "value": [
                    {
                      "kind": "ReferenceValue",
                      "value": "proc"
                    }
                  ]
                },
                "appliesTo": [
                  "MON_GEO"
                ]
              },
              {
                "name": "HAMR::Default_Bit_Width",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "IntegerLiteral",
                  "value": 32,
                  "unit": null
                }
              },
              {
                "name": "HAMR::Default_Max_Sequence_Size",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "IntegerLiteral",
                  "value": 1,
                  "unit": null
                }
              },
              {
                "name": "HAMR::Max_String_Size",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "IntegerLiteral",
                  "value": 256,
                  "unit": null
                }
              },
              {
                "name": "HAMR::Bit_Codec_Raw_Connections",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "BooleanLiteral",
                  "value": true
                }
              }
            ],
            "annexes": [
              {
                "name": "resolute",
                "kind": "AnnexSubclause",
                "sourceText": "{**\n            check CASE_Tools\n        **}"
              }
            ]
          }
        ]
      }
    },
    {
      "name": "Drivers",
      "kind": "AadlPackage",
      "public": {
        "with": [
          "CASE_Model_Transformations",
          "CMASI",
          "CASEAgree",
          "CASE_Properties"
        ],
        "components": [
          {
            "name": "Drivers::RadioDriver",
            "localName": "RadioDriver",
            "kind": "ComponentType",
            "category": "thread",
            "features": [
              {
                "name": "recv_data",
                "kind": "EventDataPort",
                "classifier": "CASE_Model_Transformations::CASE_RF_Msg.Impl",
                "direction": "in"
              },
              {
                "name": "send_data",
                "kind": "EventDataPort",
                "classifier": "CASE_Model_Transformations::CASE_RF_Msg.Impl",
                "direction": "out"
              },
              {
                "name": "AutomationRequest",
                "kind": "EventDataPort",
                "classifier": "CMASI::AddressAttributedMessage.i",
                "direction": "out"
              },
              {
                "name": "OperatingRegion",
                "kind": "EventDataPort",
                "classifier": "CMASI::AddressAttributedMessage.i",
                "direction": "out"
              },
              {
                "name": "LineSearchTask",
                "kind": "EventDataPort",
                "classifier": "CMASI::AddressAttributedMessage.i",
                "direction": "out"
              }
            ],
            "properties": [
              {
                "name": "Thread_Properties::Dispatch_Protocol",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "EnumerationLiteral",
                  "value": "Periodic"
                }
              },
              {
                "name": "Timing_Properties::Period",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "IntegerLiteral",
                  "value": 500,
                  "unit": "ms"
                }
              },
              {
                "name": "Timing_Properties::Compute_Execution_Time",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "RangeValue",
                  "value": {
                    "min": {
                      "kind": "IntegerLiteral",
                      "value": 20,
                      "unit": "ms"
                    },
                    "max": {
                      "kind": "IntegerLiteral",
                      "value": 20,
                      "unit": "ms"
                    }
                  }
                }
              }
            ]
          },
          {
            "packageName": "Drivers",
            "name": "Drivers::RadioDriver.Impl",
            "localName": "RadioDriver.Impl",
            "kind": "ComponentImplementation",
            "category": "thread",
            "properties": [
              {
                "name": "CASE_Properties::Component_Type",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "EnumerationLiteral",
                  "value": "COMM_DRIVER"
                }
              }
            ]
          },
          {
            "name": "Drivers::UARTDriver",
            "localName": "UARTDriver",
            "kind": "ComponentType",
            "category": "thread",
            "features": [
              {
                "name": "recv_data",
                "kind": "EventDataPort",
                "classifier": "CASE_Model_Transformations::CASE_UART_Msg.Impl",
                "direction": "in"
              },
              {
                "name": "MissionCommand",
                "kind": "EventDataPort",
                "classifier": "CMASI::MissionCommand.i",
                "direction": "in"
              },
              {
                "name": "send_data",
                "kind": "EventDataPort",
                "classifier": "CASE_Model_Transformations::CASE_UART_Msg.Impl",
                "direction": "out"
              },
              {
                "name": "AirVehicleState_WPM",
                "kind": "EventDataPort",
                "classifier": "CMASI::AirVehicleState.i",
                "direction": "out"
              },
              {
                "name": "AirVehicleState_UXAS",
                "kind": "EventDataPort",
                "classifier": "CMASI::AirVehicleState.i",
                "direction": "out"
              }
            ],
            "properties": [
              {
                "name": "Thread_Properties::Dispatch_Protocol",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "EnumerationLiteral",
                  "value": "Periodic"
                }
              },
              {
                "name": "Timing_Properties::Period",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "IntegerLiteral",
                  "value": 500,
                  "unit": "ms"
                }
              },
              {
                "name": "Timing_Properties::Compute_Execution_Time",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "RangeValue",
                  "value": {
                    "min": {
                      "kind": "IntegerLiteral",
                      "value": 6,
                      "unit": "ms"
                    },
                    "max": {
                      "kind": "IntegerLiteral",
                      "value": 6,
                      "unit": "ms"
                    }
                  }
                }
              },
              {
                "name": "Memory_Properties::Stack_Size",
                "kind": "PropertyAssociation",
                "value": {
                  "kind": "PropertyConstant",
                  "value": "Stack_Size"
                }
              }
            ],
            "annexes": [
              {
                "name": "agree",
                "kind": "AnnexSubclause",
                "parsedAnnexSubclause": {
                  "statements": [
                    {
                      "kind": "GuaranteeStatement",
                      "name": "Req003_UARTDRiver",
                      "label": "The send_data outputs only well formed CASE_UART_Msg.Impl types",
                      "expr": {
                        "kind": "BinaryExpr",
                        "left": {
                          "kind": "EventExpr",
                          "id": {
                            "kind": "NamedElmExpr",
                            "name": "send_data"
                          }
                        },
                        "op": "=>",
                        "right": {
                          "kind": "CallExpr",
                          "function": {
                            "kind": "DoubleDotRef",
                            "packageName": "CASEAgree",
                            "name": "WellformedCASE_UART_Msg"
                          },
                          "args": [
                            {
                              "kind": "NamedElmExpr",
                              "name": "send_data"
                            }
                          ]
                        }
                      }
                    }
                  ]
                },
                "sourceText": "{**\n--\t\t\tassume Req001_UARTDriver \\\"Assumes recv_data only gets well formed CASE_UART_Msg.Impl types\\\" :\n--\t\t\t\tevent(recv_data) => CASEAgree::WellformedCASE_UART_Msg(recv_data);\n\t\t\tguarantee Req003_UARTDRiver \\\"The send_data outputs only well formed CASE_UART_Msg.Impl types\\\" :\n\t\t\t\tevent(send_data) => CASEAgree::WellformedCASE_UART_Msg(send_data);\n\t\t**}"
              }
            ]
          },
          {
            "packageName": "Drivers",
            "name": "Drivers::UARTDriver.Impl",
            "localName": "UARTDriver.Impl",
            "kind": "ComponentImplementation",
            "category": "thread"
          }
        ]
      }
    },
    {
      "name": "CASEAgree",
      "kind": "AadlPackage",
      "public": {
        "with": [
          "CASE_Model_Transformations",
          "CMASI",
          "Common_Data"
        ],
        "packageRenames": [
          {
            "package": "CASE_Model_Transformations",
            "rename": "all"
          },
          {
            "package": "Base_Types",
            "rename": "all"
          },
          {
            "package": "CMASI",
            "rename": "all"
          },
          {
            "package": "Common_Data",
            "rename": "all"
          }
        ],
        "annexes": [
          {
            "name": "agree",
            "kind": "AnnexLibrary",
            "parsedAnnexLibrary": {
              "statements": [
                {
                  "kind": "ConstStatement",
                  "name": "OPERATING_REGION_ID_MIN",
                  "type": {
                    "kind": "PrimType",
                    "primType": "int"
                  },
                  "expr": {
                    "kind": "IntLitExpr",
                    "value": "0"
                  }
                },
                {
                  "kind": "ConstStatement",
                  "name": "OPERATING_REGION_ID_MAX",
                  "type": {
                    "kind": "PrimType",
                    "primType": "int"
                  },
                  "expr": {
                    "kind": "IntLitExpr",
                    "value": "500"
                  }
                },
                {
                  "kind": "ConstStatement",
                  "name": "KEEP_IN_ZONE_ID_MIN",
                  "type": {
                    "kind": "PrimType",
                    "primType": "int"
                  },
                  "expr": {
                    "kind": "IntLitExpr",
                    "value": "0"
                  }
                },
                {
                  "kind": "ConstStatement",
                  "name": "KEEP_IN_ZONE_ID_MAX",
                  "type": {
                    "kind": "PrimType",
                    "primType": "int"
                  },
                  "expr": {
                    "kind": "IntLitExpr",
                    "value": "500"
                  }
                },
                {
                  "kind": "ConstStatement",
                  "name": "KEEP_OUT_ZONE_ID_MIN",
                  "type": {
                    "kind": "PrimType",
                    "primType": "int"
                  },
                  "expr": {
                    "kind": "IntLitExpr",
                    "value": "0"
                  }
                },
                {
                  "kind": "ConstStatement",
                  "name": "KEEP_OUT_ZONE_ID_MAX",
                  "type": {
                    "kind": "PrimType",
                    "primType": "int"
                  },
                  "expr": {
                    "kind": "IntLitExpr",
                    "value": "500"
                  }
                },
                {
                  "kind": "ConstStatement",
                  "name": "TASK_ID_MIN",
                  "type": {
                    "kind": "PrimType",
                    "primType": "int"
                  },
                  "expr": {
                    "kind": "IntLitExpr",
                    "value": "0"
                  }
                },
                {
                  "kind": "ConstStatement",
                  "name": "TASK_ID_MAX",
                  "type": {
                    "kind": "PrimType",
                    "primType": "int"
                  },
                  "expr": {
                    "kind": "IntLitExpr",
                    "value": "2000"
                  }
                },
                {
                  "kind": "ConstStatement",
                  "name": "ENTITY_ID_MIN",
                  "type": {
                    "kind": "PrimType",
                    "primType": "int"
                  },
                  "expr": {
                    "kind": "IntLitExpr",
                    "value": "0"
                  }
                },
                {
                  "kind": "ConstStatement",
                  "name": "ENTITY_ID_MAX",
                  "type": {
                    "kind": "PrimType",
                    "primType": "int"
                  },
                  "expr": {
                    "kind": "IntLitExpr",
                    "value": "500"
                  }
                },
                {
                  "kind": "ConstStatement",
                  "name": "ALTITUDE_MIN",
                  "type": {
                    "kind": "PrimType",
                    "primType": "real"
                  },
                  "expr": {
                    "kind": "RealLitExpr",
                    "value": "0.0"
                  }
                },
                {
                  "kind": "ConstStatement",
                  "name": "ALTITUDE_MAX",
                  "type": {
                    "kind": "PrimType",
                    "primType": "real"
                  },
                  "expr": {
                    "kind": "RealLitExpr",
                    "value": "15000.0"
                  }
                },
                {
                  "kind": "ConstStatement",
                  "name": "LATITUDE_MIN",
                  "type": {
                    "kind": "PrimType",
                    "primType": "real"
                  },
                  "expr": {
                    "kind": "UnaryExpr",
                    "operand": {
                      "kind": "RealLitExpr",
                      "value": "90.0"
                    },
                    "op": "-"
                  }
                },
                {
                  "kind": "ConstStatement",
                  "name": "LATITUDE_MAX",
                  "type": {
                    "kind": "PrimType",
                    "primType": "real"
                  },
                  "expr": {
                    "kind": "RealLitExpr",
                    "value": "90.0"
                  }
                },
                {
                  "kind": "ConstStatement",
                  "name": "LONGITUDE_MIN",
                  "type": {
                    "kind": "PrimType",
                    "primType": "real"
                  },
                  "expr": {
                    "kind": "UnaryExpr",
                    "operand": {
                      "kind": "RealLitExpr",
                      "value": "180.0"
                    },
                    "op": "-"
                  }
                },
                {
                  "kind": "ConstStatement",
                  "name": "LONGITUDE_MAX",
                  "type": {
                    "kind": "PrimType",
                    "primType": "real"
                  },
                  "expr": {
                    "kind": "RealLitExpr",
                    "value": "180.0"
                  }
                },
                {
                  "kind": "ConstStatement",
                  "name": "AZIMUTH_CENTERLINE_MIN",
                  "type": {
                    "kind": "PrimType",
                    "primType": "real"
                  },
                  "expr": {
                    "kind": "UnaryExpr",
                    "operand": {
                      "kind": "RealLitExpr",
                      "value": "180.0"
                    },
                    "op": "-"
                  }
                },
                {
                  "kind": "ConstStatement",
                  "name": "AZIMUTH_CENTERLINE_MAX",
                  "type": {
                    "kind": "PrimType",
                    "primType": "real"
                  },
                  "expr": {
                    "kind": "RealLitExpr",
                    "value": "180.0"
                  }
                },
                {
                  "kind": "ConstStatement",
                  "name": "VERTICAL_CENTERLINE_MIN",
                  "type": {
                    "kind": "PrimType",
                    "primType": "real"
                  },
                  "expr": {
                    "kind": "UnaryExpr",
                    "operand": {
                      "kind": "RealLitExpr",
                      "value": "180.0"
                    },
                    "op": "-"
                  }
                },
                {
                  "kind": "ConstStatement",
                  "name": "VERTICAL_CENTERLINE_MAX",
                  "type": {
                    "kind": "PrimType",
                    "primType": "real"
                  },
                  "expr": {
                    "kind": "RealLitExpr",
                    "value": "180.0"
                  }
                },
                {
                  "kind": "ConstStatement",
                  "name": "MAX_UAV_CLIMB_RATE",
                  "type": {
                    "kind": "PrimType",
                    "primType": "real"
                  },
                  "expr": {
                    "kind": "RealLitExpr",
                    "value": "42.0"
                  }
                },
                {
                  "kind": "ConstStatement",
                  "name": "GS_ID",
                  "type": {
                    "kind": "PrimType",
                    "primType": "int"
                  },
                  "expr": {
                    "kind": "IntLitExpr",
                    "value": "500"
                  }
                },
                {
                  "kind": "ConstStatement",
                  "name": "FCTL_ID",
                  "type": {
                    "kind": "PrimType",
                    "primType": "int"
                  },
                  "expr": {
                    "kind": "IntLitExpr",
                    "value": "100"
                  }
                },
                {
                  "kind": "ConstStatement",
                  "name": "UAV_ID",
                  "type": {
                    "kind": "PrimType",
                    "primType": "int"
                  },
                  "expr": {
                    "kind": "IntLitExpr",
                    "value": "400"
                  }
                },
                {
                  "kind": "FnDef",
                  "packageName": "CASEAgree",
                  "name": "WellformedCASE_RF_Msg",
                  "args": [
                    {
                      "name": "msg",
                      "type": {
                        "kind": "DoubleDotRef",
                        "name": "CASE_Model_Transformations::CASE_RF_Msg.Impl"
                      }
                    },
                    {
                      "name": "src",
                      "type": {
                        "kind": "DoubleDotRef",
                        "name": "Common_Data::int64.i"
                      }
                    },
                    {
                      "name": "dst",
                      "type": {
                        "kind": "DoubleDotRef",
                        "name": "Common_Data::int64.i"
                      }
                    }
                  ],
                  "type": {
                    "kind": "PrimType",
                    "primType": "bool"
                  },
                  "expr": {
                    "kind": "CallExpr",
                    "function": {
                      "kind": "DoubleDotRef",
                      "packageName": "CASEAgree",
                      "name": "WellformedCASE_MsgHeader"
                    },
                    "args": [
                      {
                        "kind": "SelectionExpr",
                        "target": {
                          "kind": "NamedElmExpr",
                          "name": "msg"
                        },
                        "field": "header"
                      },
                      {
                        "kind": "NamedElmExpr",
                        "name": "src"
                      },
                      {
                        "kind": "NamedElmExpr",
                        "name": "dst"
                      }
                    ]
                  }
                },
                {
                  "kind": "FnDef",
                  "packageName": "CASEAgree",
                  "name": "WellformedCASE_MsgHeader",
                  "args": [
                    {
                      "name": "hdr",
                      "type": {
                        "kind": "DoubleDotRef",
                        "name": "CASE_Model_Transformations::CASE_MsgHeader.Impl"
                      }
                    },
                    {
                      "name": "src",
                      "type": {
                        "kind": "DoubleDotRef",
                        "name": "Common_Data::int64.i"
                      }
                    },
                    {
                      "name": "dst",
                      "type": {
                        "kind": "DoubleDotRef",
                        "name": "Common_Data::int64.i"
                      }
                    }
                  ],
                  "type": {
                    "kind": "PrimType",
                    "primType": "bool"
                  },
                  "expr": {
                    "kind": "BinaryExpr",
                    "left": {
                      "kind": "BinaryExpr",
                      "left": {
                        "kind": "BinaryExpr",
                        "left": {
                          "kind": "BinaryExpr",
                          "left": {
                            "kind": "SelectionExpr",
                            "target": {
                              "kind": "NamedElmExpr",
                              "name": "hdr"
                            },
                            "field": "src"
                          },
                          "op": "=",
                          "right": {
                            "kind": "NamedElmExpr",
                            "name": "src"
                          }
                        },
                        "op": "and",
                        "right": {
                          "kind": "BinaryExpr",
                          "left": {
                            "kind": "SelectionExpr",
                            "target": {
                              "kind": "NamedElmExpr",
                              "name": "hdr"
                            },
                            "field": "dst"
                          },
                          "op": "=",
                          "right": {
                            "kind": "NamedElmExpr",
                            "name": "dst"
                          }
                        }
                      },
                      "op": "and",
                      "right": {
                        "kind": "BinaryExpr",
                        "left": {
                          "kind": "SelectionExpr",
                          "target": {
                            "kind": "NamedElmExpr",
                            "name": "hdr"
                          },
                          "field": "trusted"
                        },
                        "op": "=",
                        "right": {
                          "kind": "BoolLitExpr",
                          "value": "true"
                        }
                      }
                    },
                    "op": "and",
                    "right": {
                      "kind": "BinaryExpr",
                      "left": {
                        "kind": "SelectionExpr",
                        "target": {
                          "kind": "NamedElmExpr",
                          "name": "hdr"
                        },
                        "field": "HMAC"
                      },
                      "op": "=",
                      "right": {
                        "kind": "BoolLitExpr",
                        "value": "true"
                      }
                    }
                  }
                },
                {
                  "kind": "FnDef",
                  "packageName": "CASEAgree",
                  "name": "WellformedCASE_UART_Msg",
                  "args": [
                    {
                      "name": "msg",
                      "type": {
                        "kind": "DoubleDotRef",
                        "name": "CASE_Model_Transformations::CASE_UART_Msg.Impl"
                      }
                    }
                  ],
                  "type": {
                    "kind": "PrimType",
                    "primType": "bool"
                  },
                  "expr": {
                    "kind": "BinaryExpr",
                    "left": {
                      "kind": "SelectionExpr",
                      "target": {
                        "kind": "NamedElmExpr",
                        "name": "msg"
                      },
                      "field": "crc"
                    },
                    "op": "=",
                    "right": {
                      "kind": "BoolLitExpr",
                      "value": "true"
                    }
                  }
                },
                {
                  "kind": "FnDef",
                  "packageName": "CASEAgree",
                  "name": "WELL_FORMED_AUTOMATION_REQUEST",
                  "args": [
                    {
                      "name": "msg",
                      "type": {
                        "kind": "DoubleDotRef",
                        "name": "CMASI::AutomationRequest.i"
                      }
                    }
                  ],
                  "type": {
                    "kind": "PrimType",
                    "primType": "bool"
                  },
                  "expr": {
                    "kind": "BinaryExpr",
                    "left": {
                      "kind": "BinaryExpr",
                      "left": {
                        "kind": "BinaryExpr",
                        "left": {
                          "kind": "ForallExpr",
                          "binding": "e",
                          "array": {
                            "kind": "SelectionExpr",
                            "target": {
                              "kind": "NamedElmExpr",
                              "name": "msg"
                            },
                            "field": "EntityList"
                          },
                          "expr": {
                            "kind": "BinaryExpr",
                            "left": {
                              "kind": "BinaryExpr",
                              "left": {
                                "kind": "NamedElmExpr",
                                "name": "e"
                              },
                              "op": ">=",
                              "right": {
                                "kind": "NamedElmExpr",
                                "name": "ENTITY_ID_MIN"
                              }
                            },
                            "op": "and",
                            "right": {
                              "kind": "BinaryExpr",
                              "left": {
                                "kind": "NamedElmExpr",
                                "name": "e"
                              },
                              "op": "<=",
                              "right": {
                                "kind": "NamedElmExpr",
                                "name": "ENTITY_ID_MAX"
                              }
                            }
                          }
                        },
                        "op": "and",
                        "right": {
                          "kind": "ForallExpr",
                          "binding": "t",
                          "array": {
                            "kind": "SelectionExpr",
                            "target": {
                              "kind": "NamedElmExpr",
                              "name": "msg"
                            },
                            "field": "TaskList"
                          },
                          "expr": {
                            "kind": "BinaryExpr",
                            "left": {
                              "kind": "BinaryExpr",
                              "left": {
                                "kind": "NamedElmExpr",
                                "name": "t"
                              },
                              "op": ">=",
                              "right": {
                                "kind": "NamedElmExpr",
                                "name": "TASK_ID_MIN"
                              }
                            },
                            "op": "and",
                            "right": {
                              "kind": "BinaryExpr",
                              "left": {
                                "kind": "NamedElmExpr",
                                "name": "t"
                              },
                              "op": "<=",
                              "right": {
                                "kind": "NamedElmExpr",
                                "name": "TASK_ID_MAX"
                              }
                            }
                          }
                        }
                      },
                      "op": "and",
                      "right": {
                        "kind": "BinaryExpr",
                        "left": {
                          "kind": "SelectionExpr",
                          "target": {
                            "kind": "NamedElmExpr",
                            "name": "msg"
                          },
                          "field": "OperatingRegion"
                        },
                        "op": ">=",
                        "right": {
                          "kind": "NamedElmExpr",
                          "name": "OPERATING_REGION_ID_MIN"
                        }
                      }
                    },
                    "op": "and",
                    "right": {
                      "kind": "BinaryExpr",
                      "left": {
                        "kind": "SelectionExpr",
                        "target": {
                          "kind": "NamedElmExpr",
                          "name": "msg"
                        },
                        "field": "OperatingRegion"
                      },
                      "op": "<=",
                      "right": {
                        "kind": "NamedElmExpr",
                        "name": "OPERATING_REGION_ID_MAX"
                      }
                    }
                  }
                },
                {
                  "kind": "FnDef",
                  "packageName": "CASEAgree",
                  "name": "WELL_FORMED_OPERATING_REGION",
                  "args": [
                    {
                      "name": "msg",
                      "type": {
                        "kind": "DoubleDotRef",
                        "name": "CMASI::OperatingRegion.i"
                      }
                    }
                  ],
                  "type": {
                    "kind": "PrimType",
                    "primType": "bool"
                  },
                  "expr": {
                    "kind": "BinaryExpr",
                    "left": {
                      "kind": "BinaryExpr",
                      "left": {
                        "kind": "BinaryExpr",
                        "left": {
                          "kind": "BinaryExpr",
                          "left": {
                            "kind": "SelectionExpr",
                            "target": {
                              "kind": "NamedElmExpr",
                              "name": "msg"
                            },
                            "field": "ID"
                          },
                          "op": ">=",
                          "right": {
                            "kind": "NamedElmExpr",
                            "name": "OPERATING_REGION_ID_MIN"
                          }
                        },
                        "op": "and",
                        "right": {
                          "kind": "BinaryExpr",
                          "left": {
                            "kind": "SelectionExpr",
                            "target": {
                              "kind": "NamedElmExpr",
                              "name": "msg"
                            },
                            "field": "ID"
                          },
                          "op": "<=",
                          "right": {
                            "kind": "NamedElmExpr",
                            "name": "OPERATING_REGION_ID_MAX"
                          }
                        }
                      },
                      "op": "and",
                      "right": {
                        "kind": "ForallExpr",
                        "binding": "kiz",
                        "array": {
                          "kind": "SelectionExpr",
                          "target": {
                            "kind": "NamedElmExpr",
                            "name": "msg"
                          },
                          "field": "KeepInAreas"
                        },
                        "expr": {
                          "kind": "BinaryExpr",
                          "left": {
                            "kind": "BinaryExpr",
                            "left": {
                              "kind": "NamedElmExpr",
                              "name": "kiz"
                            },
                            "op": ">=",
                            "right": {
                              "kind": "NamedElmExpr",
                              "name": "KEEP_IN_ZONE_ID_MIN"
                            }
                          },
                          "op": "and",
                          "right": {
                            "kind": "BinaryExpr",
                            "left": {
                              "kind": "NamedElmExpr",
                              "name": "kiz"
                            },
                            "op": "<=",
                            "right": {
                              "kind": "NamedElmExpr",
                              "name": "KEEP_IN_ZONE_ID_MAX"
                            }
                          }
                        }
                      }
                    },
                    "op": "and",
                    "right": {
                      "kind": "ForallExpr",
                      "binding": "koz",
                      "array": {
                        "kind": "SelectionExpr",
                        "target": {
                          "kind": "NamedElmExpr",
                          "name": "msg"
                        },
                        "field": "KeepOutAreas"
                      },
                      "expr": {
                        "kind": "BinaryExpr",
                        "left": {
                          "kind": "BinaryExpr",
                          "left": {
                            "kind": "NamedElmExpr",
                            "name": "koz"
                          },
                          "op": ">=",
                          "right": {
                            "kind": "NamedElmExpr",
                            "name": "KEEP_OUT_ZONE_ID_MIN"
                          }
                        },
                        "op": "and",
                        "right": {
                          "kind": "BinaryExpr",
                          "left": {
                            "kind": "NamedElmExpr",
                            "name": "koz"
                          },
                          "op": "<=",
                          "right": {
                            "kind": "NamedElmExpr",
                            "name": "KEEP_OUT_ZONE_ID_MAX"
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "kind": "FnDef",
                  "packageName": "CASEAgree",
                  "name": "WELL_FORMED_LINE_SEARCH_TASK",
                  "args": [
                    {
                      "name": "msg",
                      "type": {
                        "kind": "DoubleDotRef",
                        "name": "CMASI::LineSearchTask.i"
                      }
                    }
                  ],
                  "type": {
                    "kind": "PrimType",
                    "primType": "bool"
                  },
                  "expr": {
                    "kind": "BinaryExpr",
                    "left": {
                      "kind": "BinaryExpr",
                      "left": {
                        "kind": "BinaryExpr",
                        "left": {
                          "kind": "BinaryExpr",
                          "left": {
                            "kind": "SelectionExpr",
                            "target": {
                              "kind": "NamedElmExpr",
                              "name": "msg"
                            },
                            "field": "TaskID"
                          },
                          "op": ">=",
                          "right": {
                            "kind": "NamedElmExpr",
                            "name": "TASK_ID_MIN"
                          }
                        },
                        "op": "and",
                        "right": {
                          "kind": "BinaryExpr",
                          "left": {
                            "kind": "SelectionExpr",
                            "target": {
                              "kind": "NamedElmExpr",
                              "name": "msg"
                            },
                            "field": "TaskID"
                          },
                          "op": "<=",
                          "right": {
                            "kind": "NamedElmExpr",
                            "name": "TASK_ID_MAX"
                          }
                        }
                      },
                      "op": "and",
                      "right": {
                        "kind": "ForallExpr",
                        "binding": "point",
                        "array": {
                          "kind": "SelectionExpr",
                          "target": {
                            "kind": "NamedElmExpr",
                            "name": "msg"
                          },
                          "field": "PointList"
                        },
                        "expr": {
                          "kind": "CallExpr",
                          "function": {
                            "kind": "DoubleDotRef",
                            "packageName": "CASEAgree",
                            "name": "WELL_FORMED_POINT"
                          },
                          "args": [
                            {
                              "kind": "NamedElmExpr",
                              "name": "point"
                            }
                          ]
                        }
                      }
                    },
                    "op": "and",
                    "right": {
                      "kind": "ForallExpr",
                      "binding": "viewangle",
                      "array": {
                        "kind": "SelectionExpr",
                        "target": {
                          "kind": "NamedElmExpr",
                          "name": "msg"
                        },
                        "field": "ViewAngleList"
                      },
                      "expr": {
                        "kind": "CallExpr",
                        "function": {
                          "kind": "DoubleDotRef",
                          "packageName": "CASEAgree",
                          "name": "WELL_FORMED_VIEWANGLE"
                        },
                        "args": [
                          {
                            "kind": "NamedElmExpr",
                            "name": "viewangle"
                          }
                        ]
                      }
                    }
                  }
                },
                {
                  "kind": "FnDef",
                  "packageName": "CASEAgree",
                  "name": "WELL_FORMED_AUTOMATION_RESPONSE",
                  "args": [
                    {
                      "name": "msg",
                      "type": {
                        "kind": "DoubleDotRef",
                        "name": "CMASI::AutomationResponse.i"
                      }
                    }
                  ],
                  "type": {
                    "kind": "PrimType",
                    "primType": "bool"
                  },
                  "expr": {
                    "kind": "ForallExpr",
                    "binding": "cmd",
                    "array": {
                      "kind": "SelectionExpr",
                      "target": {
                        "kind": "NamedElmExpr",
                        "name": "msg"
                      },
                      "field": "MissionCommandList"
                    },
                    "expr": {
                      "kind": "ForallExpr",
                      "binding": "waypoint",
                      "array": {
                        "kind": "SelectionExpr",
                        "target": {
                          "kind": "NamedElmExpr",
                          "name": "cmd"
                        },
                        "field": "WaypointList"
                      },
                      "expr": {
                        "kind": "CallExpr",
                        "function": {
                          "kind": "DoubleDotRef",
                          "packageName": "CASEAgree",
                          "name": "WELL_FORMED_WAYPOINT"
                        },
                        "args": [
                          {
                            "kind": "NamedElmExpr",
                            "name": "waypoint"
                          }
                        ]
                      }
                    }
                  }
                },
                {
                  "kind": "FnDef",
                  "packageName": "CASEAgree",
                  "name": "WELL_FORMED_POINT",
                  "args": [
                    {
                      "name": "point",
                      "type": {
                        "kind": "DoubleDotRef",
                        "name": "CMASI::Location3D.i"
                      }
                    }
                  ],
                  "type": {
                    "kind": "PrimType",
                    "primType": "bool"
                  },
                  "expr": {
                    "kind": "BinaryExpr",
                    "left": {
                      "kind": "BinaryExpr",
                      "left": {
                        "kind": "BinaryExpr",
                        "left": {
                          "kind": "BinaryExpr",
                          "left": {
                            "kind": "BinaryExpr",
                            "left": {
                              "kind": "BinaryExpr",
                              "left": {
                                "kind": "SelectionExpr",
                                "target": {
                                  "kind": "NamedElmExpr",
                                  "name": "point"
                                },
                                "field": "Latitude"
                              },
                              "op": ">=",
                              "right": {
                                "kind": "NamedElmExpr",
                                "name": "LATITUDE_MIN"
                              }
                            },
                            "op": "and",
                            "right": {
                              "kind": "BinaryExpr",
                              "left": {
                                "kind": "SelectionExpr",
                                "target": {
                                  "kind": "NamedElmExpr",
                                  "name": "point"
                                },
                                "field": "Latitude"
                              },
                              "op": "<=",
                              "right": {
                                "kind": "NamedElmExpr",
                                "name": "LATITUDE_MAX"
                              }
                            }
                          },
                          "op": "and",
                          "right": {
                            "kind": "BinaryExpr",
                            "left": {
                              "kind": "SelectionExpr",
                              "target": {
                                "kind": "NamedElmExpr",
                                "name": "point"
                              },
                              "field": "Longitude"
                            },
                            "op": ">=",
                            "right": {
                              "kind": "NamedElmExpr",
                              "name": "LONGITUDE_MIN"
                            }
                          }
                        },
                        "op": "and",
                        "right": {
                          "kind": "BinaryExpr",
                          "left": {
                            "kind": "SelectionExpr",
                            "target": {
                              "kind": "NamedElmExpr",
                              "name": "point"
                            },
                            "field": "Longitude"
                          },
                          "op": "<=",
                          "right": {
                            "kind": "NamedElmExpr",
                            "name": "LONGITUDE_MAX"
                          }
                        }
                      },
                      "op": "and",
                      "right": {
                        "kind": "BinaryExpr",
                        "left": {
                          "kind": "SelectionExpr",
                          "target": {
                            "kind": "NamedElmExpr",
                            "name": "point"
                          },
                          "field": "Altitude"
                        },
                        "op": ">=",
                        "right": {
                          "kind": "NamedElmExpr",
                          "name": "ALTITUDE_MIN"
                        }
                      }
                    },
                    "op": "and",
                    "right": {
                      "kind": "BinaryExpr",
                      "left": {
                        "kind": "SelectionExpr",
                        "target": {
                          "kind": "NamedElmExpr",
                          "name": "point"
                        },
                        "field": "Altitude"
                      },
                      "op": "<=",
                      "right": {
                        "kind": "NamedElmExpr",
                        "name": "ALTITUDE_MAX"
                      }
                    }
                  }
                },
                {
                  "kind": "FnDef",
                  "packageName": "CASEAgree",
                  "name": "WELL_FORMED_VIEWANGLE",
                  "args": [
                    {
                      "name": "viewangle",
                      "type": {
                        "kind": "DoubleDotRef",
                        "name": "CMASI::Wedge.i"
                      }
                    }
                  ],
                  "type": {
                    "kind": "PrimType",
                    "primType": "bool"
                  },
                  "expr": {
                    "kind": "BinaryExpr",
                    "left": {
                      "kind": "BinaryExpr",
                      "left": {
                        "kind": "BinaryExpr",
                        "left": {
                          "kind": "BinaryExpr",
                          "left": {
                            "kind": "SelectionExpr",
                            "target": {
                              "kind": "NamedElmExpr",
                              "name": "viewangle"
                            },
                            "field": "AzimuthCenterline"
                          },
                          "op": ">=",
                          "right": {
                            "kind": "NamedElmExpr",
                            "name": "AZIMUTH_CENTERLINE_MIN"
                          }
                        },
                        "op": "and",
                        "right": {
                          "kind": "BinaryExpr",
                          "left": {
                            "kind": "SelectionExpr",
                            "target": {
                              "kind": "NamedElmExpr",
                              "name": "viewangle"
                            },
                            "field": "AzimuthCenterline"
                          },
                          "op": "<=",
                          "right": {
                            "kind": "NamedElmExpr",
                            "name": "AZIMUTH_CENTERLINE_MAX"
                          }
                        }
                      },
                      "op": "and",
                      "right": {
                        "kind": "BinaryExpr",
                        "left": {
                          "kind": "SelectionExpr",
                          "target": {
                            "kind": "NamedElmExpr",
                            "name": "viewangle"
                          },
                          "field": "VerticalCenterline"
                        },
                        "op": ">=",
                        "right": {
                          "kind": "NamedElmExpr",
                          "name": "VERTICAL_CENTERLINE_MIN"
                        }
                      }
                    },
                    "op": "and",
                    "right": {
                      "kind": "BinaryExpr",
                      "left": {
                        "kind": "SelectionExpr",
                        "target": {
                          "kind": "NamedElmExpr",
                          "name": "viewangle"
                        },
                        "field": "VerticalCenterline"
                      },
                      "op": "<=",
                      "right": {
                        "kind": "NamedElmExpr",
                        "name": "VERTICAL_CENTERLINE_MAX"
                      }
                    }
                  }
                },
                {
                  "kind": "FnDef",
                  "packageName": "CASEAgree",
                  "name": "WELL_FORMED_WAYPOINT",
                  "args": [
                    {
                      "name": "point",
                      "type": {
                        "kind": "DoubleDotRef",
                        "name": "CMASI::Waypoint.i"
                      }
                    }
                  ],
                  "type": {
                    "kind": "PrimType",
                    "primType": "bool"
                  },
                  "expr": {
                    "kind": "BinaryExpr",
                    "left": {
                      "kind": "BinaryExpr",
                      "left": {
                        "kind": "BinaryExpr",
                        "left": {
                          "kind": "BinaryExpr",
                          "left": {
                            "kind": "BinaryExpr",
                            "left": {
                              "kind": "BinaryExpr",
                              "left": {
                                "kind": "SelectionExpr",
                                "target": {
                                  "kind": "NamedElmExpr",
                                  "name": "point"
                                },
                                "field": "Latitude"
                              },
                              "op": ">=",
                              "right": {
                                "kind": "NamedElmExpr",
                                "name": "LATITUDE_MIN"
                              }
                            },
                            "op": "and",
                            "right": {
                              "kind": "BinaryExpr",
                              "left": {
                                "kind": "SelectionExpr",
                                "target": {
                                  "kind": "NamedElmExpr",
                                  "name": "point"
                                },
                                "field": "Latitude"
                              },
                              "op": "<=",
                              "right": {
                                "kind": "NamedElmExpr",
                                "name": "LATITUDE_MAX"
                              }
                            }
                          },
                          "op": "and",
                          "right": {
                            "kind": "BinaryExpr",
                            "left": {
                              "kind": "SelectionExpr",
                              "target": {
                                "kind": "NamedElmExpr",
                                "name": "point"
                              },
                              "field": "Longitude"
                            },
                            "op": ">=",
                            "right": {
                              "kind": "NamedElmExpr",
                              "name": "LONGITUDE_MIN"
                            }
                          }
                        },
                        "op": "and",
                        "right": {
                          "kind": "BinaryExpr",
                          "left": {
                            "kind": "SelectionExpr",
                            "target": {
                              "kind": "NamedElmExpr",
                              "name": "point"
                            },
                            "field": "Longitude"
                          },
                          "op": "<=",
                          "right": {
                            "kind": "NamedElmExpr",
                            "name": "LONGITUDE_MAX"
                          }
                        }
                      },
                      "op": "and",
                      "right": {
                        "kind": "BinaryExpr",
                        "left": {
                          "kind": "SelectionExpr",
                          "target": {
                            "kind": "NamedElmExpr",
                            "name": "point"
                          },
                          "field": "Altitude"
                        },
                        "op": ">=",
                        "right": {
                          "kind": "NamedElmExpr",
                          "name": "ALTITUDE_MIN"
                        }
                      }
                    },
                    "op": "and",
                    "right": {
                      "kind": "BinaryExpr",
                      "left": {
                        "kind": "SelectionExpr",
                        "target": {
                          "kind": "NamedElmExpr",
                          "name": "point"
                        },
                        "field": "Altitude"
                      },
                      "op": "<=",
                      "right": {
                        "kind": "NamedElmExpr",
                        "name": "ALTITUDE_MAX"
                      }
                    }
                  }
                },
                {
                  "kind": "FnDef",
                  "packageName": "CASEAgree",
                  "name": "GET_MISSION_COMMAND",
                  "args": [
                    {
                      "name": "automationResponse",
                      "type": {
                        "kind": "DoubleDotRef",
                        "name": "CMASI::AutomationResponse.i"
                      }
                    }
                  ],
                  "type": {
                    "kind": "DoubleDotRef",
                    "name": "CMASI::MissionCommand.i"
                  },
                  "expr": {
                    "kind": "ArraySubExpr",
                    "array": {
                      "kind": "SelectionExpr",
                      "target": {
                        "kind": "NamedElmExpr",
                        "name": "automationResponse"
                      },
                      "field": "MissionCommandList"
                    },
                    "index": {
                      "kind": "IntLitExpr",
                      "value": "0"
                    }
                  }
                },
                {
                  "kind": "FnDef",
                  "packageName": "CASEAgree",
                  "name": "WAYPOINTS_IN_ZONE",
                  "args": [
                    {
                      "name": "mission",
                      "type": {
                        "kind": "DoubleDotRef",
                        "name": "CMASI::MissionCommand.i"
                      }
                    },
                    {
                      "name": "zone",
                      "type": {
                        "kind": "DoubleDotRef",
                        "name": "CMASI::Polygon.i"
                      }
                    }
                  ],
                  "type": {
                    "kind": "PrimType",
                    "primType": "bool"
                  },
                  "expr": {
                    "kind": "ForallExpr",
                    "binding": "waypoint",
                    "array": {
                      "kind": "SelectionExpr",
                      "target": {
                        "kind": "NamedElmExpr",
                        "name": "mission"
                      },
                      "field": "WaypointList"
                    },
                    "expr": {
                      "kind": "CallExpr",
                      "function": {
                        "kind": "DoubleDotRef",
                        "packageName": "CASEAgree",
                        "name": "WAYPOINT_IN_ZONE_RECTANGLE"
                      },
                      "args": [
                        {
                          "kind": "NamedElmExpr",
                          "name": "waypoint"
                        },
                        {
                          "kind": "NamedElmExpr",
                          "name": "zone"
                        }
                      ]
                    }
                  }
                },
                {
                  "kind": "FnDef",
                  "packageName": "CASEAgree",
                  "name": "WAYPOINTS_NOT_IN_ZONE",
                  "args": [
                    {
                      "name": "mission",
                      "type": {
                        "kind": "DoubleDotRef",
                        "name": "CMASI::MissionCommand.i"
                      }
                    },
                    {
                      "name": "zone",
                      "type": {
                        "kind": "DoubleDotRef",
                        "name": "CMASI::Polygon.i"
                      }
                    }
                  ],
                  "type": {
                    "kind": "PrimType",
                    "primType": "bool"
                  },
                  "expr": {
                    "kind": "ForallExpr",
                    "binding": "waypoint",
                    "array": {
                      "kind": "SelectionExpr",
                      "target": {
                        "kind": "NamedElmExpr",
                        "name": "mission"
                      },
                      "field": "WaypointList"
                    },
                    "expr": {
                      "kind": "UnaryExpr",
                      "operand": {
                        "kind": "CallExpr",
                        "function": {
                          "kind": "DoubleDotRef",
                          "packageName": "CASEAgree",
                          "name": "WAYPOINT_IN_ZONE_RECTANGLE"
                        },
                        "args": [
                          {
                            "kind": "NamedElmExpr",
                            "name": "waypoint"
                          },
                          {
                            "kind": "NamedElmExpr",
                            "name": "zone"
                          }
                        ]
                      },
                      "op": "not"
                    }
                  }
                },
                {
                  "kind": "FnDef",
                  "packageName": "CASEAgree",
                  "name": "WAYPOINT_IN_ZONE_RECTANGLE",
                  "args": [
                    {
                      "name": "waypoint",
                      "type": {
                        "kind": "DoubleDotRef",
                        "name": "CMASI::Waypoint.i"
                      }
                    },
                    {
                      "name": "zone",
                      "type": {
                        "kind": "DoubleDotRef",
                        "name": "CMASI::Polygon.i"
                      }
                    }
                  ],
                  "type": {
                    "kind": "PrimType",
                    "primType": "bool"
                  },
                  "expr": {
                    "kind": "BinaryExpr",
                    "left": {
                      "kind": "BinaryExpr",
                      "left": {
                        "kind": "BinaryExpr",
                        "left": {
                          "kind": "BinaryExpr",
                          "left": {
                            "kind": "BinaryExpr",
                            "left": {
                              "kind": "SelectionExpr",
                              "target": {
                                "kind": "NamedElmExpr",
                                "name": "waypoint"
                              },
                              "field": "Latitude"
                            },
                            "op": ">=",
                            "right": {
                              "kind": "SelectionExpr",
                              "target": {
                                "kind": "ArraySubExpr",
                                "array": {
                                  "kind": "SelectionExpr",
                                  "target": {
                                    "kind": "NamedElmExpr",
                                    "name": "zone"
                                  },
                                  "field": "BoundaryPointsList"
                                },
                                "index": {
                                  "kind": "IntLitExpr",
                                  "value": "0"
                                }
                              },
                              "field": "Latitude"
                            }
                          },
                          "op": "and",
                          "right": {
                            "kind": "BinaryExpr",
                            "left": {
                              "kind": "SelectionExpr",
                              "target": {
                                "kind": "NamedElmExpr",
                                "name": "waypoint"
                              },
                              "field": "Latitude"
                            },
                            "op": "<=",
                            "right": {
                              "kind": "SelectionExpr",
                              "target": {
                                "kind": "ArraySubExpr",
                                "array": {
                                  "kind": "SelectionExpr",
                                  "target": {
                                    "kind": "NamedElmExpr",
                                    "name": "zone"
                                  },
                                  "field": "BoundaryPointsList"
                                },
                                "index": {
                                  "kind": "IntLitExpr",
                                  "value": "1"
                                }
                              },
                              "field": "Latitude"
                            }
                          }
                        },
                        "op": "and",
                        "right": {
                          "kind": "BinaryExpr",
                          "left": {
                            "kind": "SelectionExpr",
                            "target": {
                              "kind": "NamedElmExpr",
                              "name": "waypoint"
                            },
                            "field": "Longitude"
                          },
                          "op": ">=",
                          "right": {
                            "kind": "SelectionExpr",
                            "target": {
                              "kind": "ArraySubExpr",
                              "array": {
                                "kind": "SelectionExpr",
                                "target": {
                                  "kind": "NamedElmExpr",
                                  "name": "zone"
                                },
                                "field": "BoundaryPointsList"
                              },
                              "index": {
                                "kind": "IntLitExpr",
                                "value": "0"
                              }
                            },
                            "field": "Longitude"
                          }
                        }
                      },
                      "op": "and",
                      "right": {
                        "kind": "BinaryExpr",
                        "left": {
                          "kind": "SelectionExpr",
                          "target": {
                            "kind": "NamedElmExpr",
                            "name": "waypoint"
                          },
                          "field": "Longitude"
                        },
                        "op": "<=",
                        "right": {
                          "kind": "SelectionExpr",
                          "target": {
                            "kind": "ArraySubExpr",
                            "array": {
                              "kind": "SelectionExpr",
                              "target": {
                                "kind": "NamedElmExpr",
                                "name": "zone"
                              },
                              "field": "BoundaryPointsList"
                            },
                            "index": {
                              "kind": "IntLitExpr",
                              "value": "1"
                            }
                          },
                          "field": "Longitude"
                        }
                      }
                    },
                    "op": "and",
                    "right": {
                      "kind": "BinaryExpr",
                      "left": {
                        "kind": "SelectionExpr",
                        "target": {
                          "kind": "NamedElmExpr",
                          "name": "waypoint"
                        },
                        "field": "Altitude"
                      },
                      "op": ">=",
                      "right": {
                        "kind": "SelectionExpr",
                        "target": {
                          "kind": "ArraySubExpr",
                          "array": {
                            "kind": "SelectionExpr",
                            "target": {
                              "kind": "NamedElmExpr",
                              "name": "zone"
                            },
                            "field": "BoundaryPointsList"
                          },
                          "index": {
                            "kind": "IntLitExpr",
                            "value": "0"
                          }
                        },
                        "field": "Altitude"
                      }
                    }
                  }
                },
                {
                  "kind": "FnDef",
                  "packageName": "CASEAgree",
                  "name": "DUPLICATES_IN_MISSION",
                  "args": [
                    {
                      "name": "mission",
                      "type": {
                        "kind": "DoubleDotRef",
                        "name": "CMASI::MissionCommand.i"
                      }
                    }
                  ],
                  "type": {
                    "kind": "PrimType",
                    "primType": "bool"
                  },
                  "expr": {
                    "kind": "ExistsExpr",
                    "binding": "waypoint",
                    "array": {
                      "kind": "SelectionExpr",
                      "target": {
                        "kind": "NamedElmExpr",
                        "name": "mission"
                      },
                      "field": "WaypointList"
                    },
                    "expr": {
                      "kind": "BinaryExpr",
                      "left": {
                        "kind": "UnaryExpr",
                        "operand": {
                          "kind": "CallExpr",
                          "function": {
                            "kind": "DoubleDotRef",
                            "packageName": "CASEAgree",
                            "name": "IS_LAST_WAYPOINT"
                          },
                          "args": [
                            {
                              "kind": "NamedElmExpr",
                              "name": "waypoint"
                            }
                          ]
                        },
                        "op": "not"
                      },
                      "op": "and",
                      "right": {
                        "kind": "CallExpr",
                        "function": {
                          "kind": "DoubleDotRef",
                          "packageName": "CASEAgree",
                          "name": "IS_DUPLICATE"
                        },
                        "args": [
                          {
                            "kind": "NamedElmExpr",
                            "name": "mission"
                          },
                          {
                            "kind": "NamedElmExpr",
                            "name": "waypoint"
                          }
                        ]
                      }
                    }
                  }
                },
                {
                  "kind": "FnDef",
                  "packageName": "CASEAgree",
                  "name": "IS_LAST_WAYPOINT",
                  "args": [
                    {
                      "name": "waypoint",
                      "type": {
                        "kind": "DoubleDotRef",
                        "name": "CMASI::Waypoint.i"
                      }
                    }
                  ],
                  "type": {
                    "kind": "PrimType",
                    "primType": "bool"
                  },
                  "expr": {
                    "kind": "BinaryExpr",
                    "left": {
                      "kind": "SelectionExpr",
                      "target": {
                        "kind": "NamedElmExpr",
                        "name": "waypoint"
                      },
                      "field": "Number"
                    },
                    "op": "=",
                    "right": {
                      "kind": "SelectionExpr",
                      "target": {
                        "kind": "NamedElmExpr",
                        "name": "waypoint"
                      },
                      "field": "NextWaypoint"
                    }
                  }
                },
                {
                  "kind": "FnDef",
                  "packageName": "CASEAgree",
                  "name": "IS_DUPLICATE",
                  "args": [
                    {
                      "name": "mission",
                      "type": {
                        "kind": "DoubleDotRef",
                        "name": "CMASI::MissionCommand.i"
                      }
                    },
                    {
                      "name": "waypoint",
                      "type": {
                        "kind": "DoubleDotRef",
                        "name": "CMASI::Waypoint.i"
                      }
                    }
                  ],
                  "type": {
                    "kind": "PrimType",
                    "primType": "bool"
                  },
                  "expr": {
                    "kind": "ExistsExpr",
                    "binding": "wp",
                    "array": {
                      "kind": "SelectionExpr",
                      "target": {
                        "kind": "NamedElmExpr",
                        "name": "mission"
                      },
                      "field": "WaypointList"
                    },
                    "expr": {
                      "kind": "BinaryExpr",
                      "left": {
                        "kind": "BinaryExpr",
                        "left": {
                          "kind": "BinaryExpr",
                          "left": {
                            "kind": "BinaryExpr",
                            "left": {
                              "kind": "UnaryExpr",
                              "operand": {
                                "kind": "CallExpr",
                                "function": {
                                  "kind": "DoubleDotRef",
                                  "packageName": "CASEAgree",
                                  "name": "IS_LAST_WAYPOINT"
                                },
                                "args": [
                                  {
                                    "kind": "NamedElmExpr",
                                    "name": "wp"
                                  }
                                ]
                              },
                              "op": "not"
                            },
                            "op": "and",
                            "right": {
                              "kind": "BinaryExpr",
                              "left": {
                                "kind": "SelectionExpr",
                                "target": {
                                  "kind": "NamedElmExpr",
                                  "name": "wp"
                                },
                                "field": "Number"
                              },
                              "op": "=",
                              "right": {
                                "kind": "SelectionExpr",
                                "target": {
                                  "kind": "NamedElmExpr",
                                  "name": "waypoint"
                                },
                                "field": "NextWaypoint"
                              }
                            }
                          },
                          "op": "and",
                          "right": {
                            "kind": "BinaryExpr",
                            "left": {
                              "kind": "SelectionExpr",
                              "target": {
                                "kind": "NamedElmExpr",
                                "name": "wp"
                              },
                              "field": "Latitude"
                            },
                            "op": "=",
                            "right": {
                              "kind": "SelectionExpr",
                              "target": {
                                "kind": "NamedElmExpr",
                                "name": "waypoint"
                              },
                              "field": "Latitude"
                            }
                          }
                        },
                        "op": "and",
                        "right": {
                          "kind": "BinaryExpr",
                          "left": {
                            "kind": "SelectionExpr",
                            "target": {
                              "kind": "NamedElmExpr",
                              "name": "wp"
                            },
                            "field": "Longitude"
                          },
                          "op": "=",
                          "right": {
                            "kind": "SelectionExpr",
                            "target": {
                              "kind": "NamedElmExpr",
                              "name": "waypoint"
                            },
                            "field": "Longitude"
                          }
                        }
                      },
                      "op": "and",
                      "right": {
                        "kind": "BinaryExpr",
                        "left": {
                          "kind": "SelectionExpr",
                          "target": {
                            "kind": "NamedElmExpr",
                            "name": "wp"
                          },
                          "field": "Altitude"
                        },
                        "op": "=",
                        "right": {
                          "kind": "SelectionExpr",
                          "target": {
                            "kind": "NamedElmExpr",
                            "name": "waypoint"
                          },
                          "field": "Altitude"
                        }
                      }
                    }
                  }
                }
              ]
            },
            "sourceText": "{**\n\n    -- Message constants\n    const OPERATING_REGION_ID_MIN : int = 0;\n    const OPERATING_REGION_ID_MAX : int = 500;\n    const KEEP_IN_ZONE_ID_MIN : int = 0;\n    const KEEP_IN_ZONE_ID_MAX : int = 500;\n    const KEEP_OUT_ZONE_ID_MIN : int = 0;\n    const KEEP_OUT_ZONE_ID_MAX : int = 500;\n    const TASK_ID_MIN : int = 0;\n    const TASK_ID_MAX : int = 2000;\n    const ENTITY_ID_MIN : int = 0;\n    const ENTITY_ID_MAX : int = 500;\n    const ALTITUDE_MIN : real = 0.0;\n    const ALTITUDE_MAX : real = 15000.0;\n    const LATITUDE_MIN : real = -90.0;\n    const LATITUDE_MAX : real = 90.0;\n    const LONGITUDE_MIN : real = -180.0;\n    const LONGITUDE_MAX : real = 180.0;\n    const AZIMUTH_CENTERLINE_MIN : real = -180.0;\n    const AZIMUTH_CENTERLINE_MAX : real = 180.0;\n    const VERTICAL_CENTERLINE_MIN : real = -180.0;\n    const VERTICAL_CENTERLINE_MAX : real = 180.0;\n\n    -- UAV maximum climb rate\n\n    const MAX_UAV_CLIMB_RATE : real = 42.0;\n\n    -- Ground Station\n    const GS_ID : int = 500;\n\n    -- Flight Controller\n    const FCTL_ID : int = 100;\n\n    -- UAV ID\n    const UAV_ID : int = 400;\n\n    fun WellformedCASE_RF_Msg(msg : CASE_RF_Msg.Impl, src : int64.i, dst : int64.i ) : bool =\n       WellformedCASE_MsgHeader(msg.header, src, dst);\n\n    fun WellformedCASE_MsgHeader(hdr : CASE_MsgHeader.Impl, src : int64.i, dst : int64.i ) : bool =\n       (hdr.src = src) and (hdr.dst = dst) and (hdr.trusted = true) and (hdr.HMAC = true);\n\n    fun WellformedCASE_UART_Msg(msg : CASE_UART_Msg.Impl) : bool =\n       msg.crc = true;\n\n    fun WELL_FORMED_AUTOMATION_REQUEST(msg : CMASI::AutomationRequest.i) : bool =\n        (forall e in msg.EntityList, e >= ENTITY_ID_MIN and e <= ENTITY_ID_MAX) and\n        (forall t in msg.TaskList, t >= TASK_ID_MIN and t <= TASK_ID_MAX) and\n        msg.OperatingRegion >= OPERATING_REGION_ID_MIN and\n        msg.OperatingRegion <= OPERATING_REGION_ID_MAX;\n\n    fun WELL_FORMED_OPERATING_REGION(msg : CMASI::OperatingRegion.i) : bool =\n        msg.ID >= OPERATING_REGION_ID_MIN and msg.ID <= OPERATING_REGION_ID_MAX and\n        (forall kiz in msg.KeepInAreas, kiz >= KEEP_IN_ZONE_ID_MIN and kiz <= KEEP_IN_ZONE_ID_MAX) and\n        (forall koz in msg.KeepOutAreas, koz >= KEEP_OUT_ZONE_ID_MIN and koz <= KEEP_OUT_ZONE_ID_MAX);\n\n    fun WELL_FORMED_LINE_SEARCH_TASK(msg : CMASI::LineSearchTask.i) : bool =\n        msg.TaskID >= TASK_ID_MIN and msg.TaskID <= TASK_ID_MAX and\n        (forall point in msg.PointList, WELL_FORMED_POINT(point)) and\n        (forall viewangle in msg.ViewAngleList, WELL_FORMED_VIEWANGLE(viewangle));\n\n--   fun WELL_FORMED_AUTOMATION_RESPONSE(msg : CMASI::AutomationResponse.i) : bool =\n--     WELL_FORMED_WAYPOINT(msg.MissionCommandList[0].WaypointList[0]);\n\n   fun WELL_FORMED_AUTOMATION_RESPONSE(msg : CMASI::AutomationResponse.i) : bool =\n        forall cmd in msg.MissionCommandList,\n        forall waypoint in cmd.WaypointList,\n  WELL_FORMED_WAYPOINT(waypoint);\n\n    fun WELL_FORMED_POINT(point : CMASI::Location3D.i) : bool =\n        point.Latitude >= LATITUDE_MIN and point.Latitude <= LATITUDE_MAX and\n        point.Longitude >= LONGITUDE_MIN and point.Longitude <= LONGITUDE_MAX and\n        point.Altitude >= ALTITUDE_MIN and point.Altitude <= ALTITUDE_MAX;\n\n    fun WELL_FORMED_VIEWANGLE(viewangle : CMASI::Wedge.i) : bool =\n        viewangle.AzimuthCenterline >= AZIMUTH_CENTERLINE_MIN and\n        viewangle.AzimuthCenterline <= AZIMUTH_CENTERLINE_MAX and\n        viewangle.VerticalCenterline >= VERTICAL_CENTERLINE_MIN and\n        viewangle.VerticalCenterline <= VERTICAL_CENTERLINE_MAX;\n\n    fun WELL_FORMED_WAYPOINT(point : CMASI::Waypoint.i) : bool =\n        point.Latitude >= LATITUDE_MIN and point.Latitude <= LATITUDE_MAX and\n        point.Longitude >= LONGITUDE_MIN and point.Longitude <= LONGITUDE_MAX and\n        point.Altitude >= ALTITUDE_MIN and point.Altitude <= ALTITUDE_MAX;\n\n    fun GET_MISSION_COMMAND(automationResponse: CMASI::AutomationResponse.i) : CMASI::MissionCommand.i =\n        automationResponse.MissionCommandList[0];\n\n    fun WAYPOINTS_IN_ZONE(mission : CMASI::MissionCommand.i, zone : CMASI::Polygon.i) : bool =\n        forall waypoint in mission.WaypointList, WAYPOINT_IN_ZONE_RECTANGLE(waypoint, zone);\n\n    fun WAYPOINTS_NOT_IN_ZONE(mission : CMASI::MissionCommand.i, zone : CMASI::Polygon.i) : bool =\n        forall waypoint in mission.WaypointList, not WAYPOINT_IN_ZONE_RECTANGLE(waypoint, zone);\n\n    -- Assumes rectangle that is defined by two corners so it is aligned\n    -- with the origin (not rotated in space)\n    -- Assumes that the altitude is the same in all the coordinates\n    -- Assmes zone[0] is the bottom left corner and zone[2] in the upper right corner\n    fun WAYPOINT_IN_ZONE_RECTANGLE(waypoint : CMASI::Waypoint.i, zone : CMASI::Polygon.i) : bool =\n        (waypoint.Latitude >= (zone.BoundaryPointsList[0]).Latitude)\n        and (waypoint.Latitude <= (zone.BoundaryPointsList[1]).Latitude)\n        and (waypoint.Longitude >= (zone.BoundaryPointsList[0]).Longitude)\n        and (waypoint.Longitude <= (zone.BoundaryPointsList[1]).Longitude)\n        and (waypoint.Altitude >= (zone.BoundaryPointsList[0]).Altitude);\n\n    fun DUPLICATES_IN_MISSION(mission : CMASI::MissionCommand.i) : bool =\n        exists waypoint in mission.WaypointList,\n           not IS_LAST_WAYPOINT(waypoint) and IS_DUPLICATE(mission, waypoint) ;\n\n    fun IS_LAST_WAYPOINT(waypoint : CMASI::Waypoint.i) : bool =\n        (waypoint.Number = waypoint.NextWaypoint);\n\n    -- Checking if there exists a waypoint with the same lat,long,alt as a given waypoint\n    -- with the restriction that it follows immediately after the given waypoint in the\n    -- linked-list of waypoints.\n    fun IS_DUPLICATE(mission : CMASI::MissionCommand.i, waypoint : CMASI::Waypoint.i) : bool =\n        exists wp in mission.WaypointList,\n            not IS_LAST_WAYPOINT(wp)\n            and wp.Number = waypoint.NextWaypoint\n            and wp.Latitude = waypoint.Latitude\n            and wp.Longitude = waypoint.Longitude\n            and wp.Altitude = waypoint.Altitude;\n**}"
          }
        ]
      }
    },
    {
      "name": "Common_Data",
      "kind": "AadlPackage",
      "public": {
        "with": [
          "Base_Types"
        ],
        "components": [
          {
            "name": "Common_Data::string",
            "localName": "string",
            "kind": "ComponentType",
            "category": "data",
            "extends": "Base_Types::Integer"
          },
          {
            "packageName": "Common_Data",
            "name": "Common_Data::string.i",
            "localName": "string.i",
            "kind": "ComponentImplementation",
            "category": "data"
          },
          {
            "name": "Common_Data::real64",
            "localName": "real64",
            "kind": "ComponentType",
            "category": "data",
            "extends": "Base_Types::Float_64"
          },
          {
            "packageName": "Common_Data",
            "name": "Common_Data::real64.i",
            "localName": "real64.i",
            "kind": "ComponentImplementation",
            "category": "data"
          },
          {
            "name": "Common_Data::real32",
            "localName": "real32",
            "kind": "ComponentType",
            "category": "data",
            "extends": "Base_Types::Float_32"
          },
          {
            "packageName": "Common_Data",
            "name": "Common_Data::real32.i",
            "localName": "real32.i",
            "kind": "ComponentImplementation",
            "category": "data"
          },
          {
            "name": "Common_Data::int64",
            "localName": "int64",
            "kind": "ComponentType",
            "category": "data",
            "extends": "Base_Types::Integer_64"
          },
          {
            "packageName": "Common_Data",
            "name": "Common_Data::int64.i",
            "localName": "int64.i",
            "kind": "ComponentImplementation",
            "category": "data"
          },
          {
            "name": "Common_Data::int32",
            "localName": "int32",
            "kind": "ComponentType",
            "category": "data",
            "extends": "Base_Types::Integer_32"
          },
          {
            "packageName": "Common_Data",
            "name": "Common_Data::int32.i",
            "localName": "int32.i",
            "kind": "ComponentImplementation",
            "category": "data"
          },
          {
            "name": "Common_Data::uint32",
            "localName": "uint32",
            "kind": "ComponentType",
            "category": "data",
            "extends": "Base_Types::Unsigned_32"
          },
          {
            "packageName": "Common_Data",
            "name": "Common_Data::uint32.i",
            "localName": "uint32.i",
            "kind": "ComponentImplementation",
            "category": "data"
          },
          {
            "name": "Common_Data::byte",
            "localName": "byte",
            "kind": "ComponentType",
            "category": "data",
            "extends": "Base_Types::Unsigned_8"
          },
          {
            "packageName": "Common_Data",
            "name": "Common_Data::byte.i",
            "localName": "byte.i",
            "kind": "ComponentImplementation",
            "category": "data"
          },
          {
            "name": "Common_Data::bool",
            "localName": "bool",
            "kind": "ComponentType",
            "category": "data",
            "extends": "Base_Types::Boolean"
          },
          {
            "packageName": "Common_Data",
            "name": "Common_Data::bool.i",
            "localName": "bool.i",
            "kind": "ComponentImplementation",
            "category": "data"
          }
        ]
      }
    },
    {
      "name": "CASE_Scheduling",
      "kind": "PropertySet",
      "properties": [
        {
          "name": "CASE_Scheduling::Domain",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "thread",
            "process"
          ]
        },
        {
          "name": "CASE_Scheduling::Max_Domain",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "processor",
            "virtual processor"
          ]
        },
        {
          "name": "CASE_Scheduling::Schedule_Source_Text",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlString"
          },
          "appliesTo": [
            "processor",
            "virtual processor"
          ]
        }
      ]
    },
    {
      "name": "FC",
      "kind": "AadlPackage",
      "public": {
        "with": [
          "UAS_Buses"
        ],
        "components": [
          {
            "name": "FC::GPS_Receiver",
            "localName": "GPS_Receiver",
            "kind": "ComponentType",
            "category": "device",
            "features": [
              {
                "name": "position",
                "kind": "EventDataPort",
                "classifier": null,
                "direction": "out"
              }
            ]
          },
          {
            "packageName": "FC",
            "name": "FC::GPS_Receiver.Impl",
            "localName": "GPS_Receiver.Impl",
            "kind": "ComponentImplementation",
            "category": "device"
          },
          {
            "name": "FC::FlightController",
            "localName": "FlightController",
            "kind": "ComponentType",
            "category": "system",
            "features": [
              {
                "name": "UART",
                "kind": "BusAccess",
                "accessType": "requires",
                "bus": "UAS_Buses::Serial_Bus.Impl"
              },
              {
                "name": "uart_recv",
                "kind": "EventDataPort",
                "classifier": null,
                "direction": "in"
              },
              {
                "name": "uart_send",
                "kind": "EventDataPort",
                "classifier": null,
                "direction": "out"
              }
            ]
          },
          {
            "packageName": "FC",
            "name": "FC::FlightController.Impl",
            "localName": "FlightController.Impl",
            "kind": "ComponentImplementation",
            "category": "system",
            "subcomponents": [
              {
                "name": "GPS",
                "kind": "Subcomponent",
                "category": "device",
                "classifier": "FC::GPS_Receiver.Impl"
              }
            ],
            "connections": [
              {
                "name": "c1",
                "kind": "PortConnection",
                "source": "GPS.position",
                "destination": "uart_send",
                "bidirectional": false
              }
            ]
          }
        ]
      }
    },
    {
      "name": "Timing_Properties",
      "kind": "PropertySet",
      "properties": [
        {
          "name": "Timing_Properties::Activate_Deadline",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "thread"
          ]
        },
        {
          "name": "Timing_Properties::Activate_Execution_Time",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "RangeType",
            "numberType": {
              "kind": "AadlInteger"
            }
          },
          "appliesTo": [
            "thread"
          ]
        },
        {
          "name": "Timing_Properties::Compute_Deadline",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "thread",
            "device",
            "subprogram",
            "subprogram access",
            "event port",
            "event data port"
          ]
        },
        {
          "name": "Timing_Properties::Compute_Execution_Time",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "RangeType",
            "numberType": {
              "kind": "AadlInteger"
            }
          },
          "appliesTo": [
            "thread",
            "device",
            "subprogram",
            "event port",
            "event data port"
          ]
        },
        {
          "name": "Timing_Properties::Client_Subprogram_Execution_Time",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "RangeType",
            "numberType": {
              "kind": "AadlInteger"
            }
          },
          "appliesTo": [
            "subprogram"
          ]
        },
        {
          "name": "Timing_Properties::Deactivate_Deadline",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "thread"
          ]
        },
        {
          "name": "Timing_Properties::Deactivate_Execution_Time",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "RangeType",
            "numberType": {
              "kind": "AadlInteger"
            }
          },
          "appliesTo": [
            "thread"
          ]
        },
        {
          "name": "Timing_Properties::Deadline",
          "kind": "Property",
          "inherit": true,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "thread",
            "thread group",
            "process",
            "system",
            "device",
            "virtual processor"
          ]
        },
        {
          "name": "Timing_Properties::First_Dispatch_Time",
          "kind": "Property",
          "inherit": true,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "thread",
            "thread group"
          ]
        },
        {
          "name": "Timing_Properties::Dispatch_Jitter",
          "kind": "Property",
          "inherit": true,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "thread",
            "thread group"
          ]
        },
        {
          "name": "Timing_Properties::Dispatch_Offset",
          "kind": "Property",
          "inherit": true,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "thread"
          ]
        },
        {
          "name": "Timing_Properties::Execution_Time",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "virtual processor"
          ]
        },
        {
          "name": "Timing_Properties::Finalize_Deadline",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "thread"
          ]
        },
        {
          "name": "Timing_Properties::Finalize_Execution_Time",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "RangeType",
            "numberType": {
              "kind": "AadlInteger"
            }
          },
          "appliesTo": [
            "thread"
          ]
        },
        {
          "name": "Timing_Properties::Initialize_Deadline",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "thread"
          ]
        },
        {
          "name": "Timing_Properties::Initialize_Execution_Time",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "RangeType",
            "numberType": {
              "kind": "AadlInteger"
            }
          },
          "appliesTo": [
            "thread"
          ]
        },
        {
          "name": "Timing_Properties::Load_Deadline",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "process",
            "system"
          ]
        },
        {
          "name": "Timing_Properties::Load_Time",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "RangeType",
            "numberType": {
              "kind": "AadlInteger"
            }
          },
          "appliesTo": [
            "process",
            "system"
          ]
        },
        {
          "name": "Timing_Properties::Processor_Capacity",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlReal"
          },
          "appliesTo": [
            "processor",
            "virtual processor",
            "system"
          ]
        },
        {
          "name": "Timing_Properties::Period",
          "kind": "Property",
          "inherit": true,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "thread",
            "thread group",
            "process",
            "system",
            "device",
            "virtual processor",
            "virtual bus",
            "bus"
          ]
        },
        {
          "name": "Timing_Properties::Recover_Deadline",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "thread"
          ]
        },
        {
          "name": "Timing_Properties::Recover_Execution_Time",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "RangeType",
            "numberType": {
              "kind": "AadlInteger"
            }
          },
          "appliesTo": [
            "thread"
          ]
        },
        {
          "name": "Timing_Properties::Reference_Time",
          "kind": "Property",
          "inherit": true,
          "propertyType": {
            "kind": "ReferenceType",
            "references": [
              "device",
              "processor",
              "bus",
              "system",
              "abstract"
            ]
          },
          "appliesTo": [
            "device",
            "processor",
            "bus",
            "system",
            "memory",
            "virtual bus",
            "virtual processor"
          ]
        },
        {
          "name": "Timing_Properties::Startup_Deadline",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "processor",
            "virtual processor",
            "process",
            "system"
          ]
        },
        {
          "name": "Timing_Properties::Startup_Execution_Time",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "RangeType",
            "numberType": {
              "kind": "AadlInteger"
            }
          },
          "appliesTo": [
            "virtual processor",
            "processor",
            "process",
            "system"
          ]
        },
        {
          "name": "Timing_Properties::Clock_Jitter",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "processor",
            "device",
            "system"
          ]
        },
        {
          "name": "Timing_Properties::Clock_Period",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "processor",
            "device",
            "system"
          ]
        },
        {
          "name": "Timing_Properties::Clock_Period_Range",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "RangeType",
            "numberType": {
              "kind": "AadlInteger"
            }
          },
          "appliesTo": [
            "processor",
            "device",
            "system"
          ]
        },
        {
          "name": "Timing_Properties::Process_Swap_Execution_Time",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "RangeType",
            "numberType": {
              "kind": "AadlInteger"
            }
          },
          "appliesTo": [
            "processor",
            "virtual processor",
            "system"
          ]
        },
        {
          "name": "Timing_Properties::Reference_Processor",
          "kind": "Property",
          "inherit": true,
          "propertyType": {
            "kind": "ClassifierType",
            "classifiers": [
              "processor"
            ]
          },
          "appliesTo": [
            "subprogram",
            "subprogram group",
            "thread",
            "thread group",
            "process",
            "device",
            "system"
          ]
        },
        {
          "name": "Timing_Properties::Scheduler_Quantum",
          "kind": "Property",
          "inherit": true,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "processor"
          ]
        },
        {
          "name": "Timing_Properties::Thread_Swap_Execution_Time",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "RangeType",
            "numberType": {
              "kind": "AadlInteger"
            }
          },
          "appliesTo": [
            "processor",
            "system",
            "virtual processor"
          ]
        },
        {
          "name": "Timing_Properties::Frame_Period",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "processor",
            "virtual processor"
          ]
        },
        {
          "name": "Timing_Properties::Slot_Time",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "processor",
            "virtual processor"
          ]
        }
      ]
    },
    {
      "name": "Programming_Properties",
      "kind": "PropertySet",
      "properties": [
        {
          "name": "Programming_Properties::Activate_Entrypoint",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "ClassifierType",
            "classifiers": [
              "subprogram classifier"
            ]
          },
          "appliesTo": [
            "thread",
            "device",
            "processor",
            "virtual processor"
          ]
        },
        {
          "name": "Programming_Properties::Activate_Entrypoint_Call_Sequence",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "ReferenceType",
            "references": [
              "subprogram call sequence"
            ]
          },
          "appliesTo": [
            "thread",
            "device"
          ]
        },
        {
          "name": "Programming_Properties::Activate_Entrypoint_Source_Text",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlString"
          },
          "appliesTo": [
            "thread",
            "device",
            "virtual processor",
            "processor"
          ]
        },
        {
          "name": "Programming_Properties::Compute_Entrypoint",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "ClassifierType",
            "classifiers": [
              "subprogram classifier"
            ]
          },
          "appliesTo": [
            "thread",
            "device",
            "subprogram access",
            "event port",
            "event data port"
          ]
        },
        {
          "name": "Programming_Properties::Compute_Entrypoint_Call_Sequence",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "ReferenceType",
            "references": [
              "subprogram call sequence"
            ]
          },
          "appliesTo": [
            "thread",
            "device",
            "subprogram access",
            "event port",
            "event data port"
          ]
        },
        {
          "name": "Programming_Properties::Compute_Entrypoint_Source_Text",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlString"
          },
          "appliesTo": [
            "thread",
            "device",
            "subprogram access",
            "event port",
            "event data port"
          ]
        },
        {
          "name": "Programming_Properties::Deactivate_Entrypoint",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "ClassifierType",
            "classifiers": [
              "subprogram classifier"
            ]
          },
          "appliesTo": [
            "thread",
            "device"
          ]
        },
        {
          "name": "Programming_Properties::Deactivate_Entrypoint_Call_Sequence",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "ReferenceType",
            "references": [
              "subprogram call sequence"
            ]
          },
          "appliesTo": [
            "thread",
            "device"
          ]
        },
        {
          "name": "Programming_Properties::Deactivate_Entrypoint_Source_Text",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlString"
          },
          "appliesTo": [
            "thread"
          ]
        },
        {
          "name": "Programming_Properties::Finalize_Entrypoint",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "ClassifierType",
            "classifiers": [
              "subprogram classifier"
            ]
          },
          "appliesTo": [
            "thread",
            "device"
          ]
        },
        {
          "name": "Programming_Properties::Finalize_Entrypoint_Call_Sequence",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "ReferenceType",
            "references": [
              "subprogram call sequence"
            ]
          },
          "appliesTo": [
            "thread",
            "device"
          ]
        },
        {
          "name": "Programming_Properties::Finalize_Entrypoint_Source_Text",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlString"
          },
          "appliesTo": [
            "thread",
            "device"
          ]
        },
        {
          "name": "Programming_Properties::Initialize_Entrypoint",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "ClassifierType",
            "classifiers": [
              "subprogram classifier"
            ]
          },
          "appliesTo": [
            "thread",
            "device"
          ]
        },
        {
          "name": "Programming_Properties::Initialize_Entrypoint_Call_Sequence",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "ReferenceType",
            "references": [
              "subprogram call sequence"
            ]
          },
          "appliesTo": [
            "thread",
            "device"
          ]
        },
        {
          "name": "Programming_Properties::Initialize_Entrypoint_Source_Text",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlString"
          },
          "appliesTo": [
            "thread",
            "device"
          ]
        },
        {
          "name": "Programming_Properties::Recover_Entrypoint",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "ClassifierType",
            "classifiers": [
              "subprogram classifier"
            ]
          },
          "appliesTo": [
            "thread",
            "device"
          ]
        },
        {
          "name": "Programming_Properties::Recover_Entrypoint_Call_Sequence",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "ReferenceType",
            "references": [
              "subprogram call sequence"
            ]
          },
          "appliesTo": [
            "thread",
            "device"
          ]
        },
        {
          "name": "Programming_Properties::Recover_Entrypoint_Source_Text",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlString"
          },
          "appliesTo": [
            "thread",
            "device"
          ]
        },
        {
          "name": "Programming_Properties::Source_Language",
          "kind": "Property",
          "inherit": true,
          "propertyType": {
            "kind": "ListType",
            "propertyType": "AADL_Project::Supported_Source_Languages"
          },
          "appliesTo": [
            "subprogram",
            "data",
            "thread",
            "thread group",
            "process",
            "system",
            "bus",
            "device",
            "processor",
            "virtual processor",
            "virtual bus"
          ]
        },
        {
          "name": "Programming_Properties::Source_Name",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlString"
          },
          "appliesTo": [
            "data",
            "port",
            "subprogram",
            "parameter",
            "virtual bus",
            "virtual processor"
          ]
        },
        {
          "name": "Programming_Properties::Source_Text",
          "kind": "Property",
          "inherit": true,
          "propertyType": {
            "kind": "ListType",
            "propertyType": {
              "kind": "AadlString"
            }
          },
          "appliesTo": [
            "data",
            "port",
            "subprogram",
            "thread",
            "thread group",
            "process",
            "system",
            "virtual bus",
            "virtual processor",
            "memory",
            "bus",
            "device",
            "processor",
            "parameter",
            "feature group",
            "aadl package"
          ]
        },
        {
          "name": "Programming_Properties::Supported_Source_Language",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "ListType",
            "propertyType": "AADL_Project::Supported_Source_Languages"
          },
          "appliesTo": [
            "processor",
            "virtual processor",
            "system"
          ]
        },
        {
          "name": "Programming_Properties::Type_Source_Name",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlString"
          },
          "appliesTo": [
            "data",
            "port",
            "subprogram"
          ]
        },
        {
          "name": "Programming_Properties::Hardware_Description_Source_Text",
          "kind": "Property",
          "inherit": true,
          "propertyType": {
            "kind": "ListType",
            "propertyType": {
              "kind": "AadlString"
            }
          },
          "appliesTo": [
            "memory",
            "bus",
            "device",
            "processor",
            "system"
          ]
        },
        {
          "name": "Programming_Properties::Hardware_Source_Language",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "EnumerationType",
            "values": [
              "VHDL"
            ]
          },
          "appliesTo": [
            "memory",
            "bus",
            "device",
            "processor",
            "system"
          ]
        },
        {
          "name": "Programming_Properties::Device_Driver",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "ClassifierType",
            "classifiers": [
              "abstract implementation"
            ]
          },
          "appliesTo": [
            "device"
          ]
        }
      ]
    },
    {
      "name": "Thread_Properties",
      "kind": "PropertySet",
      "properties": [
        {
          "name": "Thread_Properties::Dispatch_Protocol",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "EnumerationType",
            "values": [
              "Periodic",
              "Sporadic",
              "Aperiodic",
              "Timed",
              "Hybrid",
              "Background"
            ]
          },
          "appliesTo": [
            "thread",
            "device",
            "virtual processor"
          ]
        },
        {
          "name": "Thread_Properties::Dispatch_Trigger",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "ListType",
            "propertyType": {
              "kind": "ReferenceType",
              "references": [
                "port"
              ]
            }
          },
          "appliesTo": [
            "device",
            "thread"
          ]
        },
        {
          "name": "Thread_Properties::Dispatch_Able",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlBoolean"
          },
          "appliesTo": [
            "thread"
          ]
        },
        {
          "name": "Thread_Properties::POSIX_Scheduling_Policy",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "EnumerationType",
            "values": [
              "SCHED_FIFO",
              "SCHED_RR",
              "SCHED_OTHERS"
            ]
          },
          "appliesTo": [
            "thread",
            "thread group"
          ]
        },
        {
          "name": "Thread_Properties::Priority",
          "kind": "Property",
          "inherit": true,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "thread",
            "thread group",
            "process",
            "system",
            "device",
            "data",
            "data access"
          ]
        },
        {
          "name": "Thread_Properties::Criticality",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "thread",
            "thread group"
          ]
        },
        {
          "name": "Thread_Properties::Time_Slot",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "ListType",
            "propertyType": {
              "kind": "AadlInteger"
            }
          },
          "appliesTo": [
            "thread",
            "thread group",
            "process",
            "virtual processor",
            "system"
          ]
        },
        {
          "name": "Thread_Properties::Concurrency_Control_Protocol",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "EnumerationType",
            "values": [
              "None_Specified",
              "Interrupt_Masking",
              "Maximum_Priority",
              "Priority_Inheritance",
              "Priority_Ceiling",
              "Spin_Lock",
              "Semaphore",
              "Protected_Access"
            ]
          },
          "appliesTo": [
            "data",
            "data access"
          ]
        },
        {
          "name": "Thread_Properties::Urgency",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "port",
            "subprogram"
          ]
        },
        {
          "name": "Thread_Properties::Dequeue_Protocol",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "EnumerationType",
            "values": [
              "OneItem",
              "MultipleItems",
              "AllItems"
            ]
          },
          "appliesTo": [
            "event port",
            "event data port"
          ]
        },
        {
          "name": "Thread_Properties::Dequeued_Items",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "event port",
            "event data port"
          ]
        },
        {
          "name": "Thread_Properties::Mode_Transition_Response",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "EnumerationType",
            "values": [
              "emergency",
              "planned"
            ]
          },
          "appliesTo": [
            "mode transition"
          ]
        },
        {
          "name": "Thread_Properties::Resumption_Policy",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "EnumerationType",
            "values": [
              "restart",
              "resume"
            ]
          },
          "appliesTo": [
            "thread",
            "thread group",
            "process",
            "system",
            "device",
            "processor",
            "memory",
            "bus",
            "system",
            "virtual bus",
            "virtual processor",
            "subprogram"
          ]
        },
        {
          "name": "Thread_Properties::Active_Thread_Handling_Protocol",
          "kind": "Property",
          "inherit": true,
          "propertyType": {
            "kind": "EnumerationType",
            "values": [
              "abort"
            ]
          },
          "appliesTo": [
            "thread",
            "thread group",
            "process",
            "system"
          ]
        },
        {
          "name": "Thread_Properties::Active_Thread_Queue_Handling_Protocol",
          "kind": "Property",
          "inherit": true,
          "propertyType": {
            "kind": "EnumerationType",
            "values": [
              "flush",
              "hold"
            ]
          },
          "appliesTo": [
            "thread",
            "thread group",
            "process",
            "system"
          ]
        },
        {
          "name": "Thread_Properties::Deactivation_Policy",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "EnumerationType",
            "values": [
              "inactive",
              "unload"
            ]
          },
          "appliesTo": [
            "thread",
            "process",
            "virtual processor",
            "processor"
          ]
        },
        {
          "name": "Thread_Properties::Runtime_Protection",
          "kind": "Property",
          "inherit": true,
          "propertyType": {
            "kind": "AadlBoolean"
          },
          "appliesTo": [
            "process",
            "system",
            "virtual processor"
          ]
        },
        {
          "name": "Thread_Properties::Subprogram_Call_Type",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "EnumerationType",
            "values": [
              "Synchronous",
              "SemiSynchronous"
            ]
          },
          "appliesTo": [
            "subprogram"
          ]
        },
        {
          "name": "Thread_Properties::Synchronized_Component",
          "kind": "Property",
          "inherit": true,
          "propertyType": {
            "kind": "AadlBoolean"
          },
          "appliesTo": [
            "thread",
            "thread group",
            "process",
            "system"
          ]
        }
      ]
    },
    {
      "name": "AADL_Project",
      "kind": "PropertySet",
      "propertyConstants": [
        {
          "name": "AADL_Project::Supported_Classifier_Equivalence_Matches",
          "kind": "PropertyConstant",
          "propertyType": {
            "kind": "ListType",
            "propertyType": {
              "kind": "ListType",
              "propertyType": {
                "kind": "ClassifierType",
                "classifiers": [
                  "data",
                  "bus",
                  "subprogram",
                  "subprogram group",
                  "feature group"
                ]
              }
            }
          },
          "value": {
            "kind": "ListValue",
            "value": []
          }
        },
        {
          "name": "AADL_Project::Supported_Classifier_Subset_Matches",
          "kind": "PropertyConstant",
          "propertyType": {
            "kind": "ListType",
            "propertyType": {
              "kind": "ListType",
              "propertyType": {
                "kind": "ClassifierType",
                "classifiers": [
                  "data",
                  "bus",
                  "subprogram",
                  "subprogram group"
                ]
              }
            }
          },
          "value": {
            "kind": "ListValue",
            "value": []
          }
        },
        {
          "name": "AADL_Project::Supported_Type_Conversions",
          "kind": "PropertyConstant",
          "propertyType": {
            "kind": "ListType",
            "propertyType": {
              "kind": "ListType",
              "propertyType": {
                "kind": "ClassifierType",
                "classifiers": [
                  "data",
                  "bus",
                  "subprogram",
                  "subprogram group"
                ]
              }
            }
          },
          "value": {
            "kind": "ListValue",
            "value": []
          }
        },
        {
          "name": "AADL_Project::Supported_Classifier_Complement_Matches",
          "kind": "PropertyConstant",
          "propertyType": {
            "kind": "ListType",
            "propertyType": {
              "kind": "ListType",
              "propertyType": {
                "kind": "ClassifierType",
                "classifiers": [
                  "feature group"
                ]
              }
            }
          },
          "value": {
            "kind": "ListValue",
            "value": []
          }
        },
        {
          "name": "AADL_Project::Max_Aadlinteger",
          "kind": "PropertyConstant",
          "propertyType": {
            "kind": "AadlInteger"
          },
          "value": {
            "kind": "IntegerLiteral",
            "value": 4294967296,
            "unit": null
          }
        },
        {
          "name": "AADL_Project::Max_Target_Integer",
          "kind": "PropertyConstant",
          "propertyType": {
            "kind": "AadlInteger"
          },
          "value": {
            "kind": "IntegerLiteral",
            "value": 4294967296,
            "unit": null
          }
        },
        {
          "name": "AADL_Project::Max_Base_Address",
          "kind": "PropertyConstant",
          "propertyType": {
            "kind": "AadlInteger"
          },
          "value": {
            "kind": "IntegerLiteral",
            "value": 4294967296,
            "unit": null
          }
        },
        {
          "name": "AADL_Project::Max_Memory_Size",
          "kind": "PropertyConstant",
          "propertyType": {
            "kind": "AadlInteger"
          },
          "value": {
            "kind": "IntegerLiteral",
            "value": 4294967296,
            "unit": "Bytes"
          }
        },
        {
          "name": "AADL_Project::Max_Queue_Size",
          "kind": "PropertyConstant",
          "propertyType": {
            "kind": "AadlInteger"
          },
          "value": {
            "kind": "IntegerLiteral",
            "value": 512,
            "unit": null
          }
        },
        {
          "name": "AADL_Project::Max_Thread_Limit",
          "kind": "PropertyConstant",
          "propertyType": {
            "kind": "AadlInteger"
          },
          "value": {
            "kind": "IntegerLiteral",
            "value": 32,
            "unit": null
          }
        },
        {
          "name": "AADL_Project::Max_Time",
          "kind": "PropertyConstant",
          "propertyType": {
            "kind": "AadlInteger"
          },
          "value": {
            "kind": "IntegerLiteral",
            "value": 1000,
            "unit": "hr"
          }
        },
        {
          "name": "AADL_Project::Max_Urgency",
          "kind": "PropertyConstant",
          "propertyType": {
            "kind": "AadlInteger"
          },
          "value": {
            "kind": "IntegerLiteral",
            "value": 12,
            "unit": null
          }
        },
        {
          "name": "AADL_Project::Max_Byte_Count",
          "kind": "PropertyConstant",
          "propertyType": {
            "kind": "AadlInteger"
          },
          "value": {
            "kind": "IntegerLiteral",
            "value": 4294967296,
            "unit": null
          }
        },
        {
          "name": "AADL_Project::Max_Word_Space",
          "kind": "PropertyConstant",
          "propertyType": {
            "kind": "AadlInteger"
          },
          "value": {
            "kind": "IntegerLiteral",
            "value": 64,
            "unit": null
          }
        },
        {
          "name": "AADL_Project::Max_Volume",
          "kind": "PropertyConstant",
          "propertyType": {
            "kind": "AadlInteger"
          },
          "value": {
            "kind": "IntegerLiteral",
            "value": 1000,
            "unit": "GBytesps"
          }
        }
      ],
      "propertyTypes": [
        {
          "name": "AADL_Project::Supported_Active_Thread_Handling_Protocols",
          "kind": "PropertyType",
          "type": {
            "kind": "EnumerationType",
            "values": [
              "abort"
            ]
          }
        },
        {
          "name": "AADL_Project::Supported_Connection_Patterns",
          "kind": "PropertyType",
          "type": {
            "kind": "EnumerationType",
            "values": [
              "One_To_One",
              "All_To_All",
              "One_To_All",
              "All_To_One",
              "Next",
              "Previous",
              "Cyclic_Next",
              "Cyclic_Previous",
              "Odd_To_Odd",
              "Even_To_Even",
              "Next_Next",
              "Cyclic_Next_Next",
              "Previous_Previous",
              "Cyclic_Previous_Previous"
            ]
          }
        },
        {
          "name": "AADL_Project::Supported_Concurrency_Control_Protocols",
          "kind": "PropertyType",
          "type": {
            "kind": "EnumerationType",
            "values": [
              "None_Specified",
              "Interrupt_Masking",
              "Maximum_Priority",
              "Priority_Inheritance",
              "Priority_Ceiling",
              "Spin_Lock",
              "Semaphore",
              "Protected_Access"
            ]
          }
        },
        {
          "name": "AADL_Project::Supported_Dispatch_Protocols",
          "kind": "PropertyType",
          "type": {
            "kind": "EnumerationType",
            "values": [
              "Periodic",
              "Sporadic",
              "Aperiodic",
              "Timed",
              "Hybrid",
              "Background"
            ]
          }
        },
        {
          "name": "AADL_Project::Supported_Queue_Processing_Protocols",
          "kind": "PropertyType",
          "type": {
            "kind": "EnumerationType",
            "values": [
              "Fifo"
            ]
          }
        },
        {
          "name": "AADL_Project::Supported_Hardware_Source_Languages",
          "kind": "PropertyType",
          "type": {
            "kind": "EnumerationType",
            "values": [
              "VHDL"
            ]
          }
        },
        {
          "name": "AADL_Project::Supported_Connection_QoS",
          "kind": "PropertyType",
          "type": {
            "kind": "EnumerationType",
            "values": [
              "GuaranteedDelivery",
              "OrderedDelivery",
              "SecureDelivery"
            ]
          }
        },
        {
          "name": "AADL_Project::Supported_Scheduling_Protocols",
          "kind": "PropertyType",
          "type": {
            "kind": "EnumerationType",
            "values": [
              "Static",
              "Round_Robin_Protocol",
              "POSIX_1003_HIGHEST_PRIORITY_FIRST_PROTOCOL",
              "FixedTimeline",
              "Cooperative",
              "RMS",
              "DMS",
              "EDF",
              "SporadicServer",
              "SlackServer",
              "ARINC653"
            ]
          }
        },
        {
          "name": "AADL_Project::Supported_Source_Languages",
          "kind": "PropertyType",
          "type": {
            "kind": "EnumerationType",
            "values": [
              "Ada95",
              "Ada2005",
              "C",
              "Java",
              "Simulink_6_5",
              "SCADE"
            ]
          }
        },
        {
          "name": "AADL_Project::Supported_Distributions",
          "kind": "PropertyType",
          "type": {
            "kind": "EnumerationType",
            "values": [
              "Fixed",
              "Poisson"
            ]
          }
        },
        {
          "name": "AADL_Project::Supported_Classifier_Substitutions",
          "kind": "PropertyType",
          "type": {
            "kind": "EnumerationType",
            "values": [
              "Classifier_Match",
              "Type_Extension",
              "Signature_Match"
            ]
          }
        },
        {
          "name": "AADL_Project::Time",
          "kind": "PropertyType",
          "type": {
            "kind": "AadlInteger"
          }
        },
        {
          "name": "AADL_Project::Time_Range",
          "kind": "PropertyType",
          "type": {
            "kind": "RangeType",
            "numberType": {
              "kind": "AadlInteger"
            }
          }
        },
        {
          "name": "AADL_Project::Size",
          "kind": "PropertyType",
          "type": {
            "kind": "AadlInteger"
          }
        },
        {
          "name": "AADL_Project::Size_Range",
          "kind": "PropertyType",
          "type": {
            "kind": "RangeType",
            "numberType": {
              "kind": "AadlInteger"
            }
          }
        },
        {
          "name": "AADL_Project::Size_Units",
          "kind": "PropertyType",
          "type": {
            "kind": "EnumerationType",
            "values": [
              "bits",
              "Bytes",
              "KByte",
              "MByte",
              "GByte",
              "TByte"
            ]
          }
        },
        {
          "name": "AADL_Project::Time_Units",
          "kind": "PropertyType",
          "type": {
            "kind": "EnumerationType",
            "values": [
              "ps",
              "ns",
              "us",
              "ms",
              "sec",
              "min",
              "hr"
            ]
          }
        },
        {
          "name": "AADL_Project::Data_Rate_Units",
          "kind": "PropertyType",
          "type": {
            "kind": "EnumerationType",
            "values": [
              "bitsps",
              "Bytesps",
              "KBytesps",
              "MBytesps",
              "GBytesps"
            ]
          }
        },
        {
          "name": "AADL_Project::Data_Volume_Units",
          "kind": "PropertyType",
          "type": {
            "kind": "EnumerationType",
            "values": [
              "bitsps",
              "Bytesps",
              "KBytesps",
              "MBytesps",
              "GBytesps"
            ]
          }
        },
        {
          "name": "AADL_Project::Data_Volume",
          "kind": "PropertyType",
          "type": {
            "kind": "AadlInteger"
          }
        },
        {
          "name": "AADL_Project::Processor_Speed_Units",
          "kind": "PropertyType",
          "type": {
            "kind": "EnumerationType",
            "values": [
              "KIPS",
              "MIPS",
              "GIPS"
            ]
          }
        }
      ]
    },
    {
      "name": "Communication_Properties",
      "kind": "PropertySet",
      "properties": [
        {
          "name": "Communication_Properties::Fan_Out_Policy",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "EnumerationType",
            "values": [
              "Broadcast",
              "RoundRobin",
              "Selective",
              "OnDemand"
            ]
          },
          "appliesTo": [
            "feature"
          ]
        },
        {
          "name": "Communication_Properties::Connection_Pattern",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "ListType",
            "propertyType": {
              "kind": "ListType",
              "propertyType": "AADL_Project::Supported_Connection_Patterns"
            }
          },
          "appliesTo": [
            "connection"
          ]
        },
        {
          "name": "Communication_Properties::Connection_Set",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "ListType",
            "propertyType": "Communication_Properties::Connection_Pair"
          },
          "appliesTo": [
            "connection"
          ]
        },
        {
          "name": "Communication_Properties::Overflow_Handling_Protocol",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "EnumerationType",
            "values": [
              "DropOldest",
              "DropNewest",
              "Error"
            ]
          },
          "appliesTo": [
            "event port",
            "event data port",
            "subprogram access"
          ]
        },
        {
          "name": "Communication_Properties::Queue_Processing_Protocol",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "EnumerationType",
            "values": [
              "Fifo"
            ]
          },
          "appliesTo": [
            "event port",
            "event data port",
            "subprogram access"
          ]
        },
        {
          "name": "Communication_Properties::Queue_Size",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "event port",
            "event data port",
            "subprogram access"
          ]
        },
        {
          "name": "Communication_Properties::Required_Connection",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlBoolean"
          },
          "appliesTo": [
            "feature"
          ]
        },
        {
          "name": "Communication_Properties::Timing",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "EnumerationType",
            "values": [
              "sampled",
              "immediate",
              "delayed"
            ]
          },
          "appliesTo": [
            "port connection"
          ]
        },
        {
          "name": "Communication_Properties::Transmission_Type",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "EnumerationType",
            "values": [
              "push",
              "pull"
            ]
          },
          "appliesTo": [
            "feature",
            "connection",
            "bus",
            "virtual bus"
          ]
        },
        {
          "name": "Communication_Properties::Input_Rate",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "RecordType",
            "fields": [
              {
                "name": "Value_Range",
                "propertyType": {
                  "kind": "RangeType",
                  "numberType": {
                    "kind": "AadlReal"
                  }
                }
              },
              {
                "name": "Rate_Unit",
                "propertyType": {
                  "kind": "EnumerationType",
                  "values": [
                    "PerSecond",
                    "PerDispatch"
                  ]
                }
              },
              {
                "name": "Rate_Distribution",
                "propertyType": {
                  "kind": "AADL_Project::Supported_Distributions"
                }
              }
            ]
          },
          "appliesTo": [
            "feature"
          ]
        },
        {
          "name": "Communication_Properties::Input_Time",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "ListType",
            "propertyType": "Communication_Properties::IO_Time_Spec"
          },
          "appliesTo": [
            "feature"
          ]
        },
        {
          "name": "Communication_Properties::Output_Rate",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "RecordType",
            "fields": [
              {
                "name": "Value_Range",
                "propertyType": {
                  "kind": "RangeType",
                  "numberType": {
                    "kind": "AadlReal"
                  }
                }
              },
              {
                "name": "Rate_Unit",
                "propertyType": {
                  "kind": "EnumerationType",
                  "values": [
                    "PerSecond",
                    "PerDispatch"
                  ]
                }
              },
              {
                "name": "Rate_Distribution",
                "propertyType": {
                  "kind": "AADL_Project::Supported_Distributions"
                }
              }
            ]
          },
          "appliesTo": [
            "feature"
          ]
        },
        {
          "name": "Communication_Properties::Output_Time",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "ListType",
            "propertyType": "Communication_Properties::IO_Time_Spec"
          },
          "appliesTo": [
            "feature"
          ]
        },
        {
          "name": "Communication_Properties::Subprogram_Call_Rate",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "RecordType",
            "fields": [
              {
                "name": "Value_Range",
                "propertyType": {
                  "kind": "RangeType",
                  "numberType": {
                    "kind": "AadlReal"
                  }
                }
              },
              {
                "name": "Rate_Unit",
                "propertyType": {
                  "kind": "EnumerationType",
                  "values": [
                    "PerSecond",
                    "PerDispatch"
                  ]
                }
              },
              {
                "name": "Rate_Distribution",
                "propertyType": {
                  "kind": "AADL_Project::Supported_Distributions"
                }
              }
            ]
          },
          "appliesTo": [
            "subprogram access"
          ]
        },
        {
          "name": "Communication_Properties::Transmission_Time",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "RecordType",
            "fields": [
              {
                "name": "Fixed",
                "propertyType": {
                  "kind": "AADL_Project::Time_Range"
                }
              },
              {
                "name": "PerByte",
                "propertyType": {
                  "kind": "AADL_Project::Time_Range"
                }
              }
            ]
          },
          "appliesTo": [
            "bus",
            "system",
            "device",
            "processor",
            "memory",
            "virtual bus",
            "virtual processor"
          ]
        },
        {
          "name": "Communication_Properties::Actual_Latency",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "RangeType",
            "numberType": {
              "kind": "AadlInteger"
            }
          },
          "appliesTo": [
            "flow",
            "connection",
            "virtual bus",
            "bus",
            "processor",
            "virtual processor",
            "device",
            "system",
            "feature",
            "memory"
          ]
        },
        {
          "name": "Communication_Properties::Latency",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "RangeType",
            "numberType": {
              "kind": "AadlInteger"
            }
          },
          "appliesTo": [
            "flow",
            "connection",
            "virtual bus",
            "bus",
            "processor",
            "virtual processor",
            "device",
            "system",
            "feature",
            "memory"
          ]
        },
        {
          "name": "Communication_Properties::Data_Rate",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "feature",
            "connection",
            "bus",
            "virtual bus",
            "system",
            "processor",
            "virtual processor",
            "memory",
            "device"
          ]
        }
      ],
      "propertyTypes": [
        {
          "name": "Communication_Properties::Connection_Pair",
          "kind": "PropertyType",
          "type": {
            "kind": "RecordType",
            "fields": [
              {
                "name": "src",
                "propertyType": {
                  "kind": "ListType",
                  "propertyType": {
                    "kind": "AadlInteger"
                  }
                }
              },
              {
                "name": "dst",
                "propertyType": {
                  "kind": "ListType",
                  "propertyType": {
                    "kind": "AadlInteger"
                  }
                }
              }
            ]
          }
        },
        {
          "name": "Communication_Properties::IO_Time_Spec",
          "kind": "PropertyType",
          "type": {
            "kind": "RecordType",
            "fields": [
              {
                "name": "Offset",
                "propertyType": {
                  "kind": "AADL_Project::Time_Range"
                }
              },
              {
                "name": "Time",
                "propertyType": {
                  "kind": "Communication_Properties::IO_Reference_Time"
                }
              }
            ]
          }
        },
        {
          "name": "Communication_Properties::IO_Reference_Time",
          "kind": "PropertyType",
          "type": {
            "kind": "EnumerationType",
            "values": [
              "Dispatch",
              "Start",
              "Completion",
              "Deadline",
              "NoIO",
              "Dynamic"
            ]
          }
        },
        {
          "name": "Communication_Properties::Rate_Spec",
          "kind": "PropertyType",
          "type": {
            "kind": "RecordType",
            "fields": [
              {
                "name": "Value_Range",
                "propertyType": {
                  "kind": "RangeType",
                  "numberType": {
                    "kind": "AadlReal"
                  }
                }
              },
              {
                "name": "Rate_Unit",
                "propertyType": {
                  "kind": "EnumerationType",
                  "values": [
                    "PerSecond",
                    "PerDispatch"
                  ]
                }
              },
              {
                "name": "Rate_Distribution",
                "propertyType": {
                  "kind": "AADL_Project::Supported_Distributions"
                }
              }
            ]
          }
        }
      ]
    },
    {
      "name": "Memory_Properties",
      "kind": "PropertySet",
      "properties": [
        {
          "name": "Memory_Properties::Access_Right",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "EnumerationType",
            "values": [
              "read_only",
              "write_only",
              "read_write",
              "by_method"
            ]
          },
          "appliesTo": [
            "data",
            "bus",
            "data access",
            "bus access"
          ]
        },
        {
          "name": "Memory_Properties::Access_Time",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "RecordType",
            "fields": [
              {
                "name": "First",
                "propertyType": {
                  "kind": "Communication_Properties::IO_Time_Spec"
                }
              },
              {
                "name": "Last",
                "propertyType": {
                  "kind": "Communication_Properties::IO_Time_Spec"
                }
              }
            ]
          },
          "appliesTo": [
            "data access",
            "data"
          ]
        },
        {
          "name": "Memory_Properties::Allowed_Message_Size",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "RangeType",
            "numberType": {
              "kind": "AadlInteger"
            }
          },
          "appliesTo": [
            "bus"
          ]
        },
        {
          "name": "Memory_Properties::Assign_Time",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "RecordType",
            "fields": [
              {
                "name": "Fixed",
                "propertyType": {
                  "kind": "AADL_Project::Time_Range"
                }
              },
              {
                "name": "PerByte",
                "propertyType": {
                  "kind": "AADL_Project::Time_Range"
                }
              }
            ]
          },
          "appliesTo": [
            "processor"
          ]
        },
        {
          "name": "Memory_Properties::Base_Address",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "memory",
            "data",
            "data access",
            "port"
          ]
        },
        {
          "name": "Memory_Properties::Device_Register_Address",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "port",
            "feature group"
          ]
        },
        {
          "name": "Memory_Properties::Read_Time",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "RecordType",
            "fields": [
              {
                "name": "Fixed",
                "propertyType": {
                  "kind": "AADL_Project::Time_Range"
                }
              },
              {
                "name": "PerByte",
                "propertyType": {
                  "kind": "AADL_Project::Time_Range"
                }
              }
            ]
          },
          "appliesTo": [
            "memory"
          ]
        },
        {
          "name": "Memory_Properties::Code_Size",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "data",
            "thread",
            "thread group",
            "process",
            "system",
            "subprogram",
            "processor",
            "virtual processor",
            "virtual bus",
            "device"
          ]
        },
        {
          "name": "Memory_Properties::Data_Size",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "data",
            "feature",
            "subprogram",
            "thread",
            "thread group",
            "process",
            "system",
            "processor",
            "virtual processor",
            "virtual bus",
            "bus",
            "device"
          ]
        },
        {
          "name": "Memory_Properties::Heap_Size",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "thread",
            "subprogram",
            "thread group",
            "process",
            "system",
            "processor",
            "virtual processor",
            "device"
          ]
        },
        {
          "name": "Memory_Properties::Stack_Size",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "thread",
            "subprogram",
            "processor",
            "virtual processor",
            "device"
          ]
        },
        {
          "name": "Memory_Properties::Source_Code_Size",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "data",
            "thread",
            "thread group",
            "process",
            "system",
            "subprogram",
            "processor",
            "virtual processor",
            "device"
          ]
        },
        {
          "name": "Memory_Properties::Source_Data_Size",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "data",
            "feature",
            "subprogram",
            "thread",
            "thread group",
            "process",
            "system",
            "processor",
            "virtual processor",
            "device"
          ]
        },
        {
          "name": "Memory_Properties::Source_Heap_Size",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "thread",
            "subprogram"
          ]
        },
        {
          "name": "Memory_Properties::Source_Stack_Size",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "thread",
            "subprogram",
            "processor",
            "virtual processor",
            "device"
          ]
        },
        {
          "name": "Memory_Properties::Byte_Count",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "memory"
          ]
        },
        {
          "name": "Memory_Properties::Memory_Size",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "memory",
            "system",
            "processor",
            "virtual processor"
          ]
        },
        {
          "name": "Memory_Properties::Word_Size",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "memory"
          ]
        },
        {
          "name": "Memory_Properties::Word_Space",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "memory"
          ]
        },
        {
          "name": "Memory_Properties::Write_Time",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "RecordType",
            "fields": [
              {
                "name": "Fixed",
                "propertyType": {
                  "kind": "AADL_Project::Time_Range"
                }
              },
              {
                "name": "PerByte",
                "propertyType": {
                  "kind": "AADL_Project::Time_Range"
                }
              }
            ]
          },
          "appliesTo": [
            "memory"
          ]
        }
      ],
      "propertyTypes": [
        {
          "name": "Memory_Properties::Access_Rights",
          "kind": "PropertyType",
          "type": {
            "kind": "EnumerationType",
            "values": [
              "read_only",
              "write_only",
              "read_write",
              "by_method"
            ]
          }
        }
      ]
    },
    {
      "name": "Deployment_Properties",
      "kind": "PropertySet",
      "properties": [
        {
          "name": "Deployment_Properties::Allowed_Processor_Binding_Class",
          "kind": "Property",
          "inherit": true,
          "propertyType": {
            "kind": "ListType",
            "propertyType": {
              "kind": "ClassifierType",
              "classifiers": [
                "processor",
                "virtual processor",
                "system",
                "device",
                "abstract"
              ]
            }
          },
          "appliesTo": [
            "thread",
            "thread group",
            "process",
            "system",
            "virtual processor",
            "device"
          ]
        },
        {
          "name": "Deployment_Properties::Allowed_Processor_Binding",
          "kind": "Property",
          "inherit": true,
          "propertyType": {
            "kind": "ListType",
            "propertyType": {
              "kind": "ReferenceType",
              "references": [
                "processor",
                "virtual processor",
                "system",
                "device",
                "abstract"
              ]
            }
          },
          "appliesTo": [
            "thread",
            "thread group",
            "process",
            "system",
            "virtual processor",
            "device"
          ]
        },
        {
          "name": "Deployment_Properties::Actual_Processor_Binding",
          "kind": "Property",
          "inherit": true,
          "propertyType": {
            "kind": "ListType",
            "propertyType": {
              "kind": "ReferenceType",
              "references": [
                "processor",
                "virtual processor",
                "system",
                "device",
                "abstract"
              ]
            }
          },
          "appliesTo": [
            "thread",
            "thread group",
            "process",
            "system",
            "virtual processor",
            "device"
          ]
        },
        {
          "name": "Deployment_Properties::Allowed_Memory_Binding_Class",
          "kind": "Property",
          "inherit": true,
          "propertyType": {
            "kind": "ListType",
            "propertyType": {
              "kind": "ClassifierType",
              "classifiers": [
                "memory",
                "system",
                "processor",
                "virtual processor",
                "abstract"
              ]
            }
          },
          "appliesTo": [
            "thread",
            "thread group",
            "process",
            "system",
            "device",
            "data",
            "data port",
            "event data port",
            "subprogram",
            "subprogram group",
            "processor",
            "virtual processor"
          ]
        },
        {
          "name": "Deployment_Properties::Allowed_Memory_Binding",
          "kind": "Property",
          "inherit": true,
          "propertyType": {
            "kind": "ListType",
            "propertyType": {
              "kind": "ReferenceType",
              "references": [
                "memory",
                "system",
                "processor",
                "virtual processor",
                "abstract"
              ]
            }
          },
          "appliesTo": [
            "memory",
            "thread",
            "thread group",
            "process",
            "system",
            "device",
            "data",
            "data port",
            "event data port",
            "subprogram",
            "subprogram group",
            "processor",
            "virtual processor"
          ]
        },
        {
          "name": "Deployment_Properties::Actual_Memory_Binding",
          "kind": "Property",
          "inherit": true,
          "propertyType": {
            "kind": "ListType",
            "propertyType": {
              "kind": "ReferenceType",
              "references": [
                "memory",
                "system",
                "processor",
                "virtual processor",
                "abstract"
              ]
            }
          },
          "appliesTo": [
            "memory",
            "thread",
            "thread group",
            "process",
            "system",
            "processor",
            "virtual processor",
            "device",
            "data",
            "data port",
            "event data port",
            "subprogram",
            "subprogram group"
          ]
        },
        {
          "name": "Deployment_Properties::Allowed_Connection_Binding_Class",
          "kind": "Property",
          "inherit": true,
          "propertyType": {
            "kind": "ListType",
            "propertyType": {
              "kind": "ClassifierType",
              "classifiers": [
                "processor",
                "virtual processor",
                "bus",
                "virtual bus",
                "device",
                "memory",
                "system",
                "abstract"
              ]
            }
          },
          "appliesTo": [
            "feature",
            "connection",
            "thread",
            "thread group",
            "process",
            "system",
            "virtual bus"
          ]
        },
        {
          "name": "Deployment_Properties::Allowed_Connection_Binding",
          "kind": "Property",
          "inherit": true,
          "propertyType": {
            "kind": "ListType",
            "propertyType": {
              "kind": "ReferenceType",
              "references": [
                "processor",
                "virtual processor",
                "bus",
                "virtual bus",
                "device",
                "memory",
                "system",
                "abstract"
              ]
            }
          },
          "appliesTo": [
            "feature",
            "connection",
            "thread",
            "thread group",
            "process",
            "system",
            "virtual bus"
          ]
        },
        {
          "name": "Deployment_Properties::Actual_Connection_Binding",
          "kind": "Property",
          "inherit": true,
          "propertyType": {
            "kind": "ListType",
            "propertyType": {
              "kind": "ReferenceType",
              "references": [
                "processor",
                "virtual processor",
                "bus",
                "virtual bus",
                "device",
                "memory",
                "system",
                "abstract"
              ]
            }
          },
          "appliesTo": [
            "feature",
            "connection",
            "thread",
            "thread group",
            "process",
            "system",
            "virtual bus"
          ]
        },
        {
          "name": "Deployment_Properties::Actual_Function_Binding",
          "kind": "Property",
          "inherit": true,
          "propertyType": {
            "kind": "ListType",
            "propertyType": {
              "kind": "ReferenceType",
              "references": [
                "processor",
                "virtual processor",
                "bus",
                "virtual bus",
                "device",
                "memory",
                "system",
                "process",
                "thread",
                "feature",
                "abstract"
              ]
            }
          },
          "appliesTo": [
            "subprogram",
            "thread",
            "thread group",
            "process",
            "system",
            "abstract",
            "feature"
          ]
        },
        {
          "name": "Deployment_Properties::Allowed_Subprogram_Call",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "ListType",
            "propertyType": {
              "kind": "ReferenceType",
              "references": [
                "subprogram"
              ]
            }
          },
          "appliesTo": [
            "subprogram access"
          ]
        },
        {
          "name": "Deployment_Properties::Actual_Subprogram_Call",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "ReferenceType",
            "references": [
              "subprogram"
            ]
          },
          "appliesTo": [
            "subprogram access"
          ]
        },
        {
          "name": "Deployment_Properties::Allowed_Subprogram_Call_Binding",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "ListType",
            "propertyType": {
              "kind": "ReferenceType",
              "references": [
                "bus",
                "processor",
                "device"
              ]
            }
          },
          "appliesTo": [
            "subprogram",
            "thread",
            "thread group",
            "process",
            "system"
          ]
        },
        {
          "name": "Deployment_Properties::Actual_Subprogram_Call_Binding",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "ListType",
            "propertyType": {
              "kind": "ReferenceType",
              "references": [
                "bus",
                "processor",
                "memory",
                "device"
              ]
            }
          },
          "appliesTo": [
            "subprogram"
          ]
        },
        {
          "name": "Deployment_Properties::Provided_Virtual_Bus_Class",
          "kind": "Property",
          "inherit": true,
          "propertyType": {
            "kind": "ListType",
            "propertyType": {
              "kind": "ClassifierType",
              "classifiers": [
                "virtual bus"
              ]
            }
          },
          "appliesTo": [
            "bus",
            "virtual bus",
            "processor",
            "virtual processor",
            "device",
            "memory",
            "system"
          ]
        },
        {
          "name": "Deployment_Properties::Required_Virtual_Bus_Class",
          "kind": "Property",
          "inherit": true,
          "propertyType": {
            "kind": "ListType",
            "propertyType": {
              "kind": "ClassifierType",
              "classifiers": [
                "virtual bus"
              ]
            }
          },
          "appliesTo": [
            "virtual bus",
            "connection",
            "port",
            "thread",
            "thread group",
            "process",
            "system",
            "device"
          ]
        },
        {
          "name": "Deployment_Properties::Provided_Connection_Quality_Of_Service",
          "kind": "Property",
          "inherit": true,
          "propertyType": {
            "kind": "ListType",
            "propertyType": "AADL_Project::Supported_Connection_QoS"
          },
          "appliesTo": [
            "bus",
            "virtual bus",
            "processor",
            "virtual processor",
            "system",
            "device",
            "memory"
          ]
        },
        {
          "name": "Deployment_Properties::Required_Connection_Quality_Of_Service",
          "kind": "Property",
          "inherit": true,
          "propertyType": {
            "kind": "ListType",
            "propertyType": "AADL_Project::Supported_Connection_QoS"
          },
          "appliesTo": [
            "port",
            "connection",
            "virtual bus",
            "thread",
            "thread group",
            "process",
            "system",
            "device"
          ]
        },
        {
          "name": "Deployment_Properties::Not_Collocated",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "RecordType",
            "fields": [
              {
                "name": "Targets",
                "propertyType": {
                  "kind": "ListType",
                  "propertyType": {
                    "kind": "ReferenceType",
                    "references": [
                      "data",
                      "thread",
                      "process",
                      "system",
                      "connection"
                    ]
                  }
                }
              },
              {
                "name": "Location",
                "propertyType": {
                  "kind": "ClassifierType",
                  "classifiers": [
                    "processor",
                    "memory",
                    "bus",
                    "system"
                  ]
                }
              }
            ]
          },
          "appliesTo": [
            "process",
            "system"
          ]
        },
        {
          "name": "Deployment_Properties::Collocated",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "RecordType",
            "fields": [
              {
                "name": "Targets",
                "propertyType": {
                  "kind": "ListType",
                  "propertyType": {
                    "kind": "ReferenceType",
                    "references": [
                      "data",
                      "thread",
                      "process",
                      "system",
                      "connection"
                    ]
                  }
                }
              },
              {
                "name": "Location",
                "propertyType": {
                  "kind": "ClassifierType",
                  "classifiers": [
                    "processor",
                    "memory",
                    "bus",
                    "system"
                  ]
                }
              }
            ]
          },
          "appliesTo": [
            "process",
            "system"
          ]
        },
        {
          "name": "Deployment_Properties::Allowed_Connection_Type",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "ListType",
            "propertyType": {
              "kind": "EnumerationType",
              "values": [
                "Sampled_Data_Connection",
                "Immediate_Data_Connection",
                "Delayed_Data_Connection",
                "Port_Connection",
                "Data_Access_Connection",
                "Subprogram_Access_Connection"
              ]
            }
          },
          "appliesTo": [
            "bus",
            "device"
          ]
        },
        {
          "name": "Deployment_Properties::Allowed_Dispatch_Protocol",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "ListType",
            "propertyType": "AADL_Project::Supported_Dispatch_Protocols"
          },
          "appliesTo": [
            "processor",
            "virtual processor"
          ]
        },
        {
          "name": "Deployment_Properties::Allowed_Period",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "ListType",
            "propertyType": "AADL_Project::Time_Range"
          },
          "appliesTo": [
            "processor",
            "system",
            "virtual processor"
          ]
        },
        {
          "name": "Deployment_Properties::Allowed_Physical_Access_Class",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "ListType",
            "propertyType": {
              "kind": "ClassifierType",
              "classifiers": [
                "device",
                "processor",
                "memory",
                "bus"
              ]
            }
          },
          "appliesTo": [
            "bus"
          ]
        },
        {
          "name": "Deployment_Properties::Allowed_Physical_Access",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "ListType",
            "propertyType": {
              "kind": "ReferenceType",
              "references": [
                "device",
                "processor",
                "memory",
                "bus"
              ]
            }
          },
          "appliesTo": [
            "bus"
          ]
        },
        {
          "name": "Deployment_Properties::Memory_Protocol",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "EnumerationType",
            "values": [
              "execute_only",
              "read_only",
              "write_only",
              "read_write"
            ]
          },
          "appliesTo": [
            "memory"
          ]
        },
        {
          "name": "Deployment_Properties::Runtime_Protection_Support",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlBoolean"
          },
          "appliesTo": [
            "processor",
            "virtual processor"
          ]
        },
        {
          "name": "Deployment_Properties::Scheduling_Protocol",
          "kind": "Property",
          "inherit": true,
          "propertyType": {
            "kind": "ListType",
            "propertyType": "AADL_Project::Supported_Scheduling_Protocols"
          },
          "appliesTo": [
            "virtual processor",
            "processor",
            "system"
          ]
        },
        {
          "name": "Deployment_Properties::Preemptive_Scheduler",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlBoolean"
          },
          "appliesTo": [
            "processor"
          ]
        },
        {
          "name": "Deployment_Properties::Thread_Limit",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "AadlInteger"
          },
          "appliesTo": [
            "processor",
            "virtual processor"
          ]
        },
        {
          "name": "Deployment_Properties::Priority_Map",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "ListType",
            "propertyType": "Deployment_Properties::Priority_Mapping"
          },
          "appliesTo": [
            "processor"
          ]
        },
        {
          "name": "Deployment_Properties::Priority_Range",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "RangeType",
            "numberType": {
              "kind": "AadlInteger"
            }
          },
          "appliesTo": [
            "processor",
            "virtual processor"
          ]
        }
      ],
      "propertyTypes": [
        {
          "name": "Deployment_Properties::Priority_Mapping",
          "kind": "PropertyType",
          "type": {
            "kind": "RecordType",
            "fields": [
              {
                "name": "Aadl_Priority",
                "propertyType": {
                  "kind": "AadlInteger"
                }
              },
              {
                "name": "RTOS_Priority",
                "propertyType": {
                  "kind": "AadlInteger"
                }
              }
            ]
          }
        }
      ]
    },
    {
      "name": "Modeling_Properties",
      "kind": "PropertySet",
      "properties": [
        {
          "name": "Modeling_Properties::Acceptable_Array_Size",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "ListType",
            "propertyType": "Modeling_Properties::Array_Size_Range"
          },
          "appliesTo": [
            "subcomponent",
            "feature"
          ]
        },
        {
          "name": "Modeling_Properties::Classifier_Matching_Rule",
          "kind": "Property",
          "inherit": true,
          "propertyType": {
            "kind": "EnumerationType",
            "values": [
              "Classifier_Match",
              "Equivalence",
              "Subset",
              "Conversion"
            ]
          },
          "appliesTo": [
            "connection",
            "component implementation"
          ]
        },
        {
          "name": "Modeling_Properties::Classifier_Substitution_Rule",
          "kind": "Property",
          "inherit": true,
          "propertyType": {
            "kind": "EnumerationType",
            "values": [
              "Classifier_Match",
              "Type_Extension",
              "Signature_Match"
            ]
          },
          "appliesTo": [
            "classifier",
            "subcomponent",
            "feature"
          ]
        },
        {
          "name": "Modeling_Properties::Implemented_As",
          "kind": "Property",
          "inherit": false,
          "propertyType": {
            "kind": "ClassifierType",
            "classifiers": [
              "system implementation",
              "abstract implementation"
            ]
          },
          "appliesTo": [
            "memory",
            "bus",
            "virtual bus",
            "device",
            "virtual processor",
            "processor",
            "system"
          ]
        },
        {
          "name": "Modeling_Properties::Prototype_Substitution_Rule",
          "kind": "Property",
          "inherit": true,
          "propertyType": {
            "kind": "EnumerationType",
            "values": [
              "Classifier_Match",
              "Type_Extension",
              "Signature_Match"
            ]
          },
          "appliesTo": [
            "prototype",
            "classifier"
          ]
        }
      ],
      "propertyTypes": [
        {
          "name": "Modeling_Properties::Array_Size_Range",
          "kind": "PropertyType",
          "type": {
            "kind": "RangeType",
            "numberType": {
              "kind": "AadlInteger"
            }
          }
        }
      ]
    }
  ]
}